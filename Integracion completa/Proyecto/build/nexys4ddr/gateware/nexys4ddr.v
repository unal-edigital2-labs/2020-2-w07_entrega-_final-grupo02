//--------------------------------------------------------------------------------
// Auto-generated by Migen (a5cc037) & LiteX (32989c17) on 2020-12-15 10:38:52
//--------------------------------------------------------------------------------
module nexys4ddr(
	output reg serial_tx,
	input wire serial_rx,
	input wire clk,
	input wire cpu_reset,
	output wire led0,
	output wire led1,
	output wire led2,
	output wire led3,
	output wire led4,
	output wire led5,
	output wire led6,
	output wire led7,
	output wire led8,
	output wire led9,
	input wire sw0,
	input wire sw1,
	input wire sw2,
	input wire sw3,
	input wire sw4,
	input wire sw5,
	input wire sw6,
	input wire sw7,
	input wire btnc,
	input wire btnr,
	input wire btnl,
	output wire display_segment0,
	output wire display_segment1,
	output wire display_segment2,
	output wire display_segment3,
	output wire display_segment4,
	output wire display_segment5,
	output wire display_segment6,
	output wire display_segment7,
	output wire display_digit0,
	output wire display_digit1,
	output wire display_digit2,
	output wire display_digit3,
	output wire display_digit4,
	output wire display_digit5,
	output wire display_digit6,
	output wire display_digit7,
	output reg ledRGB1_r,
	output reg ledRGB1_g,
	output reg ledRGB1_b,
	output reg ledRGB2_r,
	output reg ledRGB2_g,
	output reg ledRGB2_b,
	output wire vga_red0,
	output wire vga_red1,
	output wire vga_red2,
	output wire vga_red3,
	output wire vga_green0,
	output wire vga_green1,
	output wire vga_green2,
	output wire vga_green3,
	output wire vga_blue0,
	output wire vga_blue1,
	output wire vga_blue2,
	output wire vga_blue3,
	output wire hsync,
	output wire vsync,
	input wire btnI,
	input wire btnH,
	output reg uart1_tx,
	input wire uart1_rx,
	output reg uart2_tx,
	input wire uart2_rx,
	input wire infrarrojos0,
	input wire infrarrojos1,
	input wire infrarrojos2,
	output wire pwm,
	input wire ECHO,
	output wire trigg,
	input wire CAM_px_data0,
	input wire CAM_px_data1,
	input wire CAM_px_data2,
	input wire CAM_px_data3,
	input wire CAM_px_data4,
	input wire CAM_px_data5,
	input wire CAM_px_data6,
	input wire CAM_px_data7,
	input wire CAM_href,
	input wire CAM_vsync,
	input wire CAM_pclk,
	output wire CAM_xclk,
	output wire CAM_pwdn
);

reg basesoc_basesoc_soccontroller_reset_storage = 1'd0;
reg basesoc_basesoc_soccontroller_reset_re = 1'd0;
reg [31:0] basesoc_basesoc_soccontroller_scratch_storage = 32'd305419896;
reg basesoc_basesoc_soccontroller_scratch_re = 1'd0;
wire [31:0] basesoc_basesoc_soccontroller_bus_errors_status;
wire basesoc_basesoc_soccontroller_bus_errors_we;
wire basesoc_basesoc_soccontroller_bus_errors_re;
wire basesoc_basesoc_soccontroller_reset;
wire basesoc_basesoc_soccontroller_bus_error;
reg [31:0] basesoc_basesoc_soccontroller_bus_errors = 32'd0;
wire basesoc_basesoc_picorv32_trap;
wire basesoc_basesoc_picorv32_reset;
reg [31:0] basesoc_basesoc_picorv32_interrupt = 32'd0;
wire [29:0] basesoc_basesoc_picorv32_idbus_adr;
wire [31:0] basesoc_basesoc_picorv32_idbus_dat_w;
wire [31:0] basesoc_basesoc_picorv32_idbus_dat_r;
wire [3:0] basesoc_basesoc_picorv32_idbus_sel;
wire basesoc_basesoc_picorv32_idbus_cyc;
wire basesoc_basesoc_picorv32_idbus_stb;
wire basesoc_basesoc_picorv32_idbus_ack;
wire basesoc_basesoc_picorv32_idbus_we;
wire [2:0] basesoc_basesoc_picorv32_idbus_cti;
wire [1:0] basesoc_basesoc_picorv32_idbus_bte;
wire basesoc_basesoc_picorv32_idbus_err;
wire basesoc_basesoc_picorv32_mem_valid;
wire basesoc_basesoc_picorv32_mem_instr;
wire basesoc_basesoc_picorv32_mem_ready;
wire [31:0] basesoc_basesoc_picorv32_mem_addr;
wire [31:0] basesoc_basesoc_picorv32_mem_wdata;
wire [3:0] basesoc_basesoc_picorv32_mem_wstrb;
wire [31:0] basesoc_basesoc_picorv32_mem_rdata;
wire basesoc_basesoc_picorv320;
wire basesoc_basesoc_picorv321;
wire [31:0] basesoc_basesoc_picorv322;
wire [31:0] basesoc_basesoc_picorv323;
wire [3:0] basesoc_basesoc_picorv324;
wire basesoc_basesoc_picorv325;
wire [31:0] basesoc_basesoc_picorv326;
wire [31:0] basesoc_basesoc_picorv327;
wire [31:0] basesoc_basesoc_picorv328;
wire [31:0] basesoc_basesoc_picorv329;
wire [29:0] basesoc_basesoc_ram_bus_adr;
wire [31:0] basesoc_basesoc_ram_bus_dat_w;
wire [31:0] basesoc_basesoc_ram_bus_dat_r;
wire [3:0] basesoc_basesoc_ram_bus_sel;
wire basesoc_basesoc_ram_bus_cyc;
wire basesoc_basesoc_ram_bus_stb;
reg basesoc_basesoc_ram_bus_ack = 1'd0;
wire basesoc_basesoc_ram_bus_we;
wire [2:0] basesoc_basesoc_ram_bus_cti;
wire [1:0] basesoc_basesoc_ram_bus_bte;
reg basesoc_basesoc_ram_bus_err = 1'd0;
wire [12:0] basesoc_basesoc_adr;
wire [31:0] basesoc_basesoc_dat_r;
wire [29:0] basesoc_basesoc_interface0_ram_bus_adr;
wire [31:0] basesoc_basesoc_interface0_ram_bus_dat_w;
wire [31:0] basesoc_basesoc_interface0_ram_bus_dat_r;
wire [3:0] basesoc_basesoc_interface0_ram_bus_sel;
wire basesoc_basesoc_interface0_ram_bus_cyc;
wire basesoc_basesoc_interface0_ram_bus_stb;
reg basesoc_basesoc_interface0_ram_bus_ack = 1'd0;
wire basesoc_basesoc_interface0_ram_bus_we;
wire [2:0] basesoc_basesoc_interface0_ram_bus_cti;
wire [1:0] basesoc_basesoc_interface0_ram_bus_bte;
reg basesoc_basesoc_interface0_ram_bus_err = 1'd0;
wire [10:0] basesoc_basesoc_sram0_adr;
wire [31:0] basesoc_basesoc_sram0_dat_r;
reg [3:0] basesoc_basesoc_sram0_we = 4'd0;
wire [31:0] basesoc_basesoc_sram0_dat_w;
wire [29:0] basesoc_basesoc_interface1_ram_bus_adr;
wire [31:0] basesoc_basesoc_interface1_ram_bus_dat_w;
wire [31:0] basesoc_basesoc_interface1_ram_bus_dat_r;
wire [3:0] basesoc_basesoc_interface1_ram_bus_sel;
wire basesoc_basesoc_interface1_ram_bus_cyc;
wire basesoc_basesoc_interface1_ram_bus_stb;
reg basesoc_basesoc_interface1_ram_bus_ack = 1'd0;
wire basesoc_basesoc_interface1_ram_bus_we;
wire [2:0] basesoc_basesoc_interface1_ram_bus_cti;
wire [1:0] basesoc_basesoc_interface1_ram_bus_bte;
reg basesoc_basesoc_interface1_ram_bus_err = 1'd0;
wire [11:0] basesoc_basesoc_sram1_adr;
wire [31:0] basesoc_basesoc_sram1_dat_r;
reg [3:0] basesoc_basesoc_sram1_we = 4'd0;
wire [31:0] basesoc_basesoc_sram1_dat_w;
reg [31:0] basesoc_basesoc_storage = 32'd4947802;
reg basesoc_basesoc_re = 1'd0;
wire basesoc_basesoc_sink_valid;
reg basesoc_basesoc_sink_ready = 1'd0;
wire basesoc_basesoc_sink_first;
wire basesoc_basesoc_sink_last;
wire [7:0] basesoc_basesoc_sink_payload_data;
reg basesoc_basesoc_tx_clken = 1'd0;
reg [31:0] basesoc_basesoc_tx_clkphase = 32'd0;
reg [7:0] basesoc_basesoc_tx_reg = 8'd0;
reg [3:0] basesoc_basesoc_tx_bitcount = 4'd0;
reg basesoc_basesoc_tx_busy = 1'd0;
reg basesoc_basesoc_source_valid = 1'd0;
wire basesoc_basesoc_source_ready;
reg basesoc_basesoc_source_first = 1'd0;
reg basesoc_basesoc_source_last = 1'd0;
reg [7:0] basesoc_basesoc_source_payload_data = 8'd0;
reg basesoc_basesoc_rx_clken = 1'd0;
reg [31:0] basesoc_basesoc_rx_clkphase = 32'd0;
wire basesoc_basesoc_rx;
reg basesoc_basesoc_rx_r = 1'd0;
reg [7:0] basesoc_basesoc_rx_reg = 8'd0;
reg [3:0] basesoc_basesoc_rx_bitcount = 4'd0;
reg basesoc_basesoc_rx_busy = 1'd0;
wire basesoc_basesoc_uart_rxtx_re;
wire [7:0] basesoc_basesoc_uart_rxtx_r;
wire basesoc_basesoc_uart_rxtx_we;
wire [7:0] basesoc_basesoc_uart_rxtx_w;
wire basesoc_basesoc_uart_txfull_status;
wire basesoc_basesoc_uart_txfull_we;
wire basesoc_basesoc_uart_txfull_re;
wire basesoc_basesoc_uart_rxempty_status;
wire basesoc_basesoc_uart_rxempty_we;
wire basesoc_basesoc_uart_rxempty_re;
wire basesoc_basesoc_uart_irq;
wire basesoc_basesoc_uart_tx_status;
reg basesoc_basesoc_uart_tx_pending = 1'd0;
wire basesoc_basesoc_uart_tx_trigger;
reg basesoc_basesoc_uart_tx_clear = 1'd0;
reg basesoc_basesoc_uart_tx_old_trigger = 1'd0;
wire basesoc_basesoc_uart_rx_status;
reg basesoc_basesoc_uart_rx_pending = 1'd0;
wire basesoc_basesoc_uart_rx_trigger;
reg basesoc_basesoc_uart_rx_clear = 1'd0;
reg basesoc_basesoc_uart_rx_old_trigger = 1'd0;
wire basesoc_basesoc_uart_eventmanager_status_re;
wire [1:0] basesoc_basesoc_uart_eventmanager_status_r;
wire basesoc_basesoc_uart_eventmanager_status_we;
reg [1:0] basesoc_basesoc_uart_eventmanager_status_w = 2'd0;
wire basesoc_basesoc_uart_eventmanager_pending_re;
wire [1:0] basesoc_basesoc_uart_eventmanager_pending_r;
wire basesoc_basesoc_uart_eventmanager_pending_we;
reg [1:0] basesoc_basesoc_uart_eventmanager_pending_w = 2'd0;
reg [1:0] basesoc_basesoc_uart_eventmanager_storage = 2'd0;
reg basesoc_basesoc_uart_eventmanager_re = 1'd0;
wire basesoc_basesoc_uart_txempty_status;
wire basesoc_basesoc_uart_txempty_we;
wire basesoc_basesoc_uart_txempty_re;
wire basesoc_basesoc_uart_rxfull_status;
wire basesoc_basesoc_uart_rxfull_we;
wire basesoc_basesoc_uart_rxfull_re;
wire basesoc_basesoc_uart_uart_sink_valid;
wire basesoc_basesoc_uart_uart_sink_ready;
wire basesoc_basesoc_uart_uart_sink_first;
wire basesoc_basesoc_uart_uart_sink_last;
wire [7:0] basesoc_basesoc_uart_uart_sink_payload_data;
wire basesoc_basesoc_uart_uart_source_valid;
wire basesoc_basesoc_uart_uart_source_ready;
wire basesoc_basesoc_uart_uart_source_first;
wire basesoc_basesoc_uart_uart_source_last;
wire [7:0] basesoc_basesoc_uart_uart_source_payload_data;
wire basesoc_basesoc_uart_tx_fifo_sink_valid;
wire basesoc_basesoc_uart_tx_fifo_sink_ready;
reg basesoc_basesoc_uart_tx_fifo_sink_first = 1'd0;
reg basesoc_basesoc_uart_tx_fifo_sink_last = 1'd0;
wire [7:0] basesoc_basesoc_uart_tx_fifo_sink_payload_data;
wire basesoc_basesoc_uart_tx_fifo_source_valid;
wire basesoc_basesoc_uart_tx_fifo_source_ready;
wire basesoc_basesoc_uart_tx_fifo_source_first;
wire basesoc_basesoc_uart_tx_fifo_source_last;
wire [7:0] basesoc_basesoc_uart_tx_fifo_source_payload_data;
wire basesoc_basesoc_uart_tx_fifo_re;
reg basesoc_basesoc_uart_tx_fifo_readable = 1'd0;
wire basesoc_basesoc_uart_tx_fifo_syncfifo_we;
wire basesoc_basesoc_uart_tx_fifo_syncfifo_writable;
wire basesoc_basesoc_uart_tx_fifo_syncfifo_re;
wire basesoc_basesoc_uart_tx_fifo_syncfifo_readable;
wire [9:0] basesoc_basesoc_uart_tx_fifo_syncfifo_din;
wire [9:0] basesoc_basesoc_uart_tx_fifo_syncfifo_dout;
reg [4:0] basesoc_basesoc_uart_tx_fifo_level0 = 5'd0;
reg basesoc_basesoc_uart_tx_fifo_replace = 1'd0;
reg [3:0] basesoc_basesoc_uart_tx_fifo_produce = 4'd0;
reg [3:0] basesoc_basesoc_uart_tx_fifo_consume = 4'd0;
reg [3:0] basesoc_basesoc_uart_tx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_basesoc_uart_tx_fifo_wrport_dat_r;
wire basesoc_basesoc_uart_tx_fifo_wrport_we;
wire [9:0] basesoc_basesoc_uart_tx_fifo_wrport_dat_w;
wire basesoc_basesoc_uart_tx_fifo_do_read;
wire [3:0] basesoc_basesoc_uart_tx_fifo_rdport_adr;
wire [9:0] basesoc_basesoc_uart_tx_fifo_rdport_dat_r;
wire basesoc_basesoc_uart_tx_fifo_rdport_re;
wire [4:0] basesoc_basesoc_uart_tx_fifo_level1;
wire [7:0] basesoc_basesoc_uart_tx_fifo_fifo_in_payload_data;
wire basesoc_basesoc_uart_tx_fifo_fifo_in_first;
wire basesoc_basesoc_uart_tx_fifo_fifo_in_last;
wire [7:0] basesoc_basesoc_uart_tx_fifo_fifo_out_payload_data;
wire basesoc_basesoc_uart_tx_fifo_fifo_out_first;
wire basesoc_basesoc_uart_tx_fifo_fifo_out_last;
wire basesoc_basesoc_uart_rx_fifo_sink_valid;
wire basesoc_basesoc_uart_rx_fifo_sink_ready;
wire basesoc_basesoc_uart_rx_fifo_sink_first;
wire basesoc_basesoc_uart_rx_fifo_sink_last;
wire [7:0] basesoc_basesoc_uart_rx_fifo_sink_payload_data;
wire basesoc_basesoc_uart_rx_fifo_source_valid;
wire basesoc_basesoc_uart_rx_fifo_source_ready;
wire basesoc_basesoc_uart_rx_fifo_source_first;
wire basesoc_basesoc_uart_rx_fifo_source_last;
wire [7:0] basesoc_basesoc_uart_rx_fifo_source_payload_data;
wire basesoc_basesoc_uart_rx_fifo_re;
reg basesoc_basesoc_uart_rx_fifo_readable = 1'd0;
wire basesoc_basesoc_uart_rx_fifo_syncfifo_we;
wire basesoc_basesoc_uart_rx_fifo_syncfifo_writable;
wire basesoc_basesoc_uart_rx_fifo_syncfifo_re;
wire basesoc_basesoc_uart_rx_fifo_syncfifo_readable;
wire [9:0] basesoc_basesoc_uart_rx_fifo_syncfifo_din;
wire [9:0] basesoc_basesoc_uart_rx_fifo_syncfifo_dout;
reg [4:0] basesoc_basesoc_uart_rx_fifo_level0 = 5'd0;
reg basesoc_basesoc_uart_rx_fifo_replace = 1'd0;
reg [3:0] basesoc_basesoc_uart_rx_fifo_produce = 4'd0;
reg [3:0] basesoc_basesoc_uart_rx_fifo_consume = 4'd0;
reg [3:0] basesoc_basesoc_uart_rx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_basesoc_uart_rx_fifo_wrport_dat_r;
wire basesoc_basesoc_uart_rx_fifo_wrport_we;
wire [9:0] basesoc_basesoc_uart_rx_fifo_wrport_dat_w;
wire basesoc_basesoc_uart_rx_fifo_do_read;
wire [3:0] basesoc_basesoc_uart_rx_fifo_rdport_adr;
wire [9:0] basesoc_basesoc_uart_rx_fifo_rdport_dat_r;
wire basesoc_basesoc_uart_rx_fifo_rdport_re;
wire [4:0] basesoc_basesoc_uart_rx_fifo_level1;
wire [7:0] basesoc_basesoc_uart_rx_fifo_fifo_in_payload_data;
wire basesoc_basesoc_uart_rx_fifo_fifo_in_first;
wire basesoc_basesoc_uart_rx_fifo_fifo_in_last;
wire [7:0] basesoc_basesoc_uart_rx_fifo_fifo_out_payload_data;
wire basesoc_basesoc_uart_rx_fifo_fifo_out_first;
wire basesoc_basesoc_uart_rx_fifo_fifo_out_last;
reg basesoc_basesoc_uart_reset = 1'd0;
reg [31:0] basesoc_basesoc_timer_load_storage = 32'd0;
reg basesoc_basesoc_timer_load_re = 1'd0;
reg [31:0] basesoc_basesoc_timer_reload_storage = 32'd0;
reg basesoc_basesoc_timer_reload_re = 1'd0;
reg basesoc_basesoc_timer_en_storage = 1'd0;
reg basesoc_basesoc_timer_en_re = 1'd0;
reg basesoc_basesoc_timer_update_value_storage = 1'd0;
reg basesoc_basesoc_timer_update_value_re = 1'd0;
reg [31:0] basesoc_basesoc_timer_value_status = 32'd0;
wire basesoc_basesoc_timer_value_we;
wire basesoc_basesoc_timer_value_re;
wire basesoc_basesoc_timer_irq;
wire basesoc_basesoc_timer_zero_status;
reg basesoc_basesoc_timer_zero_pending = 1'd0;
wire basesoc_basesoc_timer_zero_trigger;
reg basesoc_basesoc_timer_zero_clear = 1'd0;
reg basesoc_basesoc_timer_zero_old_trigger = 1'd0;
wire basesoc_basesoc_timer_eventmanager_status_re;
wire basesoc_basesoc_timer_eventmanager_status_r;
wire basesoc_basesoc_timer_eventmanager_status_we;
wire basesoc_basesoc_timer_eventmanager_status_w;
wire basesoc_basesoc_timer_eventmanager_pending_re;
wire basesoc_basesoc_timer_eventmanager_pending_r;
wire basesoc_basesoc_timer_eventmanager_pending_we;
wire basesoc_basesoc_timer_eventmanager_pending_w;
reg basesoc_basesoc_timer_eventmanager_storage = 1'd0;
reg basesoc_basesoc_timer_eventmanager_re = 1'd0;
reg [31:0] basesoc_basesoc_timer_value = 32'd0;
wire sys_clk;
wire sys_rst;
wire por_clk;
reg basesoc_int_rst = 1'd1;
reg [9:0] basesoc_leds_storage = 10'd0;
reg basesoc_leds_re = 1'd0;
wire [7:0] basesoc_switchs_status;
wire basesoc_switchs_we;
wire basesoc_switchs_re;
wire [2:0] basesoc_buttons_status;
wire basesoc_buttons_we;
wire basesoc_buttons_re;
reg [2:0] basesoc_dgt_count = 3'd0;
reg basesoc_dgt_tick = 1'd0;
reg [17:0] basesoc_dgt_tick_count = 18'd0;
wire [7:0] basesoc_displays0;
wire [7:0] basesoc_displays1;
wire [7:0] basesoc_displays2;
wire [7:0] basesoc_displays3;
wire [7:0] basesoc_displays4;
wire [7:0] basesoc_displays5;
wire [7:0] basesoc_displays6;
wire [7:0] basesoc_displays7;
reg [7:0] basesoc_dig_0_storage = 8'd0;
reg basesoc_dig_0_re = 1'd0;
reg [7:0] basesoc_dig_1_storage = 8'd0;
reg basesoc_dig_1_re = 1'd0;
reg [7:0] basesoc_dig_2_storage = 8'd0;
reg basesoc_dig_2_re = 1'd0;
reg [7:0] basesoc_dig_3_storage = 8'd0;
reg basesoc_dig_3_re = 1'd0;
reg [7:0] basesoc_dig_4_storage = 8'd0;
reg basesoc_dig_4_re = 1'd0;
reg [7:0] basesoc_dig_5_storage = 8'd0;
reg basesoc_dig_5_re = 1'd0;
reg [7:0] basesoc_dig_6_storage = 8'd0;
reg basesoc_dig_6_re = 1'd0;
reg [7:0] basesoc_dig_7_storage = 8'd0;
reg basesoc_dig_7_re = 1'd0;
wire basesoc_ledRGB_1_r_enable;
wire [31:0] basesoc_ledRGB_1_r_width;
wire [31:0] basesoc_ledRGB_1_r_period;
reg [31:0] basesoc_ledRGB_1_r_counter = 32'd0;
reg basesoc_ledRGB_1_r_enable_storage = 1'd0;
reg basesoc_ledRGB_1_r_enable_re = 1'd0;
reg [31:0] basesoc_ledRGB_1_r_width_storage = 32'd0;
reg basesoc_ledRGB_1_r_width_re = 1'd0;
reg [31:0] basesoc_ledRGB_1_r_period_storage = 32'd0;
reg basesoc_ledRGB_1_r_period_re = 1'd0;
wire basesoc_ledRGB_1_g_enable;
wire [31:0] basesoc_ledRGB_1_g_width;
wire [31:0] basesoc_ledRGB_1_g_period;
reg [31:0] basesoc_ledRGB_1_g_counter = 32'd0;
reg basesoc_ledRGB_1_g_enable_storage = 1'd0;
reg basesoc_ledRGB_1_g_enable_re = 1'd0;
reg [31:0] basesoc_ledRGB_1_g_width_storage = 32'd0;
reg basesoc_ledRGB_1_g_width_re = 1'd0;
reg [31:0] basesoc_ledRGB_1_g_period_storage = 32'd0;
reg basesoc_ledRGB_1_g_period_re = 1'd0;
wire basesoc_ledRGB_1_b_enable;
wire [31:0] basesoc_ledRGB_1_b_width;
wire [31:0] basesoc_ledRGB_1_b_period;
reg [31:0] basesoc_ledRGB_1_b_counter = 32'd0;
reg basesoc_ledRGB_1_b_enable_storage = 1'd0;
reg basesoc_ledRGB_1_b_enable_re = 1'd0;
reg [31:0] basesoc_ledRGB_1_b_width_storage = 32'd0;
reg basesoc_ledRGB_1_b_width_re = 1'd0;
reg [31:0] basesoc_ledRGB_1_b_period_storage = 32'd0;
reg basesoc_ledRGB_1_b_period_re = 1'd0;
wire basesoc_ledRGB_2_r_enable;
wire [31:0] basesoc_ledRGB_2_r_width;
wire [31:0] basesoc_ledRGB_2_r_period;
reg [31:0] basesoc_ledRGB_2_r_counter = 32'd0;
reg basesoc_ledRGB_2_r_enable_storage = 1'd0;
reg basesoc_ledRGB_2_r_enable_re = 1'd0;
reg [31:0] basesoc_ledRGB_2_r_width_storage = 32'd0;
reg basesoc_ledRGB_2_r_width_re = 1'd0;
reg [31:0] basesoc_ledRGB_2_r_period_storage = 32'd0;
reg basesoc_ledRGB_2_r_period_re = 1'd0;
wire basesoc_ledRGB_2_g_enable;
wire [31:0] basesoc_ledRGB_2_g_width;
wire [31:0] basesoc_ledRGB_2_g_period;
reg [31:0] basesoc_ledRGB_2_g_counter = 32'd0;
reg basesoc_ledRGB_2_g_enable_storage = 1'd0;
reg basesoc_ledRGB_2_g_enable_re = 1'd0;
reg [31:0] basesoc_ledRGB_2_g_width_storage = 32'd0;
reg basesoc_ledRGB_2_g_width_re = 1'd0;
reg [31:0] basesoc_ledRGB_2_g_period_storage = 32'd0;
reg basesoc_ledRGB_2_g_period_re = 1'd0;
wire basesoc_ledRGB_2_b_enable;
wire [31:0] basesoc_ledRGB_2_b_width;
wire [31:0] basesoc_ledRGB_2_b_period;
reg [31:0] basesoc_ledRGB_2_b_counter = 32'd0;
reg basesoc_ledRGB_2_b_enable_storage = 1'd0;
reg basesoc_ledRGB_2_b_enable_re = 1'd0;
reg [31:0] basesoc_ledRGB_2_b_width_storage = 32'd0;
reg basesoc_ledRGB_2_b_width_re = 1'd0;
reg [31:0] basesoc_ledRGB_2_b_period_storage = 32'd0;
reg basesoc_ledRGB_2_b_period_re = 1'd0;
reg [9:0] basesoc_h_count = 10'd0;
reg [9:0] basesoc_v_count = 10'd0;
reg [1:0] basesoc_pxl_tick_count = 2'd0;
reg basesoc_pxl_tick = 1'd0;
wire basesoc_active;
reg [18:0] basesoc_p_r_adr = 19'd0;
wire [11:0] basesoc_p_r_dat_r;
wire [18:0] basesoc_p_w_adr;
wire [11:0] basesoc_p_w_dat_r;
wire basesoc_p_w_we;
wire [11:0] basesoc_p_w_dat_w;
reg [18:0] basesoc_mem_adr_storage = 19'd0;
reg basesoc_mem_adr_re = 1'd0;
reg basesoc_mem_we_storage = 1'd0;
reg basesoc_mem_we_re = 1'd0;
reg [11:0] basesoc_mem_data_w_storage = 12'd0;
reg basesoc_mem_data_w_re = 1'd0;
wire [11:0] basesoc_mem_data_r_status;
wire basesoc_mem_data_r_we;
wire basesoc_mem_data_r_re;
wire [1:0] basesoc_ctrlButton_status;
wire basesoc_ctrlButton_we;
wire basesoc_ctrlButton_re;
reg [31:0] basesoc_uart1_phy_storage = 32'd4947802;
reg basesoc_uart1_phy_re = 1'd0;
wire basesoc_uart1_phy_sink_valid;
reg basesoc_uart1_phy_sink_ready = 1'd0;
wire basesoc_uart1_phy_sink_first;
wire basesoc_uart1_phy_sink_last;
wire [7:0] basesoc_uart1_phy_sink_payload_data;
reg basesoc_uart1_phy_tx_clken = 1'd0;
reg [31:0] basesoc_uart1_phy_tx_clkphase = 32'd0;
reg [7:0] basesoc_uart1_phy_tx_reg = 8'd0;
reg [3:0] basesoc_uart1_phy_tx_bitcount = 4'd0;
reg basesoc_uart1_phy_tx_busy = 1'd0;
reg basesoc_uart1_phy_source_valid = 1'd0;
wire basesoc_uart1_phy_source_ready;
reg basesoc_uart1_phy_source_first = 1'd0;
reg basesoc_uart1_phy_source_last = 1'd0;
reg [7:0] basesoc_uart1_phy_source_payload_data = 8'd0;
reg basesoc_uart1_phy_rx_clken = 1'd0;
reg [31:0] basesoc_uart1_phy_rx_clkphase = 32'd0;
wire basesoc_uart1_phy_rx;
reg basesoc_uart1_phy_rx_r = 1'd0;
reg [7:0] basesoc_uart1_phy_rx_reg = 8'd0;
reg [3:0] basesoc_uart1_phy_rx_bitcount = 4'd0;
reg basesoc_uart1_phy_rx_busy = 1'd0;
wire basesoc_uart0_rxtx_re;
wire [7:0] basesoc_uart0_rxtx_r;
wire basesoc_uart0_rxtx_we;
wire [7:0] basesoc_uart0_rxtx_w;
wire basesoc_uart0_txfull_status;
wire basesoc_uart0_txfull_we;
wire basesoc_uart0_txfull_re;
wire basesoc_uart0_rxempty_status;
wire basesoc_uart0_rxempty_we;
wire basesoc_uart0_rxempty_re;
wire basesoc_uart0_irq;
wire basesoc_uart0_tx_status;
reg basesoc_uart0_tx_pending = 1'd0;
wire basesoc_uart0_tx_trigger;
reg basesoc_uart0_tx_clear = 1'd0;
reg basesoc_uart0_tx_old_trigger = 1'd0;
wire basesoc_uart0_rx_status;
reg basesoc_uart0_rx_pending = 1'd0;
wire basesoc_uart0_rx_trigger;
reg basesoc_uart0_rx_clear = 1'd0;
reg basesoc_uart0_rx_old_trigger = 1'd0;
wire basesoc_uart0_eventmanager0_status_re;
wire [1:0] basesoc_uart0_eventmanager0_status_r;
wire basesoc_uart0_eventmanager0_status_we;
reg [1:0] basesoc_uart0_eventmanager0_status_w = 2'd0;
wire basesoc_uart0_eventmanager0_pending_re;
wire [1:0] basesoc_uart0_eventmanager0_pending_r;
wire basesoc_uart0_eventmanager0_pending_we;
reg [1:0] basesoc_uart0_eventmanager0_pending_w = 2'd0;
reg [1:0] basesoc_uart0_eventmanager0_storage = 2'd0;
reg basesoc_uart0_eventmanager0_re = 1'd0;
wire basesoc_uart0_txempty_status;
wire basesoc_uart0_txempty_we;
wire basesoc_uart0_txempty_re;
wire basesoc_uart0_rxfull_status;
wire basesoc_uart0_rxfull_we;
wire basesoc_uart0_rxfull_re;
wire basesoc_uart0_uart0_sink_valid;
wire basesoc_uart0_uart0_sink_ready;
wire basesoc_uart0_uart0_sink_first;
wire basesoc_uart0_uart0_sink_last;
wire [7:0] basesoc_uart0_uart0_sink_payload_data;
wire basesoc_uart0_uart0_source_valid;
wire basesoc_uart0_uart0_source_ready;
wire basesoc_uart0_uart0_source_first;
wire basesoc_uart0_uart0_source_last;
wire [7:0] basesoc_uart0_uart0_source_payload_data;
wire basesoc_uart0_tx_fifo_sink_valid;
wire basesoc_uart0_tx_fifo_sink_ready;
reg basesoc_uart0_tx_fifo_sink_first = 1'd0;
reg basesoc_uart0_tx_fifo_sink_last = 1'd0;
wire [7:0] basesoc_uart0_tx_fifo_sink_payload_data;
wire basesoc_uart0_tx_fifo_source_valid;
wire basesoc_uart0_tx_fifo_source_ready;
wire basesoc_uart0_tx_fifo_source_first;
wire basesoc_uart0_tx_fifo_source_last;
wire [7:0] basesoc_uart0_tx_fifo_source_payload_data;
wire basesoc_uart0_tx_fifo_re;
reg basesoc_uart0_tx_fifo_readable = 1'd0;
wire basesoc_uart0_tx_fifo_syncfifo0_we;
wire basesoc_uart0_tx_fifo_syncfifo0_writable;
wire basesoc_uart0_tx_fifo_syncfifo0_re;
wire basesoc_uart0_tx_fifo_syncfifo0_readable;
wire [9:0] basesoc_uart0_tx_fifo_syncfifo0_din;
wire [9:0] basesoc_uart0_tx_fifo_syncfifo0_dout;
reg [4:0] basesoc_uart0_tx_fifo_level0 = 5'd0;
reg basesoc_uart0_tx_fifo_replace = 1'd0;
reg [3:0] basesoc_uart0_tx_fifo_produce = 4'd0;
reg [3:0] basesoc_uart0_tx_fifo_consume = 4'd0;
reg [3:0] basesoc_uart0_tx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_uart0_tx_fifo_wrport_dat_r;
wire basesoc_uart0_tx_fifo_wrport_we;
wire [9:0] basesoc_uart0_tx_fifo_wrport_dat_w;
wire basesoc_uart0_tx_fifo_do_read;
wire [3:0] basesoc_uart0_tx_fifo_rdport_adr;
wire [9:0] basesoc_uart0_tx_fifo_rdport_dat_r;
wire basesoc_uart0_tx_fifo_rdport_re;
wire [4:0] basesoc_uart0_tx_fifo_level1;
wire [7:0] basesoc_uart0_tx_fifo_fifo_in_payload_data;
wire basesoc_uart0_tx_fifo_fifo_in_first;
wire basesoc_uart0_tx_fifo_fifo_in_last;
wire [7:0] basesoc_uart0_tx_fifo_fifo_out_payload_data;
wire basesoc_uart0_tx_fifo_fifo_out_first;
wire basesoc_uart0_tx_fifo_fifo_out_last;
wire basesoc_uart0_rx_fifo_sink_valid;
wire basesoc_uart0_rx_fifo_sink_ready;
wire basesoc_uart0_rx_fifo_sink_first;
wire basesoc_uart0_rx_fifo_sink_last;
wire [7:0] basesoc_uart0_rx_fifo_sink_payload_data;
wire basesoc_uart0_rx_fifo_source_valid;
wire basesoc_uart0_rx_fifo_source_ready;
wire basesoc_uart0_rx_fifo_source_first;
wire basesoc_uart0_rx_fifo_source_last;
wire [7:0] basesoc_uart0_rx_fifo_source_payload_data;
wire basesoc_uart0_rx_fifo_re;
reg basesoc_uart0_rx_fifo_readable = 1'd0;
wire basesoc_uart0_rx_fifo_syncfifo0_we;
wire basesoc_uart0_rx_fifo_syncfifo0_writable;
wire basesoc_uart0_rx_fifo_syncfifo0_re;
wire basesoc_uart0_rx_fifo_syncfifo0_readable;
wire [9:0] basesoc_uart0_rx_fifo_syncfifo0_din;
wire [9:0] basesoc_uart0_rx_fifo_syncfifo0_dout;
reg [4:0] basesoc_uart0_rx_fifo_level0 = 5'd0;
reg basesoc_uart0_rx_fifo_replace = 1'd0;
reg [3:0] basesoc_uart0_rx_fifo_produce = 4'd0;
reg [3:0] basesoc_uart0_rx_fifo_consume = 4'd0;
reg [3:0] basesoc_uart0_rx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_uart0_rx_fifo_wrport_dat_r;
wire basesoc_uart0_rx_fifo_wrport_we;
wire [9:0] basesoc_uart0_rx_fifo_wrport_dat_w;
wire basesoc_uart0_rx_fifo_do_read;
wire [3:0] basesoc_uart0_rx_fifo_rdport_adr;
wire [9:0] basesoc_uart0_rx_fifo_rdport_dat_r;
wire basesoc_uart0_rx_fifo_rdport_re;
wire [4:0] basesoc_uart0_rx_fifo_level1;
wire [7:0] basesoc_uart0_rx_fifo_fifo_in_payload_data;
wire basesoc_uart0_rx_fifo_fifo_in_first;
wire basesoc_uart0_rx_fifo_fifo_in_last;
wire [7:0] basesoc_uart0_rx_fifo_fifo_out_payload_data;
wire basesoc_uart0_rx_fifo_fifo_out_first;
wire basesoc_uart0_rx_fifo_fifo_out_last;
reg basesoc_uart1_reset = 1'd0;
reg [31:0] basesoc_uart2_phy_storage = 32'd412316;
reg basesoc_uart2_phy_re = 1'd0;
wire basesoc_uart2_phy_sink_valid;
reg basesoc_uart2_phy_sink_ready = 1'd0;
wire basesoc_uart2_phy_sink_first;
wire basesoc_uart2_phy_sink_last;
wire [7:0] basesoc_uart2_phy_sink_payload_data;
reg basesoc_uart2_phy_tx_clken = 1'd0;
reg [31:0] basesoc_uart2_phy_tx_clkphase = 32'd0;
reg [7:0] basesoc_uart2_phy_tx_reg = 8'd0;
reg [3:0] basesoc_uart2_phy_tx_bitcount = 4'd0;
reg basesoc_uart2_phy_tx_busy = 1'd0;
reg basesoc_uart2_phy_source_valid = 1'd0;
wire basesoc_uart2_phy_source_ready;
reg basesoc_uart2_phy_source_first = 1'd0;
reg basesoc_uart2_phy_source_last = 1'd0;
reg [7:0] basesoc_uart2_phy_source_payload_data = 8'd0;
reg basesoc_uart2_phy_rx_clken = 1'd0;
reg [31:0] basesoc_uart2_phy_rx_clkphase = 32'd0;
wire basesoc_uart2_phy_rx;
reg basesoc_uart2_phy_rx_r = 1'd0;
reg [7:0] basesoc_uart2_phy_rx_reg = 8'd0;
reg [3:0] basesoc_uart2_phy_rx_bitcount = 4'd0;
reg basesoc_uart2_phy_rx_busy = 1'd0;
wire basesoc_uart1_rxtx_re;
wire [7:0] basesoc_uart1_rxtx_r;
wire basesoc_uart1_rxtx_we;
wire [7:0] basesoc_uart1_rxtx_w;
wire basesoc_uart1_txfull_status;
wire basesoc_uart1_txfull_we;
wire basesoc_uart1_txfull_re;
wire basesoc_uart1_rxempty_status;
wire basesoc_uart1_rxempty_we;
wire basesoc_uart1_rxempty_re;
wire basesoc_uart1_irq;
wire basesoc_uart1_tx_status;
reg basesoc_uart1_tx_pending = 1'd0;
wire basesoc_uart1_tx_trigger;
reg basesoc_uart1_tx_clear = 1'd0;
reg basesoc_uart1_tx_old_trigger = 1'd0;
wire basesoc_uart1_rx_status;
reg basesoc_uart1_rx_pending = 1'd0;
wire basesoc_uart1_rx_trigger;
reg basesoc_uart1_rx_clear = 1'd0;
reg basesoc_uart1_rx_old_trigger = 1'd0;
wire basesoc_uart1_eventmanager1_status_re;
wire [1:0] basesoc_uart1_eventmanager1_status_r;
wire basesoc_uart1_eventmanager1_status_we;
reg [1:0] basesoc_uart1_eventmanager1_status_w = 2'd0;
wire basesoc_uart1_eventmanager1_pending_re;
wire [1:0] basesoc_uart1_eventmanager1_pending_r;
wire basesoc_uart1_eventmanager1_pending_we;
reg [1:0] basesoc_uart1_eventmanager1_pending_w = 2'd0;
reg [1:0] basesoc_uart1_eventmanager1_storage = 2'd0;
reg basesoc_uart1_eventmanager1_re = 1'd0;
wire basesoc_uart1_txempty_status;
wire basesoc_uart1_txempty_we;
wire basesoc_uart1_txempty_re;
wire basesoc_uart1_rxfull_status;
wire basesoc_uart1_rxfull_we;
wire basesoc_uart1_rxfull_re;
wire basesoc_uart1_uart1_sink_valid;
wire basesoc_uart1_uart1_sink_ready;
wire basesoc_uart1_uart1_sink_first;
wire basesoc_uart1_uart1_sink_last;
wire [7:0] basesoc_uart1_uart1_sink_payload_data;
wire basesoc_uart1_uart1_source_valid;
wire basesoc_uart1_uart1_source_ready;
wire basesoc_uart1_uart1_source_first;
wire basesoc_uart1_uart1_source_last;
wire [7:0] basesoc_uart1_uart1_source_payload_data;
wire basesoc_uart1_tx_fifo_sink_valid;
wire basesoc_uart1_tx_fifo_sink_ready;
reg basesoc_uart1_tx_fifo_sink_first = 1'd0;
reg basesoc_uart1_tx_fifo_sink_last = 1'd0;
wire [7:0] basesoc_uart1_tx_fifo_sink_payload_data;
wire basesoc_uart1_tx_fifo_source_valid;
wire basesoc_uart1_tx_fifo_source_ready;
wire basesoc_uart1_tx_fifo_source_first;
wire basesoc_uart1_tx_fifo_source_last;
wire [7:0] basesoc_uart1_tx_fifo_source_payload_data;
wire basesoc_uart1_tx_fifo_re;
reg basesoc_uart1_tx_fifo_readable = 1'd0;
wire basesoc_uart1_tx_fifo_syncfifo1_we;
wire basesoc_uart1_tx_fifo_syncfifo1_writable;
wire basesoc_uart1_tx_fifo_syncfifo1_re;
wire basesoc_uart1_tx_fifo_syncfifo1_readable;
wire [9:0] basesoc_uart1_tx_fifo_syncfifo1_din;
wire [9:0] basesoc_uart1_tx_fifo_syncfifo1_dout;
reg [4:0] basesoc_uart1_tx_fifo_level0 = 5'd0;
reg basesoc_uart1_tx_fifo_replace = 1'd0;
reg [3:0] basesoc_uart1_tx_fifo_produce = 4'd0;
reg [3:0] basesoc_uart1_tx_fifo_consume = 4'd0;
reg [3:0] basesoc_uart1_tx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_uart1_tx_fifo_wrport_dat_r;
wire basesoc_uart1_tx_fifo_wrport_we;
wire [9:0] basesoc_uart1_tx_fifo_wrport_dat_w;
wire basesoc_uart1_tx_fifo_do_read;
wire [3:0] basesoc_uart1_tx_fifo_rdport_adr;
wire [9:0] basesoc_uart1_tx_fifo_rdport_dat_r;
wire basesoc_uart1_tx_fifo_rdport_re;
wire [4:0] basesoc_uart1_tx_fifo_level1;
wire [7:0] basesoc_uart1_tx_fifo_fifo_in_payload_data;
wire basesoc_uart1_tx_fifo_fifo_in_first;
wire basesoc_uart1_tx_fifo_fifo_in_last;
wire [7:0] basesoc_uart1_tx_fifo_fifo_out_payload_data;
wire basesoc_uart1_tx_fifo_fifo_out_first;
wire basesoc_uart1_tx_fifo_fifo_out_last;
wire basesoc_uart1_rx_fifo_sink_valid;
wire basesoc_uart1_rx_fifo_sink_ready;
wire basesoc_uart1_rx_fifo_sink_first;
wire basesoc_uart1_rx_fifo_sink_last;
wire [7:0] basesoc_uart1_rx_fifo_sink_payload_data;
wire basesoc_uart1_rx_fifo_source_valid;
wire basesoc_uart1_rx_fifo_source_ready;
wire basesoc_uart1_rx_fifo_source_first;
wire basesoc_uart1_rx_fifo_source_last;
wire [7:0] basesoc_uart1_rx_fifo_source_payload_data;
wire basesoc_uart1_rx_fifo_re;
reg basesoc_uart1_rx_fifo_readable = 1'd0;
wire basesoc_uart1_rx_fifo_syncfifo1_we;
wire basesoc_uart1_rx_fifo_syncfifo1_writable;
wire basesoc_uart1_rx_fifo_syncfifo1_re;
wire basesoc_uart1_rx_fifo_syncfifo1_readable;
wire [9:0] basesoc_uart1_rx_fifo_syncfifo1_din;
wire [9:0] basesoc_uart1_rx_fifo_syncfifo1_dout;
reg [4:0] basesoc_uart1_rx_fifo_level0 = 5'd0;
reg basesoc_uart1_rx_fifo_replace = 1'd0;
reg [3:0] basesoc_uart1_rx_fifo_produce = 4'd0;
reg [3:0] basesoc_uart1_rx_fifo_consume = 4'd0;
reg [3:0] basesoc_uart1_rx_fifo_wrport_adr = 4'd0;
wire [9:0] basesoc_uart1_rx_fifo_wrport_dat_r;
wire basesoc_uart1_rx_fifo_wrport_we;
wire [9:0] basesoc_uart1_rx_fifo_wrport_dat_w;
wire basesoc_uart1_rx_fifo_do_read;
wire [3:0] basesoc_uart1_rx_fifo_rdport_adr;
wire [9:0] basesoc_uart1_rx_fifo_rdport_dat_r;
wire basesoc_uart1_rx_fifo_rdport_re;
wire [4:0] basesoc_uart1_rx_fifo_level1;
wire [7:0] basesoc_uart1_rx_fifo_fifo_in_payload_data;
wire basesoc_uart1_rx_fifo_fifo_in_first;
wire basesoc_uart1_rx_fifo_fifo_in_last;
wire [7:0] basesoc_uart1_rx_fifo_fifo_out_payload_data;
wire basesoc_uart1_rx_fifo_fifo_out_first;
wire basesoc_uart1_rx_fifo_fifo_out_last;
reg basesoc_uart2_reset = 1'd0;
wire [2:0] basesoc_infrarrojos_status;
wire basesoc_infrarrojos_we;
wire basesoc_infrarrojos_re;
reg [2:0] basesoc_pwm_cntrl_orden_storage = 3'd0;
reg basesoc_pwm_cntrl_orden_re = 1'd0;
wire basesoc_pwm_cntrl_irq;
wire basesoc_pwm_cntrl_status;
reg basesoc_pwm_cntrl_pending = 1'd0;
reg basesoc_pwm_cntrl_trigger = 1'd0;
reg basesoc_pwm_cntrl_clear = 1'd0;
reg basesoc_pwm_cntrl_old_trigger = 1'd0;
wire basesoc_pwm_cntrl_eventmanager_status_re;
wire basesoc_pwm_cntrl_eventmanager_status_r;
wire basesoc_pwm_cntrl_eventmanager_status_we;
wire basesoc_pwm_cntrl_eventmanager_status_w;
wire basesoc_pwm_cntrl_eventmanager_pending_re;
wire basesoc_pwm_cntrl_eventmanager_pending_r;
wire basesoc_pwm_cntrl_eventmanager_pending_we;
wire basesoc_pwm_cntrl_eventmanager_pending_w;
reg basesoc_pwm_cntrl_eventmanager_storage = 1'd0;
reg basesoc_pwm_cntrl_eventmanager_re = 1'd0;
reg basesoc_US_cntrl_orden_storage = 1'd0;
reg basesoc_US_cntrl_orden_re = 1'd0;
wire basesoc_US_cntrl_DONE_status;
wire basesoc_US_cntrl_DONE_we;
wire basesoc_US_cntrl_DONE_re;
wire [7:0] basesoc_US_cntrl_d_status;
wire basesoc_US_cntrl_d_we;
wire basesoc_US_cntrl_d_re;
wire basesoc_US_cntrl_irq;
wire basesoc_US_cntrl_ok_status;
reg basesoc_US_cntrl_ok_pending = 1'd0;
reg basesoc_US_cntrl_ok_trigger = 1'd0;
reg basesoc_US_cntrl_ok_clear = 1'd0;
reg basesoc_US_cntrl_ok_old_trigger = 1'd0;
wire basesoc_US_cntrl_eventmanager_status_re;
wire basesoc_US_cntrl_eventmanager_status_r;
wire basesoc_US_cntrl_eventmanager_status_we;
wire basesoc_US_cntrl_eventmanager_status_w;
wire basesoc_US_cntrl_eventmanager_pending_re;
wire basesoc_US_cntrl_eventmanager_pending_r;
wire basesoc_US_cntrl_eventmanager_pending_we;
wire basesoc_US_cntrl_eventmanager_pending_w;
reg basesoc_US_cntrl_eventmanager_storage = 1'd0;
reg basesoc_US_cntrl_eventmanager_re = 1'd0;
reg basesoc_Process_cntrl_enable_storage = 1'd0;
reg basesoc_Process_cntrl_enable_re = 1'd0;
reg basesoc_Process_cntrl_CAM_reset_storage = 1'd0;
reg basesoc_Process_cntrl_CAM_reset_re = 1'd0;
wire basesoc_Process_cntrl_END_status;
wire basesoc_Process_cntrl_END_we;
wire basesoc_Process_cntrl_END_re;
wire [11:0] basesoc_Process_cntrl_AnchoMayor_status;
wire basesoc_Process_cntrl_AnchoMayor_we;
wire basesoc_Process_cntrl_AnchoMayor_re;
wire [11:0] basesoc_Process_cntrl_AnchoMenor_status;
wire basesoc_Process_cntrl_AnchoMenor_we;
wire basesoc_Process_cntrl_AnchoMenor_re;
wire [11:0] basesoc_Process_cntrl_AnchoIgual_status;
wire basesoc_Process_cntrl_AnchoIgual_we;
wire basesoc_Process_cntrl_AnchoIgual_re;
wire [19:0] basesoc_Process_cntrl_redCounter_status;
wire basesoc_Process_cntrl_redCounter_we;
wire basesoc_Process_cntrl_redCounter_re;
wire [19:0] basesoc_Process_cntrl_greenCounter_status;
wire basesoc_Process_cntrl_greenCounter_we;
wire basesoc_Process_cntrl_greenCounter_re;
wire [19:0] basesoc_Process_cntrl_blueCounter_status;
wire basesoc_Process_cntrl_blueCounter_we;
wire basesoc_Process_cntrl_blueCounter_re;
wire [19:0] basesoc_Process_cntrl_nothingCounter_status;
wire basesoc_Process_cntrl_nothingCounter_we;
wire basesoc_Process_cntrl_nothingCounter_re;
wire basesoc_Process_cntrl_irq;
wire basesoc_Process_cntrl_ok_status;
reg basesoc_Process_cntrl_ok_pending = 1'd0;
reg basesoc_Process_cntrl_ok_trigger = 1'd0;
reg basesoc_Process_cntrl_ok_clear = 1'd0;
reg basesoc_Process_cntrl_ok_old_trigger = 1'd0;
wire basesoc_Process_cntrl_eventmanager_status_re;
wire basesoc_Process_cntrl_eventmanager_status_r;
wire basesoc_Process_cntrl_eventmanager_status_we;
wire basesoc_Process_cntrl_eventmanager_status_w;
wire basesoc_Process_cntrl_eventmanager_pending_re;
wire basesoc_Process_cntrl_eventmanager_pending_r;
wire basesoc_Process_cntrl_eventmanager_pending_we;
wire basesoc_Process_cntrl_eventmanager_pending_w;
reg basesoc_Process_cntrl_eventmanager_storage = 1'd0;
reg basesoc_Process_cntrl_eventmanager_re = 1'd0;
reg [13:0] builder_basesoc_adr = 14'd0;
reg builder_basesoc_we = 1'd0;
reg [31:0] builder_basesoc_dat_w = 32'd0;
wire [31:0] builder_basesoc_dat_r;
wire [29:0] builder_basesoc_wishbone_adr;
wire [31:0] builder_basesoc_wishbone_dat_w;
reg [31:0] builder_basesoc_wishbone_dat_r = 32'd0;
wire [3:0] builder_basesoc_wishbone_sel;
wire builder_basesoc_wishbone_cyc;
wire builder_basesoc_wishbone_stb;
reg builder_basesoc_wishbone_ack = 1'd0;
wire builder_basesoc_wishbone_we;
wire [2:0] builder_basesoc_wishbone_cti;
wire [1:0] builder_basesoc_wishbone_bte;
reg builder_basesoc_wishbone_err = 1'd0;
wire [29:0] builder_shared_adr;
wire [31:0] builder_shared_dat_w;
reg [31:0] builder_shared_dat_r = 32'd0;
wire [3:0] builder_shared_sel;
wire builder_shared_cyc;
wire builder_shared_stb;
reg builder_shared_ack = 1'd0;
wire builder_shared_we;
wire [2:0] builder_shared_cti;
wire [1:0] builder_shared_bte;
wire builder_shared_err;
wire builder_request;
wire builder_grant;
reg [3:0] builder_slave_sel = 4'd0;
reg [3:0] builder_slave_sel_r = 4'd0;
reg builder_error = 1'd0;
wire builder_wait;
wire builder_done;
reg [19:0] builder_count = 20'd1000000;
wire [13:0] builder_interface0_bank_bus_adr;
wire builder_interface0_bank_bus_we;
wire [31:0] builder_interface0_bank_bus_dat_w;
reg [31:0] builder_interface0_bank_bus_dat_r = 32'd0;
wire builder_csrbank0_enable0_re;
wire builder_csrbank0_enable0_r;
wire builder_csrbank0_enable0_we;
wire builder_csrbank0_enable0_w;
wire builder_csrbank0_CAM_reset0_re;
wire builder_csrbank0_CAM_reset0_r;
wire builder_csrbank0_CAM_reset0_we;
wire builder_csrbank0_CAM_reset0_w;
wire builder_csrbank0_END_re;
wire builder_csrbank0_END_r;
wire builder_csrbank0_END_we;
wire builder_csrbank0_END_w;
wire builder_csrbank0_AnchoMayor_re;
wire [11:0] builder_csrbank0_AnchoMayor_r;
wire builder_csrbank0_AnchoMayor_we;
wire [11:0] builder_csrbank0_AnchoMayor_w;
wire builder_csrbank0_AnchoMenor_re;
wire [11:0] builder_csrbank0_AnchoMenor_r;
wire builder_csrbank0_AnchoMenor_we;
wire [11:0] builder_csrbank0_AnchoMenor_w;
wire builder_csrbank0_AnchoIgual_re;
wire [11:0] builder_csrbank0_AnchoIgual_r;
wire builder_csrbank0_AnchoIgual_we;
wire [11:0] builder_csrbank0_AnchoIgual_w;
wire builder_csrbank0_redCounter_re;
wire [19:0] builder_csrbank0_redCounter_r;
wire builder_csrbank0_redCounter_we;
wire [19:0] builder_csrbank0_redCounter_w;
wire builder_csrbank0_greenCounter_re;
wire [19:0] builder_csrbank0_greenCounter_r;
wire builder_csrbank0_greenCounter_we;
wire [19:0] builder_csrbank0_greenCounter_w;
wire builder_csrbank0_blueCounter_re;
wire [19:0] builder_csrbank0_blueCounter_r;
wire builder_csrbank0_blueCounter_we;
wire [19:0] builder_csrbank0_blueCounter_w;
wire builder_csrbank0_nothingCounter_re;
wire [19:0] builder_csrbank0_nothingCounter_r;
wire builder_csrbank0_nothingCounter_we;
wire [19:0] builder_csrbank0_nothingCounter_w;
wire builder_csrbank0_ev_enable0_re;
wire builder_csrbank0_ev_enable0_r;
wire builder_csrbank0_ev_enable0_we;
wire builder_csrbank0_ev_enable0_w;
wire builder_csrbank0_sel;
wire [13:0] builder_interface1_bank_bus_adr;
wire builder_interface1_bank_bus_we;
wire [31:0] builder_interface1_bank_bus_dat_w;
reg [31:0] builder_interface1_bank_bus_dat_r = 32'd0;
wire builder_csrbank1_orden0_re;
wire builder_csrbank1_orden0_r;
wire builder_csrbank1_orden0_we;
wire builder_csrbank1_orden0_w;
wire builder_csrbank1_DONE_re;
wire builder_csrbank1_DONE_r;
wire builder_csrbank1_DONE_we;
wire builder_csrbank1_DONE_w;
wire builder_csrbank1_d_re;
wire [7:0] builder_csrbank1_d_r;
wire builder_csrbank1_d_we;
wire [7:0] builder_csrbank1_d_w;
wire builder_csrbank1_ev_enable0_re;
wire builder_csrbank1_ev_enable0_r;
wire builder_csrbank1_ev_enable0_we;
wire builder_csrbank1_ev_enable0_w;
wire builder_csrbank1_sel;
wire [13:0] builder_interface2_bank_bus_adr;
wire builder_interface2_bank_bus_we;
wire [31:0] builder_interface2_bank_bus_dat_w;
reg [31:0] builder_interface2_bank_bus_dat_r = 32'd0;
wire builder_csrbank2_in_re;
wire [2:0] builder_csrbank2_in_r;
wire builder_csrbank2_in_we;
wire [2:0] builder_csrbank2_in_w;
wire builder_csrbank2_sel;
wire [13:0] builder_interface3_bank_bus_adr;
wire builder_interface3_bank_bus_we;
wire [31:0] builder_interface3_bank_bus_dat_w;
reg [31:0] builder_interface3_bank_bus_dat_r = 32'd0;
wire builder_csrbank3_reset0_re;
wire builder_csrbank3_reset0_r;
wire builder_csrbank3_reset0_we;
wire builder_csrbank3_reset0_w;
wire builder_csrbank3_scratch0_re;
wire [31:0] builder_csrbank3_scratch0_r;
wire builder_csrbank3_scratch0_we;
wire [31:0] builder_csrbank3_scratch0_w;
wire builder_csrbank3_bus_errors_re;
wire [31:0] builder_csrbank3_bus_errors_r;
wire builder_csrbank3_bus_errors_we;
wire [31:0] builder_csrbank3_bus_errors_w;
wire builder_csrbank3_sel;
wire [13:0] builder_interface4_bank_bus_adr;
wire builder_interface4_bank_bus_we;
wire [31:0] builder_interface4_bank_bus_dat_w;
reg [31:0] builder_interface4_bank_bus_dat_r = 32'd0;
wire builder_csrbank4_in_re;
wire [1:0] builder_csrbank4_in_r;
wire builder_csrbank4_in_we;
wire [1:0] builder_csrbank4_in_w;
wire builder_csrbank4_sel;
wire [13:0] builder_interface5_bank_bus_adr;
wire builder_interface5_bank_bus_we;
wire [31:0] builder_interface5_bank_bus_dat_w;
reg [31:0] builder_interface5_bank_bus_dat_r = 32'd0;
wire builder_csrbank5_dig_00_re;
wire [7:0] builder_csrbank5_dig_00_r;
wire builder_csrbank5_dig_00_we;
wire [7:0] builder_csrbank5_dig_00_w;
wire builder_csrbank5_dig_10_re;
wire [7:0] builder_csrbank5_dig_10_r;
wire builder_csrbank5_dig_10_we;
wire [7:0] builder_csrbank5_dig_10_w;
wire builder_csrbank5_dig_20_re;
wire [7:0] builder_csrbank5_dig_20_r;
wire builder_csrbank5_dig_20_we;
wire [7:0] builder_csrbank5_dig_20_w;
wire builder_csrbank5_dig_30_re;
wire [7:0] builder_csrbank5_dig_30_r;
wire builder_csrbank5_dig_30_we;
wire [7:0] builder_csrbank5_dig_30_w;
wire builder_csrbank5_dig_40_re;
wire [7:0] builder_csrbank5_dig_40_r;
wire builder_csrbank5_dig_40_we;
wire [7:0] builder_csrbank5_dig_40_w;
wire builder_csrbank5_dig_50_re;
wire [7:0] builder_csrbank5_dig_50_r;
wire builder_csrbank5_dig_50_we;
wire [7:0] builder_csrbank5_dig_50_w;
wire builder_csrbank5_dig_60_re;
wire [7:0] builder_csrbank5_dig_60_r;
wire builder_csrbank5_dig_60_we;
wire [7:0] builder_csrbank5_dig_60_w;
wire builder_csrbank5_dig_70_re;
wire [7:0] builder_csrbank5_dig_70_r;
wire builder_csrbank5_dig_70_we;
wire [7:0] builder_csrbank5_dig_70_w;
wire builder_csrbank5_sel;
wire [13:0] builder_interface6_bank_bus_adr;
wire builder_interface6_bank_bus_we;
wire [31:0] builder_interface6_bank_bus_dat_w;
reg [31:0] builder_interface6_bank_bus_dat_r = 32'd0;
wire builder_csrbank6_in_re;
wire [2:0] builder_csrbank6_in_r;
wire builder_csrbank6_in_we;
wire [2:0] builder_csrbank6_in_w;
wire builder_csrbank6_sel;
wire [13:0] builder_interface7_bank_bus_adr;
wire builder_interface7_bank_bus_we;
wire [31:0] builder_interface7_bank_bus_dat_w;
reg [31:0] builder_interface7_bank_bus_dat_r = 32'd0;
wire builder_csrbank7_r_enable0_re;
wire builder_csrbank7_r_enable0_r;
wire builder_csrbank7_r_enable0_we;
wire builder_csrbank7_r_enable0_w;
wire builder_csrbank7_r_width0_re;
wire [31:0] builder_csrbank7_r_width0_r;
wire builder_csrbank7_r_width0_we;
wire [31:0] builder_csrbank7_r_width0_w;
wire builder_csrbank7_r_period0_re;
wire [31:0] builder_csrbank7_r_period0_r;
wire builder_csrbank7_r_period0_we;
wire [31:0] builder_csrbank7_r_period0_w;
wire builder_csrbank7_g_enable0_re;
wire builder_csrbank7_g_enable0_r;
wire builder_csrbank7_g_enable0_we;
wire builder_csrbank7_g_enable0_w;
wire builder_csrbank7_g_width0_re;
wire [31:0] builder_csrbank7_g_width0_r;
wire builder_csrbank7_g_width0_we;
wire [31:0] builder_csrbank7_g_width0_w;
wire builder_csrbank7_g_period0_re;
wire [31:0] builder_csrbank7_g_period0_r;
wire builder_csrbank7_g_period0_we;
wire [31:0] builder_csrbank7_g_period0_w;
wire builder_csrbank7_b_enable0_re;
wire builder_csrbank7_b_enable0_r;
wire builder_csrbank7_b_enable0_we;
wire builder_csrbank7_b_enable0_w;
wire builder_csrbank7_b_width0_re;
wire [31:0] builder_csrbank7_b_width0_r;
wire builder_csrbank7_b_width0_we;
wire [31:0] builder_csrbank7_b_width0_w;
wire builder_csrbank7_b_period0_re;
wire [31:0] builder_csrbank7_b_period0_r;
wire builder_csrbank7_b_period0_we;
wire [31:0] builder_csrbank7_b_period0_w;
wire builder_csrbank7_sel;
wire [13:0] builder_interface8_bank_bus_adr;
wire builder_interface8_bank_bus_we;
wire [31:0] builder_interface8_bank_bus_dat_w;
reg [31:0] builder_interface8_bank_bus_dat_r = 32'd0;
wire builder_csrbank8_r_enable0_re;
wire builder_csrbank8_r_enable0_r;
wire builder_csrbank8_r_enable0_we;
wire builder_csrbank8_r_enable0_w;
wire builder_csrbank8_r_width0_re;
wire [31:0] builder_csrbank8_r_width0_r;
wire builder_csrbank8_r_width0_we;
wire [31:0] builder_csrbank8_r_width0_w;
wire builder_csrbank8_r_period0_re;
wire [31:0] builder_csrbank8_r_period0_r;
wire builder_csrbank8_r_period0_we;
wire [31:0] builder_csrbank8_r_period0_w;
wire builder_csrbank8_g_enable0_re;
wire builder_csrbank8_g_enable0_r;
wire builder_csrbank8_g_enable0_we;
wire builder_csrbank8_g_enable0_w;
wire builder_csrbank8_g_width0_re;
wire [31:0] builder_csrbank8_g_width0_r;
wire builder_csrbank8_g_width0_we;
wire [31:0] builder_csrbank8_g_width0_w;
wire builder_csrbank8_g_period0_re;
wire [31:0] builder_csrbank8_g_period0_r;
wire builder_csrbank8_g_period0_we;
wire [31:0] builder_csrbank8_g_period0_w;
wire builder_csrbank8_b_enable0_re;
wire builder_csrbank8_b_enable0_r;
wire builder_csrbank8_b_enable0_we;
wire builder_csrbank8_b_enable0_w;
wire builder_csrbank8_b_width0_re;
wire [31:0] builder_csrbank8_b_width0_r;
wire builder_csrbank8_b_width0_we;
wire [31:0] builder_csrbank8_b_width0_w;
wire builder_csrbank8_b_period0_re;
wire [31:0] builder_csrbank8_b_period0_r;
wire builder_csrbank8_b_period0_we;
wire [31:0] builder_csrbank8_b_period0_w;
wire builder_csrbank8_sel;
wire [13:0] builder_interface9_bank_bus_adr;
wire builder_interface9_bank_bus_we;
wire [31:0] builder_interface9_bank_bus_dat_w;
reg [31:0] builder_interface9_bank_bus_dat_r = 32'd0;
wire builder_csrbank9_out0_re;
wire [9:0] builder_csrbank9_out0_r;
wire builder_csrbank9_out0_we;
wire [9:0] builder_csrbank9_out0_w;
wire builder_csrbank9_sel;
wire [13:0] builder_interface10_bank_bus_adr;
wire builder_interface10_bank_bus_we;
wire [31:0] builder_interface10_bank_bus_dat_w;
reg [31:0] builder_interface10_bank_bus_dat_r = 32'd0;
wire builder_csrbank10_orden0_re;
wire [2:0] builder_csrbank10_orden0_r;
wire builder_csrbank10_orden0_we;
wire [2:0] builder_csrbank10_orden0_w;
wire builder_csrbank10_ev_enable0_re;
wire builder_csrbank10_ev_enable0_r;
wire builder_csrbank10_ev_enable0_we;
wire builder_csrbank10_ev_enable0_w;
wire builder_csrbank10_sel;
wire [13:0] builder_interface11_bank_bus_adr;
wire builder_interface11_bank_bus_we;
wire [31:0] builder_interface11_bank_bus_dat_w;
reg [31:0] builder_interface11_bank_bus_dat_r = 32'd0;
wire builder_csrbank11_in_re;
wire [7:0] builder_csrbank11_in_r;
wire builder_csrbank11_in_we;
wire [7:0] builder_csrbank11_in_w;
wire builder_csrbank11_sel;
wire [13:0] builder_interface12_bank_bus_adr;
wire builder_interface12_bank_bus_we;
wire [31:0] builder_interface12_bank_bus_dat_w;
reg [31:0] builder_interface12_bank_bus_dat_r = 32'd0;
wire builder_csrbank12_load0_re;
wire [31:0] builder_csrbank12_load0_r;
wire builder_csrbank12_load0_we;
wire [31:0] builder_csrbank12_load0_w;
wire builder_csrbank12_reload0_re;
wire [31:0] builder_csrbank12_reload0_r;
wire builder_csrbank12_reload0_we;
wire [31:0] builder_csrbank12_reload0_w;
wire builder_csrbank12_en0_re;
wire builder_csrbank12_en0_r;
wire builder_csrbank12_en0_we;
wire builder_csrbank12_en0_w;
wire builder_csrbank12_update_value0_re;
wire builder_csrbank12_update_value0_r;
wire builder_csrbank12_update_value0_we;
wire builder_csrbank12_update_value0_w;
wire builder_csrbank12_value_re;
wire [31:0] builder_csrbank12_value_r;
wire builder_csrbank12_value_we;
wire [31:0] builder_csrbank12_value_w;
wire builder_csrbank12_ev_enable0_re;
wire builder_csrbank12_ev_enable0_r;
wire builder_csrbank12_ev_enable0_we;
wire builder_csrbank12_ev_enable0_w;
wire builder_csrbank12_sel;
wire [13:0] builder_interface13_bank_bus_adr;
wire builder_interface13_bank_bus_we;
wire [31:0] builder_interface13_bank_bus_dat_w;
reg [31:0] builder_interface13_bank_bus_dat_r = 32'd0;
wire builder_csrbank13_txfull_re;
wire builder_csrbank13_txfull_r;
wire builder_csrbank13_txfull_we;
wire builder_csrbank13_txfull_w;
wire builder_csrbank13_rxempty_re;
wire builder_csrbank13_rxempty_r;
wire builder_csrbank13_rxempty_we;
wire builder_csrbank13_rxempty_w;
wire builder_csrbank13_ev_enable0_re;
wire [1:0] builder_csrbank13_ev_enable0_r;
wire builder_csrbank13_ev_enable0_we;
wire [1:0] builder_csrbank13_ev_enable0_w;
wire builder_csrbank13_txempty_re;
wire builder_csrbank13_txempty_r;
wire builder_csrbank13_txempty_we;
wire builder_csrbank13_txempty_w;
wire builder_csrbank13_rxfull_re;
wire builder_csrbank13_rxfull_r;
wire builder_csrbank13_rxfull_we;
wire builder_csrbank13_rxfull_w;
wire builder_csrbank13_sel;
wire [13:0] builder_interface14_bank_bus_adr;
wire builder_interface14_bank_bus_we;
wire [31:0] builder_interface14_bank_bus_dat_w;
reg [31:0] builder_interface14_bank_bus_dat_r = 32'd0;
wire builder_csrbank14_txfull_re;
wire builder_csrbank14_txfull_r;
wire builder_csrbank14_txfull_we;
wire builder_csrbank14_txfull_w;
wire builder_csrbank14_rxempty_re;
wire builder_csrbank14_rxempty_r;
wire builder_csrbank14_rxempty_we;
wire builder_csrbank14_rxempty_w;
wire builder_csrbank14_ev_enable0_re;
wire [1:0] builder_csrbank14_ev_enable0_r;
wire builder_csrbank14_ev_enable0_we;
wire [1:0] builder_csrbank14_ev_enable0_w;
wire builder_csrbank14_txempty_re;
wire builder_csrbank14_txempty_r;
wire builder_csrbank14_txempty_we;
wire builder_csrbank14_txempty_w;
wire builder_csrbank14_rxfull_re;
wire builder_csrbank14_rxfull_r;
wire builder_csrbank14_rxfull_we;
wire builder_csrbank14_rxfull_w;
wire builder_csrbank14_sel;
wire [13:0] builder_interface15_bank_bus_adr;
wire builder_interface15_bank_bus_we;
wire [31:0] builder_interface15_bank_bus_dat_w;
reg [31:0] builder_interface15_bank_bus_dat_r = 32'd0;
wire builder_csrbank15_tuning_word0_re;
wire [31:0] builder_csrbank15_tuning_word0_r;
wire builder_csrbank15_tuning_word0_we;
wire [31:0] builder_csrbank15_tuning_word0_w;
wire builder_csrbank15_sel;
wire [13:0] builder_interface16_bank_bus_adr;
wire builder_interface16_bank_bus_we;
wire [31:0] builder_interface16_bank_bus_dat_w;
reg [31:0] builder_interface16_bank_bus_dat_r = 32'd0;
wire builder_csrbank16_txfull_re;
wire builder_csrbank16_txfull_r;
wire builder_csrbank16_txfull_we;
wire builder_csrbank16_txfull_w;
wire builder_csrbank16_rxempty_re;
wire builder_csrbank16_rxempty_r;
wire builder_csrbank16_rxempty_we;
wire builder_csrbank16_rxempty_w;
wire builder_csrbank16_ev_enable0_re;
wire [1:0] builder_csrbank16_ev_enable0_r;
wire builder_csrbank16_ev_enable0_we;
wire [1:0] builder_csrbank16_ev_enable0_w;
wire builder_csrbank16_txempty_re;
wire builder_csrbank16_txempty_r;
wire builder_csrbank16_txempty_we;
wire builder_csrbank16_txempty_w;
wire builder_csrbank16_rxfull_re;
wire builder_csrbank16_rxfull_r;
wire builder_csrbank16_rxfull_we;
wire builder_csrbank16_rxfull_w;
wire builder_csrbank16_sel;
wire [13:0] builder_interface17_bank_bus_adr;
wire builder_interface17_bank_bus_we;
wire [31:0] builder_interface17_bank_bus_dat_w;
reg [31:0] builder_interface17_bank_bus_dat_r = 32'd0;
wire builder_csrbank17_tuning_word0_re;
wire [31:0] builder_csrbank17_tuning_word0_r;
wire builder_csrbank17_tuning_word0_we;
wire [31:0] builder_csrbank17_tuning_word0_w;
wire builder_csrbank17_sel;
wire [13:0] builder_interface18_bank_bus_adr;
wire builder_interface18_bank_bus_we;
wire [31:0] builder_interface18_bank_bus_dat_w;
reg [31:0] builder_interface18_bank_bus_dat_r = 32'd0;
wire builder_csrbank18_tuning_word0_re;
wire [31:0] builder_csrbank18_tuning_word0_r;
wire builder_csrbank18_tuning_word0_we;
wire [31:0] builder_csrbank18_tuning_word0_w;
wire builder_csrbank18_sel;
wire [13:0] builder_interface19_bank_bus_adr;
wire builder_interface19_bank_bus_we;
wire [31:0] builder_interface19_bank_bus_dat_w;
reg [31:0] builder_interface19_bank_bus_dat_r = 32'd0;
wire builder_csrbank19_mem_adr0_re;
wire [18:0] builder_csrbank19_mem_adr0_r;
wire builder_csrbank19_mem_adr0_we;
wire [18:0] builder_csrbank19_mem_adr0_w;
wire builder_csrbank19_mem_we0_re;
wire builder_csrbank19_mem_we0_r;
wire builder_csrbank19_mem_we0_we;
wire builder_csrbank19_mem_we0_w;
wire builder_csrbank19_mem_data_w0_re;
wire [11:0] builder_csrbank19_mem_data_w0_r;
wire builder_csrbank19_mem_data_w0_we;
wire [11:0] builder_csrbank19_mem_data_w0_w;
wire builder_csrbank19_mem_data_r_re;
wire [11:0] builder_csrbank19_mem_data_r_r;
wire builder_csrbank19_mem_data_r_we;
wire [11:0] builder_csrbank19_mem_data_r_w;
wire builder_csrbank19_sel;
wire [13:0] builder_csr_interconnect_adr;
wire builder_csr_interconnect_we;
wire [31:0] builder_csr_interconnect_dat_w;
wire [31:0] builder_csr_interconnect_dat_r;
reg builder_state = 1'd0;
reg builder_next_state = 1'd0;
reg [7:0] builder_array_muxed0 = 8'd0;
reg [29:0] builder_array_muxed1 = 30'd0;
reg [31:0] builder_array_muxed2 = 32'd0;
reg [3:0] builder_array_muxed3 = 4'd0;
reg builder_array_muxed4 = 1'd0;
reg builder_array_muxed5 = 1'd0;
reg builder_array_muxed6 = 1'd0;
reg [2:0] builder_array_muxed7 = 3'd0;
reg [1:0] builder_array_muxed8 = 2'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg builder_xilinxmultiregimpl0_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *) reg builder_xilinxmultiregimpl0_regs1 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg [7:0] builder_xilinxmultiregimpl1_regs0 = 8'd0;
(* async_reg = "true", dont_touch = "true" *) reg [7:0] builder_xilinxmultiregimpl1_regs1 = 8'd0;
wire builder_xilinxmultiregimpl1;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg [2:0] builder_xilinxmultiregimpl2_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *) reg [2:0] builder_xilinxmultiregimpl2_regs1 = 3'd0;
wire builder_xilinxmultiregimpl2;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg [1:0] builder_xilinxmultiregimpl3_regs0 = 2'd0;
(* async_reg = "true", dont_touch = "true" *) reg [1:0] builder_xilinxmultiregimpl3_regs1 = 2'd0;
wire builder_xilinxmultiregimpl3;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg builder_xilinxmultiregimpl4_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *) reg builder_xilinxmultiregimpl4_regs1 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg builder_xilinxmultiregimpl5_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *) reg builder_xilinxmultiregimpl5_regs1 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg [2:0] builder_xilinxmultiregimpl6_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *) reg [2:0] builder_xilinxmultiregimpl6_regs1 = 3'd0;
wire builder_xilinxmultiregimpl6;

assign basesoc_basesoc_picorv32_reset = basesoc_basesoc_soccontroller_reset;
assign basesoc_basesoc_soccontroller_bus_error = builder_error;
always @(*) begin
	basesoc_basesoc_picorv32_interrupt <= 32'd0;
	basesoc_basesoc_picorv32_interrupt[1] <= basesoc_basesoc_timer_irq;
	basesoc_basesoc_picorv32_interrupt[0] <= basesoc_basesoc_uart_irq;
	basesoc_basesoc_picorv32_interrupt[2] <= basesoc_uart0_irq;
	basesoc_basesoc_picorv32_interrupt[3] <= basesoc_uart1_irq;
end
assign basesoc_basesoc_soccontroller_reset = basesoc_basesoc_soccontroller_reset_re;
assign basesoc_basesoc_soccontroller_bus_errors_status = basesoc_basesoc_soccontroller_bus_errors;
assign basesoc_basesoc_picorv32_idbus_adr = basesoc_basesoc_picorv32_mem_addr[31:2];
assign basesoc_basesoc_picorv32_idbus_dat_w = basesoc_basesoc_picorv32_mem_wdata;
assign basesoc_basesoc_picorv32_idbus_we = (basesoc_basesoc_picorv32_mem_wstrb != 1'd0);
assign basesoc_basesoc_picorv32_idbus_sel = basesoc_basesoc_picorv32_mem_wstrb;
assign basesoc_basesoc_picorv32_idbus_cyc = basesoc_basesoc_picorv32_mem_valid;
assign basesoc_basesoc_picorv32_idbus_stb = basesoc_basesoc_picorv32_mem_valid;
assign basesoc_basesoc_picorv32_idbus_cti = 1'd0;
assign basesoc_basesoc_picorv32_idbus_bte = 1'd0;
assign basesoc_basesoc_picorv32_mem_ready = basesoc_basesoc_picorv32_idbus_ack;
assign basesoc_basesoc_picorv32_mem_rdata = basesoc_basesoc_picorv32_idbus_dat_r;
assign basesoc_basesoc_adr = basesoc_basesoc_ram_bus_adr[12:0];
assign basesoc_basesoc_ram_bus_dat_r = basesoc_basesoc_dat_r;
always @(*) begin
	basesoc_basesoc_sram0_we <= 4'd0;
	basesoc_basesoc_sram0_we[0] <= (((basesoc_basesoc_interface0_ram_bus_cyc & basesoc_basesoc_interface0_ram_bus_stb) & basesoc_basesoc_interface0_ram_bus_we) & basesoc_basesoc_interface0_ram_bus_sel[0]);
	basesoc_basesoc_sram0_we[1] <= (((basesoc_basesoc_interface0_ram_bus_cyc & basesoc_basesoc_interface0_ram_bus_stb) & basesoc_basesoc_interface0_ram_bus_we) & basesoc_basesoc_interface0_ram_bus_sel[1]);
	basesoc_basesoc_sram0_we[2] <= (((basesoc_basesoc_interface0_ram_bus_cyc & basesoc_basesoc_interface0_ram_bus_stb) & basesoc_basesoc_interface0_ram_bus_we) & basesoc_basesoc_interface0_ram_bus_sel[2]);
	basesoc_basesoc_sram0_we[3] <= (((basesoc_basesoc_interface0_ram_bus_cyc & basesoc_basesoc_interface0_ram_bus_stb) & basesoc_basesoc_interface0_ram_bus_we) & basesoc_basesoc_interface0_ram_bus_sel[3]);
end
assign basesoc_basesoc_sram0_adr = basesoc_basesoc_interface0_ram_bus_adr[10:0];
assign basesoc_basesoc_interface0_ram_bus_dat_r = basesoc_basesoc_sram0_dat_r;
assign basesoc_basesoc_sram0_dat_w = basesoc_basesoc_interface0_ram_bus_dat_w;
always @(*) begin
	basesoc_basesoc_sram1_we <= 4'd0;
	basesoc_basesoc_sram1_we[0] <= (((basesoc_basesoc_interface1_ram_bus_cyc & basesoc_basesoc_interface1_ram_bus_stb) & basesoc_basesoc_interface1_ram_bus_we) & basesoc_basesoc_interface1_ram_bus_sel[0]);
	basesoc_basesoc_sram1_we[1] <= (((basesoc_basesoc_interface1_ram_bus_cyc & basesoc_basesoc_interface1_ram_bus_stb) & basesoc_basesoc_interface1_ram_bus_we) & basesoc_basesoc_interface1_ram_bus_sel[1]);
	basesoc_basesoc_sram1_we[2] <= (((basesoc_basesoc_interface1_ram_bus_cyc & basesoc_basesoc_interface1_ram_bus_stb) & basesoc_basesoc_interface1_ram_bus_we) & basesoc_basesoc_interface1_ram_bus_sel[2]);
	basesoc_basesoc_sram1_we[3] <= (((basesoc_basesoc_interface1_ram_bus_cyc & basesoc_basesoc_interface1_ram_bus_stb) & basesoc_basesoc_interface1_ram_bus_we) & basesoc_basesoc_interface1_ram_bus_sel[3]);
end
assign basesoc_basesoc_sram1_adr = basesoc_basesoc_interface1_ram_bus_adr[11:0];
assign basesoc_basesoc_interface1_ram_bus_dat_r = basesoc_basesoc_sram1_dat_r;
assign basesoc_basesoc_sram1_dat_w = basesoc_basesoc_interface1_ram_bus_dat_w;
assign basesoc_basesoc_uart_uart_sink_valid = basesoc_basesoc_source_valid;
assign basesoc_basesoc_source_ready = basesoc_basesoc_uart_uart_sink_ready;
assign basesoc_basesoc_uart_uart_sink_first = basesoc_basesoc_source_first;
assign basesoc_basesoc_uart_uart_sink_last = basesoc_basesoc_source_last;
assign basesoc_basesoc_uart_uart_sink_payload_data = basesoc_basesoc_source_payload_data;
assign basesoc_basesoc_sink_valid = basesoc_basesoc_uart_uart_source_valid;
assign basesoc_basesoc_uart_uart_source_ready = basesoc_basesoc_sink_ready;
assign basesoc_basesoc_sink_first = basesoc_basesoc_uart_uart_source_first;
assign basesoc_basesoc_sink_last = basesoc_basesoc_uart_uart_source_last;
assign basesoc_basesoc_sink_payload_data = basesoc_basesoc_uart_uart_source_payload_data;
assign basesoc_basesoc_uart_tx_fifo_sink_valid = basesoc_basesoc_uart_rxtx_re;
assign basesoc_basesoc_uart_tx_fifo_sink_payload_data = basesoc_basesoc_uart_rxtx_r;
assign basesoc_basesoc_uart_txfull_status = (~basesoc_basesoc_uart_tx_fifo_sink_ready);
assign basesoc_basesoc_uart_txempty_status = (~basesoc_basesoc_uart_tx_fifo_source_valid);
assign basesoc_basesoc_uart_uart_source_valid = basesoc_basesoc_uart_tx_fifo_source_valid;
assign basesoc_basesoc_uart_tx_fifo_source_ready = basesoc_basesoc_uart_uart_source_ready;
assign basesoc_basesoc_uart_uart_source_first = basesoc_basesoc_uart_tx_fifo_source_first;
assign basesoc_basesoc_uart_uart_source_last = basesoc_basesoc_uart_tx_fifo_source_last;
assign basesoc_basesoc_uart_uart_source_payload_data = basesoc_basesoc_uart_tx_fifo_source_payload_data;
assign basesoc_basesoc_uart_tx_trigger = (~basesoc_basesoc_uart_tx_fifo_sink_ready);
assign basesoc_basesoc_uart_rx_fifo_sink_valid = basesoc_basesoc_uart_uart_sink_valid;
assign basesoc_basesoc_uart_uart_sink_ready = basesoc_basesoc_uart_rx_fifo_sink_ready;
assign basesoc_basesoc_uart_rx_fifo_sink_first = basesoc_basesoc_uart_uart_sink_first;
assign basesoc_basesoc_uart_rx_fifo_sink_last = basesoc_basesoc_uart_uart_sink_last;
assign basesoc_basesoc_uart_rx_fifo_sink_payload_data = basesoc_basesoc_uart_uart_sink_payload_data;
assign basesoc_basesoc_uart_rxempty_status = (~basesoc_basesoc_uart_rx_fifo_source_valid);
assign basesoc_basesoc_uart_rxfull_status = (~basesoc_basesoc_uart_rx_fifo_sink_ready);
assign basesoc_basesoc_uart_rxtx_w = basesoc_basesoc_uart_rx_fifo_source_payload_data;
assign basesoc_basesoc_uart_rx_fifo_source_ready = (basesoc_basesoc_uart_rx_clear | (1'd0 & basesoc_basesoc_uart_rxtx_we));
assign basesoc_basesoc_uart_rx_trigger = (~basesoc_basesoc_uart_rx_fifo_source_valid);
always @(*) begin
	basesoc_basesoc_uart_tx_clear <= 1'd0;
	if ((basesoc_basesoc_uart_eventmanager_pending_re & basesoc_basesoc_uart_eventmanager_pending_r[0])) begin
		basesoc_basesoc_uart_tx_clear <= 1'd1;
	end
end
always @(*) begin
	basesoc_basesoc_uart_eventmanager_status_w <= 2'd0;
	basesoc_basesoc_uart_eventmanager_status_w[0] <= basesoc_basesoc_uart_tx_status;
	basesoc_basesoc_uart_eventmanager_status_w[1] <= basesoc_basesoc_uart_rx_status;
end
always @(*) begin
	basesoc_basesoc_uart_rx_clear <= 1'd0;
	if ((basesoc_basesoc_uart_eventmanager_pending_re & basesoc_basesoc_uart_eventmanager_pending_r[1])) begin
		basesoc_basesoc_uart_rx_clear <= 1'd1;
	end
end
always @(*) begin
	basesoc_basesoc_uart_eventmanager_pending_w <= 2'd0;
	basesoc_basesoc_uart_eventmanager_pending_w[0] <= basesoc_basesoc_uart_tx_pending;
	basesoc_basesoc_uart_eventmanager_pending_w[1] <= basesoc_basesoc_uart_rx_pending;
end
assign basesoc_basesoc_uart_irq = ((basesoc_basesoc_uart_eventmanager_pending_w[0] & basesoc_basesoc_uart_eventmanager_storage[0]) | (basesoc_basesoc_uart_eventmanager_pending_w[1] & basesoc_basesoc_uart_eventmanager_storage[1]));
assign basesoc_basesoc_uart_tx_status = basesoc_basesoc_uart_tx_trigger;
assign basesoc_basesoc_uart_rx_status = basesoc_basesoc_uart_rx_trigger;
assign basesoc_basesoc_uart_tx_fifo_syncfifo_din = {basesoc_basesoc_uart_tx_fifo_fifo_in_last, basesoc_basesoc_uart_tx_fifo_fifo_in_first, basesoc_basesoc_uart_tx_fifo_fifo_in_payload_data};
assign {basesoc_basesoc_uart_tx_fifo_fifo_out_last, basesoc_basesoc_uart_tx_fifo_fifo_out_first, basesoc_basesoc_uart_tx_fifo_fifo_out_payload_data} = basesoc_basesoc_uart_tx_fifo_syncfifo_dout;
assign basesoc_basesoc_uart_tx_fifo_sink_ready = basesoc_basesoc_uart_tx_fifo_syncfifo_writable;
assign basesoc_basesoc_uart_tx_fifo_syncfifo_we = basesoc_basesoc_uart_tx_fifo_sink_valid;
assign basesoc_basesoc_uart_tx_fifo_fifo_in_first = basesoc_basesoc_uart_tx_fifo_sink_first;
assign basesoc_basesoc_uart_tx_fifo_fifo_in_last = basesoc_basesoc_uart_tx_fifo_sink_last;
assign basesoc_basesoc_uart_tx_fifo_fifo_in_payload_data = basesoc_basesoc_uart_tx_fifo_sink_payload_data;
assign basesoc_basesoc_uart_tx_fifo_source_valid = basesoc_basesoc_uart_tx_fifo_readable;
assign basesoc_basesoc_uart_tx_fifo_source_first = basesoc_basesoc_uart_tx_fifo_fifo_out_first;
assign basesoc_basesoc_uart_tx_fifo_source_last = basesoc_basesoc_uart_tx_fifo_fifo_out_last;
assign basesoc_basesoc_uart_tx_fifo_source_payload_data = basesoc_basesoc_uart_tx_fifo_fifo_out_payload_data;
assign basesoc_basesoc_uart_tx_fifo_re = basesoc_basesoc_uart_tx_fifo_source_ready;
assign basesoc_basesoc_uart_tx_fifo_syncfifo_re = (basesoc_basesoc_uart_tx_fifo_syncfifo_readable & ((~basesoc_basesoc_uart_tx_fifo_readable) | basesoc_basesoc_uart_tx_fifo_re));
assign basesoc_basesoc_uart_tx_fifo_level1 = (basesoc_basesoc_uart_tx_fifo_level0 + basesoc_basesoc_uart_tx_fifo_readable);
always @(*) begin
	basesoc_basesoc_uart_tx_fifo_wrport_adr <= 4'd0;
	if (basesoc_basesoc_uart_tx_fifo_replace) begin
		basesoc_basesoc_uart_tx_fifo_wrport_adr <= (basesoc_basesoc_uart_tx_fifo_produce - 1'd1);
	end else begin
		basesoc_basesoc_uart_tx_fifo_wrport_adr <= basesoc_basesoc_uart_tx_fifo_produce;
	end
end
assign basesoc_basesoc_uart_tx_fifo_wrport_dat_w = basesoc_basesoc_uart_tx_fifo_syncfifo_din;
assign basesoc_basesoc_uart_tx_fifo_wrport_we = (basesoc_basesoc_uart_tx_fifo_syncfifo_we & (basesoc_basesoc_uart_tx_fifo_syncfifo_writable | basesoc_basesoc_uart_tx_fifo_replace));
assign basesoc_basesoc_uart_tx_fifo_do_read = (basesoc_basesoc_uart_tx_fifo_syncfifo_readable & basesoc_basesoc_uart_tx_fifo_syncfifo_re);
assign basesoc_basesoc_uart_tx_fifo_rdport_adr = basesoc_basesoc_uart_tx_fifo_consume;
assign basesoc_basesoc_uart_tx_fifo_syncfifo_dout = basesoc_basesoc_uart_tx_fifo_rdport_dat_r;
assign basesoc_basesoc_uart_tx_fifo_rdport_re = basesoc_basesoc_uart_tx_fifo_do_read;
assign basesoc_basesoc_uart_tx_fifo_syncfifo_writable = (basesoc_basesoc_uart_tx_fifo_level0 != 5'd16);
assign basesoc_basesoc_uart_tx_fifo_syncfifo_readable = (basesoc_basesoc_uart_tx_fifo_level0 != 1'd0);
assign basesoc_basesoc_uart_rx_fifo_syncfifo_din = {basesoc_basesoc_uart_rx_fifo_fifo_in_last, basesoc_basesoc_uart_rx_fifo_fifo_in_first, basesoc_basesoc_uart_rx_fifo_fifo_in_payload_data};
assign {basesoc_basesoc_uart_rx_fifo_fifo_out_last, basesoc_basesoc_uart_rx_fifo_fifo_out_first, basesoc_basesoc_uart_rx_fifo_fifo_out_payload_data} = basesoc_basesoc_uart_rx_fifo_syncfifo_dout;
assign basesoc_basesoc_uart_rx_fifo_sink_ready = basesoc_basesoc_uart_rx_fifo_syncfifo_writable;
assign basesoc_basesoc_uart_rx_fifo_syncfifo_we = basesoc_basesoc_uart_rx_fifo_sink_valid;
assign basesoc_basesoc_uart_rx_fifo_fifo_in_first = basesoc_basesoc_uart_rx_fifo_sink_first;
assign basesoc_basesoc_uart_rx_fifo_fifo_in_last = basesoc_basesoc_uart_rx_fifo_sink_last;
assign basesoc_basesoc_uart_rx_fifo_fifo_in_payload_data = basesoc_basesoc_uart_rx_fifo_sink_payload_data;
assign basesoc_basesoc_uart_rx_fifo_source_valid = basesoc_basesoc_uart_rx_fifo_readable;
assign basesoc_basesoc_uart_rx_fifo_source_first = basesoc_basesoc_uart_rx_fifo_fifo_out_first;
assign basesoc_basesoc_uart_rx_fifo_source_last = basesoc_basesoc_uart_rx_fifo_fifo_out_last;
assign basesoc_basesoc_uart_rx_fifo_source_payload_data = basesoc_basesoc_uart_rx_fifo_fifo_out_payload_data;
assign basesoc_basesoc_uart_rx_fifo_re = basesoc_basesoc_uart_rx_fifo_source_ready;
assign basesoc_basesoc_uart_rx_fifo_syncfifo_re = (basesoc_basesoc_uart_rx_fifo_syncfifo_readable & ((~basesoc_basesoc_uart_rx_fifo_readable) | basesoc_basesoc_uart_rx_fifo_re));
assign basesoc_basesoc_uart_rx_fifo_level1 = (basesoc_basesoc_uart_rx_fifo_level0 + basesoc_basesoc_uart_rx_fifo_readable);
always @(*) begin
	basesoc_basesoc_uart_rx_fifo_wrport_adr <= 4'd0;
	if (basesoc_basesoc_uart_rx_fifo_replace) begin
		basesoc_basesoc_uart_rx_fifo_wrport_adr <= (basesoc_basesoc_uart_rx_fifo_produce - 1'd1);
	end else begin
		basesoc_basesoc_uart_rx_fifo_wrport_adr <= basesoc_basesoc_uart_rx_fifo_produce;
	end
end
assign basesoc_basesoc_uart_rx_fifo_wrport_dat_w = basesoc_basesoc_uart_rx_fifo_syncfifo_din;
assign basesoc_basesoc_uart_rx_fifo_wrport_we = (basesoc_basesoc_uart_rx_fifo_syncfifo_we & (basesoc_basesoc_uart_rx_fifo_syncfifo_writable | basesoc_basesoc_uart_rx_fifo_replace));
assign basesoc_basesoc_uart_rx_fifo_do_read = (basesoc_basesoc_uart_rx_fifo_syncfifo_readable & basesoc_basesoc_uart_rx_fifo_syncfifo_re);
assign basesoc_basesoc_uart_rx_fifo_rdport_adr = basesoc_basesoc_uart_rx_fifo_consume;
assign basesoc_basesoc_uart_rx_fifo_syncfifo_dout = basesoc_basesoc_uart_rx_fifo_rdport_dat_r;
assign basesoc_basesoc_uart_rx_fifo_rdport_re = basesoc_basesoc_uart_rx_fifo_do_read;
assign basesoc_basesoc_uart_rx_fifo_syncfifo_writable = (basesoc_basesoc_uart_rx_fifo_level0 != 5'd16);
assign basesoc_basesoc_uart_rx_fifo_syncfifo_readable = (basesoc_basesoc_uart_rx_fifo_level0 != 1'd0);
assign basesoc_basesoc_timer_zero_trigger = (basesoc_basesoc_timer_value != 1'd0);
assign basesoc_basesoc_timer_eventmanager_status_w = basesoc_basesoc_timer_zero_status;
always @(*) begin
	basesoc_basesoc_timer_zero_clear <= 1'd0;
	if ((basesoc_basesoc_timer_eventmanager_pending_re & basesoc_basesoc_timer_eventmanager_pending_r)) begin
		basesoc_basesoc_timer_zero_clear <= 1'd1;
	end
end
assign basesoc_basesoc_timer_eventmanager_pending_w = basesoc_basesoc_timer_zero_pending;
assign basesoc_basesoc_timer_irq = (basesoc_basesoc_timer_eventmanager_pending_w & basesoc_basesoc_timer_eventmanager_storage);
assign basesoc_basesoc_timer_zero_status = basesoc_basesoc_timer_zero_trigger;
assign sys_clk = clk;
assign por_clk = clk;
assign sys_rst = basesoc_int_rst;
assign {led9, led8, led7, led6, led5, led4, led3, led2, led1, led0} = basesoc_leds_storage;
assign basesoc_displays0 = basesoc_dig_0_storage;
assign basesoc_displays1 = basesoc_dig_1_storage;
assign basesoc_displays2 = basesoc_dig_2_storage;
assign basesoc_displays3 = basesoc_dig_3_storage;
assign basesoc_displays4 = basesoc_dig_4_storage;
assign basesoc_displays5 = basesoc_dig_5_storage;
assign basesoc_displays6 = basesoc_dig_6_storage;
assign basesoc_displays7 = basesoc_dig_7_storage;
assign {display_digit7, display_digit6, display_digit5, display_digit4, display_digit3, display_digit2, display_digit1, display_digit0} = (~(1'd1 <<< basesoc_dgt_count));
assign {display_segment7, display_segment6, display_segment5, display_segment4, display_segment3, display_segment2, display_segment1, display_segment0} = (~builder_array_muxed0);
assign basesoc_p_w_adr = basesoc_mem_adr_storage;
assign basesoc_p_w_we = basesoc_mem_we_storage;
assign basesoc_mem_data_r_status = basesoc_p_w_dat_r;
assign basesoc_p_w_dat_w = basesoc_mem_data_w_storage;
assign hsync = ((basesoc_h_count >= 10'd656) & (basesoc_h_count < 10'd752));
assign vsync = ((basesoc_v_count >= 9'd490) & (basesoc_v_count < 9'd492));
assign basesoc_active = ((basesoc_h_count < 10'd640) & (basesoc_v_count < 9'd480));
assign {vga_red3, vga_red2, vga_red1, vga_red0} = (basesoc_active * basesoc_p_r_dat_r[11:8]);
assign {vga_green3, vga_green2, vga_green1, vga_green0} = (basesoc_active * basesoc_p_r_dat_r[7:4]);
assign {vga_blue3, vga_blue2, vga_blue1, vga_blue0} = (basesoc_active * basesoc_p_r_dat_r[3:0]);
assign basesoc_uart0_uart0_sink_valid = basesoc_uart1_phy_source_valid;
assign basesoc_uart1_phy_source_ready = basesoc_uart0_uart0_sink_ready;
assign basesoc_uart0_uart0_sink_first = basesoc_uart1_phy_source_first;
assign basesoc_uart0_uart0_sink_last = basesoc_uart1_phy_source_last;
assign basesoc_uart0_uart0_sink_payload_data = basesoc_uart1_phy_source_payload_data;
assign basesoc_uart1_phy_sink_valid = basesoc_uart0_uart0_source_valid;
assign basesoc_uart0_uart0_source_ready = basesoc_uart1_phy_sink_ready;
assign basesoc_uart1_phy_sink_first = basesoc_uart0_uart0_source_first;
assign basesoc_uart1_phy_sink_last = basesoc_uart0_uart0_source_last;
assign basesoc_uart1_phy_sink_payload_data = basesoc_uart0_uart0_source_payload_data;
assign basesoc_uart0_tx_fifo_sink_valid = basesoc_uart0_rxtx_re;
assign basesoc_uart0_tx_fifo_sink_payload_data = basesoc_uart0_rxtx_r;
assign basesoc_uart0_txfull_status = (~basesoc_uart0_tx_fifo_sink_ready);
assign basesoc_uart0_txempty_status = (~basesoc_uart0_tx_fifo_source_valid);
assign basesoc_uart0_uart0_source_valid = basesoc_uart0_tx_fifo_source_valid;
assign basesoc_uart0_tx_fifo_source_ready = basesoc_uart0_uart0_source_ready;
assign basesoc_uart0_uart0_source_first = basesoc_uart0_tx_fifo_source_first;
assign basesoc_uart0_uart0_source_last = basesoc_uart0_tx_fifo_source_last;
assign basesoc_uart0_uart0_source_payload_data = basesoc_uart0_tx_fifo_source_payload_data;
assign basesoc_uart0_tx_trigger = (~basesoc_uart0_tx_fifo_sink_ready);
assign basesoc_uart0_rx_fifo_sink_valid = basesoc_uart0_uart0_sink_valid;
assign basesoc_uart0_uart0_sink_ready = basesoc_uart0_rx_fifo_sink_ready;
assign basesoc_uart0_rx_fifo_sink_first = basesoc_uart0_uart0_sink_first;
assign basesoc_uart0_rx_fifo_sink_last = basesoc_uart0_uart0_sink_last;
assign basesoc_uart0_rx_fifo_sink_payload_data = basesoc_uart0_uart0_sink_payload_data;
assign basesoc_uart0_rxempty_status = (~basesoc_uart0_rx_fifo_source_valid);
assign basesoc_uart0_rxfull_status = (~basesoc_uart0_rx_fifo_sink_ready);
assign basesoc_uart0_rxtx_w = basesoc_uart0_rx_fifo_source_payload_data;
assign basesoc_uart0_rx_fifo_source_ready = (basesoc_uart0_rx_clear | (1'd0 & basesoc_uart0_rxtx_we));
assign basesoc_uart0_rx_trigger = (~basesoc_uart0_rx_fifo_source_valid);
always @(*) begin
	basesoc_uart0_tx_clear <= 1'd0;
	if ((basesoc_uart0_eventmanager0_pending_re & basesoc_uart0_eventmanager0_pending_r[0])) begin
		basesoc_uart0_tx_clear <= 1'd1;
	end
end
always @(*) begin
	basesoc_uart0_eventmanager0_status_w <= 2'd0;
	basesoc_uart0_eventmanager0_status_w[0] <= basesoc_uart0_tx_status;
	basesoc_uart0_eventmanager0_status_w[1] <= basesoc_uart0_rx_status;
end
always @(*) begin
	basesoc_uart0_rx_clear <= 1'd0;
	if ((basesoc_uart0_eventmanager0_pending_re & basesoc_uart0_eventmanager0_pending_r[1])) begin
		basesoc_uart0_rx_clear <= 1'd1;
	end
end
always @(*) begin
	basesoc_uart0_eventmanager0_pending_w <= 2'd0;
	basesoc_uart0_eventmanager0_pending_w[0] <= basesoc_uart0_tx_pending;
	basesoc_uart0_eventmanager0_pending_w[1] <= basesoc_uart0_rx_pending;
end
assign basesoc_uart0_irq = ((basesoc_uart0_eventmanager0_pending_w[0] & basesoc_uart0_eventmanager0_storage[0]) | (basesoc_uart0_eventmanager0_pending_w[1] & basesoc_uart0_eventmanager0_storage[1]));
assign basesoc_uart0_tx_status = basesoc_uart0_tx_trigger;
assign basesoc_uart0_rx_status = basesoc_uart0_rx_trigger;
assign basesoc_uart0_tx_fifo_syncfifo0_din = {basesoc_uart0_tx_fifo_fifo_in_last, basesoc_uart0_tx_fifo_fifo_in_first, basesoc_uart0_tx_fifo_fifo_in_payload_data};
assign {basesoc_uart0_tx_fifo_fifo_out_last, basesoc_uart0_tx_fifo_fifo_out_first, basesoc_uart0_tx_fifo_fifo_out_payload_data} = basesoc_uart0_tx_fifo_syncfifo0_dout;
assign basesoc_uart0_tx_fifo_sink_ready = basesoc_uart0_tx_fifo_syncfifo0_writable;
assign basesoc_uart0_tx_fifo_syncfifo0_we = basesoc_uart0_tx_fifo_sink_valid;
assign basesoc_uart0_tx_fifo_fifo_in_first = basesoc_uart0_tx_fifo_sink_first;
assign basesoc_uart0_tx_fifo_fifo_in_last = basesoc_uart0_tx_fifo_sink_last;
assign basesoc_uart0_tx_fifo_fifo_in_payload_data = basesoc_uart0_tx_fifo_sink_payload_data;
assign basesoc_uart0_tx_fifo_source_valid = basesoc_uart0_tx_fifo_readable;
assign basesoc_uart0_tx_fifo_source_first = basesoc_uart0_tx_fifo_fifo_out_first;
assign basesoc_uart0_tx_fifo_source_last = basesoc_uart0_tx_fifo_fifo_out_last;
assign basesoc_uart0_tx_fifo_source_payload_data = basesoc_uart0_tx_fifo_fifo_out_payload_data;
assign basesoc_uart0_tx_fifo_re = basesoc_uart0_tx_fifo_source_ready;
assign basesoc_uart0_tx_fifo_syncfifo0_re = (basesoc_uart0_tx_fifo_syncfifo0_readable & ((~basesoc_uart0_tx_fifo_readable) | basesoc_uart0_tx_fifo_re));
assign basesoc_uart0_tx_fifo_level1 = (basesoc_uart0_tx_fifo_level0 + basesoc_uart0_tx_fifo_readable);
always @(*) begin
	basesoc_uart0_tx_fifo_wrport_adr <= 4'd0;
	if (basesoc_uart0_tx_fifo_replace) begin
		basesoc_uart0_tx_fifo_wrport_adr <= (basesoc_uart0_tx_fifo_produce - 1'd1);
	end else begin
		basesoc_uart0_tx_fifo_wrport_adr <= basesoc_uart0_tx_fifo_produce;
	end
end
assign basesoc_uart0_tx_fifo_wrport_dat_w = basesoc_uart0_tx_fifo_syncfifo0_din;
assign basesoc_uart0_tx_fifo_wrport_we = (basesoc_uart0_tx_fifo_syncfifo0_we & (basesoc_uart0_tx_fifo_syncfifo0_writable | basesoc_uart0_tx_fifo_replace));
assign basesoc_uart0_tx_fifo_do_read = (basesoc_uart0_tx_fifo_syncfifo0_readable & basesoc_uart0_tx_fifo_syncfifo0_re);
assign basesoc_uart0_tx_fifo_rdport_adr = basesoc_uart0_tx_fifo_consume;
assign basesoc_uart0_tx_fifo_syncfifo0_dout = basesoc_uart0_tx_fifo_rdport_dat_r;
assign basesoc_uart0_tx_fifo_rdport_re = basesoc_uart0_tx_fifo_do_read;
assign basesoc_uart0_tx_fifo_syncfifo0_writable = (basesoc_uart0_tx_fifo_level0 != 5'd16);
assign basesoc_uart0_tx_fifo_syncfifo0_readable = (basesoc_uart0_tx_fifo_level0 != 1'd0);
assign basesoc_uart0_rx_fifo_syncfifo0_din = {basesoc_uart0_rx_fifo_fifo_in_last, basesoc_uart0_rx_fifo_fifo_in_first, basesoc_uart0_rx_fifo_fifo_in_payload_data};
assign {basesoc_uart0_rx_fifo_fifo_out_last, basesoc_uart0_rx_fifo_fifo_out_first, basesoc_uart0_rx_fifo_fifo_out_payload_data} = basesoc_uart0_rx_fifo_syncfifo0_dout;
assign basesoc_uart0_rx_fifo_sink_ready = basesoc_uart0_rx_fifo_syncfifo0_writable;
assign basesoc_uart0_rx_fifo_syncfifo0_we = basesoc_uart0_rx_fifo_sink_valid;
assign basesoc_uart0_rx_fifo_fifo_in_first = basesoc_uart0_rx_fifo_sink_first;
assign basesoc_uart0_rx_fifo_fifo_in_last = basesoc_uart0_rx_fifo_sink_last;
assign basesoc_uart0_rx_fifo_fifo_in_payload_data = basesoc_uart0_rx_fifo_sink_payload_data;
assign basesoc_uart0_rx_fifo_source_valid = basesoc_uart0_rx_fifo_readable;
assign basesoc_uart0_rx_fifo_source_first = basesoc_uart0_rx_fifo_fifo_out_first;
assign basesoc_uart0_rx_fifo_source_last = basesoc_uart0_rx_fifo_fifo_out_last;
assign basesoc_uart0_rx_fifo_source_payload_data = basesoc_uart0_rx_fifo_fifo_out_payload_data;
assign basesoc_uart0_rx_fifo_re = basesoc_uart0_rx_fifo_source_ready;
assign basesoc_uart0_rx_fifo_syncfifo0_re = (basesoc_uart0_rx_fifo_syncfifo0_readable & ((~basesoc_uart0_rx_fifo_readable) | basesoc_uart0_rx_fifo_re));
assign basesoc_uart0_rx_fifo_level1 = (basesoc_uart0_rx_fifo_level0 + basesoc_uart0_rx_fifo_readable);
always @(*) begin
	basesoc_uart0_rx_fifo_wrport_adr <= 4'd0;
	if (basesoc_uart0_rx_fifo_replace) begin
		basesoc_uart0_rx_fifo_wrport_adr <= (basesoc_uart0_rx_fifo_produce - 1'd1);
	end else begin
		basesoc_uart0_rx_fifo_wrport_adr <= basesoc_uart0_rx_fifo_produce;
	end
end
assign basesoc_uart0_rx_fifo_wrport_dat_w = basesoc_uart0_rx_fifo_syncfifo0_din;
assign basesoc_uart0_rx_fifo_wrport_we = (basesoc_uart0_rx_fifo_syncfifo0_we & (basesoc_uart0_rx_fifo_syncfifo0_writable | basesoc_uart0_rx_fifo_replace));
assign basesoc_uart0_rx_fifo_do_read = (basesoc_uart0_rx_fifo_syncfifo0_readable & basesoc_uart0_rx_fifo_syncfifo0_re);
assign basesoc_uart0_rx_fifo_rdport_adr = basesoc_uart0_rx_fifo_consume;
assign basesoc_uart0_rx_fifo_syncfifo0_dout = basesoc_uart0_rx_fifo_rdport_dat_r;
assign basesoc_uart0_rx_fifo_rdport_re = basesoc_uart0_rx_fifo_do_read;
assign basesoc_uart0_rx_fifo_syncfifo0_writable = (basesoc_uart0_rx_fifo_level0 != 5'd16);
assign basesoc_uart0_rx_fifo_syncfifo0_readable = (basesoc_uart0_rx_fifo_level0 != 1'd0);
assign basesoc_uart1_uart1_sink_valid = basesoc_uart2_phy_source_valid;
assign basesoc_uart2_phy_source_ready = basesoc_uart1_uart1_sink_ready;
assign basesoc_uart1_uart1_sink_first = basesoc_uart2_phy_source_first;
assign basesoc_uart1_uart1_sink_last = basesoc_uart2_phy_source_last;
assign basesoc_uart1_uart1_sink_payload_data = basesoc_uart2_phy_source_payload_data;
assign basesoc_uart2_phy_sink_valid = basesoc_uart1_uart1_source_valid;
assign basesoc_uart1_uart1_source_ready = basesoc_uart2_phy_sink_ready;
assign basesoc_uart2_phy_sink_first = basesoc_uart1_uart1_source_first;
assign basesoc_uart2_phy_sink_last = basesoc_uart1_uart1_source_last;
assign basesoc_uart2_phy_sink_payload_data = basesoc_uart1_uart1_source_payload_data;
assign basesoc_uart1_tx_fifo_sink_valid = basesoc_uart1_rxtx_re;
assign basesoc_uart1_tx_fifo_sink_payload_data = basesoc_uart1_rxtx_r;
assign basesoc_uart1_txfull_status = (~basesoc_uart1_tx_fifo_sink_ready);
assign basesoc_uart1_txempty_status = (~basesoc_uart1_tx_fifo_source_valid);
assign basesoc_uart1_uart1_source_valid = basesoc_uart1_tx_fifo_source_valid;
assign basesoc_uart1_tx_fifo_source_ready = basesoc_uart1_uart1_source_ready;
assign basesoc_uart1_uart1_source_first = basesoc_uart1_tx_fifo_source_first;
assign basesoc_uart1_uart1_source_last = basesoc_uart1_tx_fifo_source_last;
assign basesoc_uart1_uart1_source_payload_data = basesoc_uart1_tx_fifo_source_payload_data;
assign basesoc_uart1_tx_trigger = (~basesoc_uart1_tx_fifo_sink_ready);
assign basesoc_uart1_rx_fifo_sink_valid = basesoc_uart1_uart1_sink_valid;
assign basesoc_uart1_uart1_sink_ready = basesoc_uart1_rx_fifo_sink_ready;
assign basesoc_uart1_rx_fifo_sink_first = basesoc_uart1_uart1_sink_first;
assign basesoc_uart1_rx_fifo_sink_last = basesoc_uart1_uart1_sink_last;
assign basesoc_uart1_rx_fifo_sink_payload_data = basesoc_uart1_uart1_sink_payload_data;
assign basesoc_uart1_rxempty_status = (~basesoc_uart1_rx_fifo_source_valid);
assign basesoc_uart1_rxfull_status = (~basesoc_uart1_rx_fifo_sink_ready);
assign basesoc_uart1_rxtx_w = basesoc_uart1_rx_fifo_source_payload_data;
assign basesoc_uart1_rx_fifo_source_ready = (basesoc_uart1_rx_clear | (1'd0 & basesoc_uart1_rxtx_we));
assign basesoc_uart1_rx_trigger = (~basesoc_uart1_rx_fifo_source_valid);
always @(*) begin
	basesoc_uart1_tx_clear <= 1'd0;
	if ((basesoc_uart1_eventmanager1_pending_re & basesoc_uart1_eventmanager1_pending_r[0])) begin
		basesoc_uart1_tx_clear <= 1'd1;
	end
end
always @(*) begin
	basesoc_uart1_eventmanager1_status_w <= 2'd0;
	basesoc_uart1_eventmanager1_status_w[0] <= basesoc_uart1_tx_status;
	basesoc_uart1_eventmanager1_status_w[1] <= basesoc_uart1_rx_status;
end
always @(*) begin
	basesoc_uart1_rx_clear <= 1'd0;
	if ((basesoc_uart1_eventmanager1_pending_re & basesoc_uart1_eventmanager1_pending_r[1])) begin
		basesoc_uart1_rx_clear <= 1'd1;
	end
end
always @(*) begin
	basesoc_uart1_eventmanager1_pending_w <= 2'd0;
	basesoc_uart1_eventmanager1_pending_w[0] <= basesoc_uart1_tx_pending;
	basesoc_uart1_eventmanager1_pending_w[1] <= basesoc_uart1_rx_pending;
end
assign basesoc_uart1_irq = ((basesoc_uart1_eventmanager1_pending_w[0] & basesoc_uart1_eventmanager1_storage[0]) | (basesoc_uart1_eventmanager1_pending_w[1] & basesoc_uart1_eventmanager1_storage[1]));
assign basesoc_uart1_tx_status = basesoc_uart1_tx_trigger;
assign basesoc_uart1_rx_status = basesoc_uart1_rx_trigger;
assign basesoc_uart1_tx_fifo_syncfifo1_din = {basesoc_uart1_tx_fifo_fifo_in_last, basesoc_uart1_tx_fifo_fifo_in_first, basesoc_uart1_tx_fifo_fifo_in_payload_data};
assign {basesoc_uart1_tx_fifo_fifo_out_last, basesoc_uart1_tx_fifo_fifo_out_first, basesoc_uart1_tx_fifo_fifo_out_payload_data} = basesoc_uart1_tx_fifo_syncfifo1_dout;
assign basesoc_uart1_tx_fifo_sink_ready = basesoc_uart1_tx_fifo_syncfifo1_writable;
assign basesoc_uart1_tx_fifo_syncfifo1_we = basesoc_uart1_tx_fifo_sink_valid;
assign basesoc_uart1_tx_fifo_fifo_in_first = basesoc_uart1_tx_fifo_sink_first;
assign basesoc_uart1_tx_fifo_fifo_in_last = basesoc_uart1_tx_fifo_sink_last;
assign basesoc_uart1_tx_fifo_fifo_in_payload_data = basesoc_uart1_tx_fifo_sink_payload_data;
assign basesoc_uart1_tx_fifo_source_valid = basesoc_uart1_tx_fifo_readable;
assign basesoc_uart1_tx_fifo_source_first = basesoc_uart1_tx_fifo_fifo_out_first;
assign basesoc_uart1_tx_fifo_source_last = basesoc_uart1_tx_fifo_fifo_out_last;
assign basesoc_uart1_tx_fifo_source_payload_data = basesoc_uart1_tx_fifo_fifo_out_payload_data;
assign basesoc_uart1_tx_fifo_re = basesoc_uart1_tx_fifo_source_ready;
assign basesoc_uart1_tx_fifo_syncfifo1_re = (basesoc_uart1_tx_fifo_syncfifo1_readable & ((~basesoc_uart1_tx_fifo_readable) | basesoc_uart1_tx_fifo_re));
assign basesoc_uart1_tx_fifo_level1 = (basesoc_uart1_tx_fifo_level0 + basesoc_uart1_tx_fifo_readable);
always @(*) begin
	basesoc_uart1_tx_fifo_wrport_adr <= 4'd0;
	if (basesoc_uart1_tx_fifo_replace) begin
		basesoc_uart1_tx_fifo_wrport_adr <= (basesoc_uart1_tx_fifo_produce - 1'd1);
	end else begin
		basesoc_uart1_tx_fifo_wrport_adr <= basesoc_uart1_tx_fifo_produce;
	end
end
assign basesoc_uart1_tx_fifo_wrport_dat_w = basesoc_uart1_tx_fifo_syncfifo1_din;
assign basesoc_uart1_tx_fifo_wrport_we = (basesoc_uart1_tx_fifo_syncfifo1_we & (basesoc_uart1_tx_fifo_syncfifo1_writable | basesoc_uart1_tx_fifo_replace));
assign basesoc_uart1_tx_fifo_do_read = (basesoc_uart1_tx_fifo_syncfifo1_readable & basesoc_uart1_tx_fifo_syncfifo1_re);
assign basesoc_uart1_tx_fifo_rdport_adr = basesoc_uart1_tx_fifo_consume;
assign basesoc_uart1_tx_fifo_syncfifo1_dout = basesoc_uart1_tx_fifo_rdport_dat_r;
assign basesoc_uart1_tx_fifo_rdport_re = basesoc_uart1_tx_fifo_do_read;
assign basesoc_uart1_tx_fifo_syncfifo1_writable = (basesoc_uart1_tx_fifo_level0 != 5'd16);
assign basesoc_uart1_tx_fifo_syncfifo1_readable = (basesoc_uart1_tx_fifo_level0 != 1'd0);
assign basesoc_uart1_rx_fifo_syncfifo1_din = {basesoc_uart1_rx_fifo_fifo_in_last, basesoc_uart1_rx_fifo_fifo_in_first, basesoc_uart1_rx_fifo_fifo_in_payload_data};
assign {basesoc_uart1_rx_fifo_fifo_out_last, basesoc_uart1_rx_fifo_fifo_out_first, basesoc_uart1_rx_fifo_fifo_out_payload_data} = basesoc_uart1_rx_fifo_syncfifo1_dout;
assign basesoc_uart1_rx_fifo_sink_ready = basesoc_uart1_rx_fifo_syncfifo1_writable;
assign basesoc_uart1_rx_fifo_syncfifo1_we = basesoc_uart1_rx_fifo_sink_valid;
assign basesoc_uart1_rx_fifo_fifo_in_first = basesoc_uart1_rx_fifo_sink_first;
assign basesoc_uart1_rx_fifo_fifo_in_last = basesoc_uart1_rx_fifo_sink_last;
assign basesoc_uart1_rx_fifo_fifo_in_payload_data = basesoc_uart1_rx_fifo_sink_payload_data;
assign basesoc_uart1_rx_fifo_source_valid = basesoc_uart1_rx_fifo_readable;
assign basesoc_uart1_rx_fifo_source_first = basesoc_uart1_rx_fifo_fifo_out_first;
assign basesoc_uart1_rx_fifo_source_last = basesoc_uart1_rx_fifo_fifo_out_last;
assign basesoc_uart1_rx_fifo_source_payload_data = basesoc_uart1_rx_fifo_fifo_out_payload_data;
assign basesoc_uart1_rx_fifo_re = basesoc_uart1_rx_fifo_source_ready;
assign basesoc_uart1_rx_fifo_syncfifo1_re = (basesoc_uart1_rx_fifo_syncfifo1_readable & ((~basesoc_uart1_rx_fifo_readable) | basesoc_uart1_rx_fifo_re));
assign basesoc_uart1_rx_fifo_level1 = (basesoc_uart1_rx_fifo_level0 + basesoc_uart1_rx_fifo_readable);
always @(*) begin
	basesoc_uart1_rx_fifo_wrport_adr <= 4'd0;
	if (basesoc_uart1_rx_fifo_replace) begin
		basesoc_uart1_rx_fifo_wrport_adr <= (basesoc_uart1_rx_fifo_produce - 1'd1);
	end else begin
		basesoc_uart1_rx_fifo_wrport_adr <= basesoc_uart1_rx_fifo_produce;
	end
end
assign basesoc_uart1_rx_fifo_wrport_dat_w = basesoc_uart1_rx_fifo_syncfifo1_din;
assign basesoc_uart1_rx_fifo_wrport_we = (basesoc_uart1_rx_fifo_syncfifo1_we & (basesoc_uart1_rx_fifo_syncfifo1_writable | basesoc_uart1_rx_fifo_replace));
assign basesoc_uart1_rx_fifo_do_read = (basesoc_uart1_rx_fifo_syncfifo1_readable & basesoc_uart1_rx_fifo_syncfifo1_re);
assign basesoc_uart1_rx_fifo_rdport_adr = basesoc_uart1_rx_fifo_consume;
assign basesoc_uart1_rx_fifo_syncfifo1_dout = basesoc_uart1_rx_fifo_rdport_dat_r;
assign basesoc_uart1_rx_fifo_rdport_re = basesoc_uart1_rx_fifo_do_read;
assign basesoc_uart1_rx_fifo_syncfifo1_writable = (basesoc_uart1_rx_fifo_level0 != 5'd16);
assign basesoc_uart1_rx_fifo_syncfifo1_readable = (basesoc_uart1_rx_fifo_level0 != 1'd0);
assign basesoc_pwm_cntrl_eventmanager_status_w = basesoc_pwm_cntrl_status;
always @(*) begin
	basesoc_pwm_cntrl_clear <= 1'd0;
	if ((basesoc_pwm_cntrl_eventmanager_pending_re & basesoc_pwm_cntrl_eventmanager_pending_r)) begin
		basesoc_pwm_cntrl_clear <= 1'd1;
	end
end
assign basesoc_pwm_cntrl_eventmanager_pending_w = basesoc_pwm_cntrl_pending;
assign basesoc_pwm_cntrl_irq = (basesoc_pwm_cntrl_eventmanager_pending_w & basesoc_pwm_cntrl_eventmanager_storage);
assign basesoc_pwm_cntrl_status = basesoc_pwm_cntrl_trigger;
assign basesoc_US_cntrl_eventmanager_status_w = basesoc_US_cntrl_ok_status;
always @(*) begin
	basesoc_US_cntrl_ok_clear <= 1'd0;
	if ((basesoc_US_cntrl_eventmanager_pending_re & basesoc_US_cntrl_eventmanager_pending_r)) begin
		basesoc_US_cntrl_ok_clear <= 1'd1;
	end
end
assign basesoc_US_cntrl_eventmanager_pending_w = basesoc_US_cntrl_ok_pending;
assign basesoc_US_cntrl_irq = (basesoc_US_cntrl_eventmanager_pending_w & basesoc_US_cntrl_eventmanager_storage);
assign basesoc_US_cntrl_ok_status = basesoc_US_cntrl_ok_trigger;
assign basesoc_Process_cntrl_eventmanager_status_w = basesoc_Process_cntrl_ok_status;
always @(*) begin
	basesoc_Process_cntrl_ok_clear <= 1'd0;
	if ((basesoc_Process_cntrl_eventmanager_pending_re & basesoc_Process_cntrl_eventmanager_pending_r)) begin
		basesoc_Process_cntrl_ok_clear <= 1'd1;
	end
end
assign basesoc_Process_cntrl_eventmanager_pending_w = basesoc_Process_cntrl_ok_pending;
assign basesoc_Process_cntrl_irq = (basesoc_Process_cntrl_eventmanager_pending_w & basesoc_Process_cntrl_eventmanager_storage);
assign basesoc_Process_cntrl_ok_status = basesoc_Process_cntrl_ok_trigger;
always @(*) begin
	builder_basesoc_wishbone_dat_r <= 32'd0;
	builder_basesoc_adr <= 14'd0;
	builder_basesoc_we <= 1'd0;
	builder_basesoc_dat_w <= 32'd0;
	builder_next_state <= 1'd0;
	builder_basesoc_wishbone_ack <= 1'd0;
	builder_next_state <= builder_state;
	case (builder_state)
		1'd1: begin
			builder_basesoc_wishbone_ack <= 1'd1;
			builder_basesoc_wishbone_dat_r <= builder_basesoc_dat_r;
			builder_next_state <= 1'd0;
		end
		default: begin
			builder_basesoc_dat_w <= builder_basesoc_wishbone_dat_w;
			if ((builder_basesoc_wishbone_cyc & builder_basesoc_wishbone_stb)) begin
				builder_basesoc_adr <= builder_basesoc_wishbone_adr;
				builder_basesoc_we <= (builder_basesoc_wishbone_we & (builder_basesoc_wishbone_sel != 1'd0));
				builder_next_state <= 1'd1;
			end
		end
	endcase
end
assign builder_shared_adr = builder_array_muxed1;
assign builder_shared_dat_w = builder_array_muxed2;
assign builder_shared_sel = builder_array_muxed3;
assign builder_shared_cyc = builder_array_muxed4;
assign builder_shared_stb = builder_array_muxed5;
assign builder_shared_we = builder_array_muxed6;
assign builder_shared_cti = builder_array_muxed7;
assign builder_shared_bte = builder_array_muxed8;
assign basesoc_basesoc_picorv32_idbus_dat_r = builder_shared_dat_r;
assign basesoc_basesoc_picorv32_idbus_ack = (builder_shared_ack & (builder_grant == 1'd0));
assign basesoc_basesoc_picorv32_idbus_err = (builder_shared_err & (builder_grant == 1'd0));
assign builder_request = {basesoc_basesoc_picorv32_idbus_cyc};
assign builder_grant = 1'd0;
always @(*) begin
	builder_slave_sel <= 4'd0;
	builder_slave_sel[0] <= (builder_shared_adr[29:13] == 1'd0);
	builder_slave_sel[1] <= (builder_shared_adr[29:11] == 12'd2048);
	builder_slave_sel[2] <= (builder_shared_adr[29:12] == 17'd65536);
	builder_slave_sel[3] <= (builder_shared_adr[29:14] == 16'd33280);
end
assign basesoc_basesoc_ram_bus_adr = builder_shared_adr;
assign basesoc_basesoc_ram_bus_dat_w = builder_shared_dat_w;
assign basesoc_basesoc_ram_bus_sel = builder_shared_sel;
assign basesoc_basesoc_ram_bus_stb = builder_shared_stb;
assign basesoc_basesoc_ram_bus_we = builder_shared_we;
assign basesoc_basesoc_ram_bus_cti = builder_shared_cti;
assign basesoc_basesoc_ram_bus_bte = builder_shared_bte;
assign basesoc_basesoc_interface0_ram_bus_adr = builder_shared_adr;
assign basesoc_basesoc_interface0_ram_bus_dat_w = builder_shared_dat_w;
assign basesoc_basesoc_interface0_ram_bus_sel = builder_shared_sel;
assign basesoc_basesoc_interface0_ram_bus_stb = builder_shared_stb;
assign basesoc_basesoc_interface0_ram_bus_we = builder_shared_we;
assign basesoc_basesoc_interface0_ram_bus_cti = builder_shared_cti;
assign basesoc_basesoc_interface0_ram_bus_bte = builder_shared_bte;
assign basesoc_basesoc_interface1_ram_bus_adr = builder_shared_adr;
assign basesoc_basesoc_interface1_ram_bus_dat_w = builder_shared_dat_w;
assign basesoc_basesoc_interface1_ram_bus_sel = builder_shared_sel;
assign basesoc_basesoc_interface1_ram_bus_stb = builder_shared_stb;
assign basesoc_basesoc_interface1_ram_bus_we = builder_shared_we;
assign basesoc_basesoc_interface1_ram_bus_cti = builder_shared_cti;
assign basesoc_basesoc_interface1_ram_bus_bte = builder_shared_bte;
assign builder_basesoc_wishbone_adr = builder_shared_adr;
assign builder_basesoc_wishbone_dat_w = builder_shared_dat_w;
assign builder_basesoc_wishbone_sel = builder_shared_sel;
assign builder_basesoc_wishbone_stb = builder_shared_stb;
assign builder_basesoc_wishbone_we = builder_shared_we;
assign builder_basesoc_wishbone_cti = builder_shared_cti;
assign builder_basesoc_wishbone_bte = builder_shared_bte;
assign basesoc_basesoc_ram_bus_cyc = (builder_shared_cyc & builder_slave_sel[0]);
assign basesoc_basesoc_interface0_ram_bus_cyc = (builder_shared_cyc & builder_slave_sel[1]);
assign basesoc_basesoc_interface1_ram_bus_cyc = (builder_shared_cyc & builder_slave_sel[2]);
assign builder_basesoc_wishbone_cyc = (builder_shared_cyc & builder_slave_sel[3]);
assign builder_shared_err = (((basesoc_basesoc_ram_bus_err | basesoc_basesoc_interface0_ram_bus_err) | basesoc_basesoc_interface1_ram_bus_err) | builder_basesoc_wishbone_err);
assign builder_wait = ((builder_shared_stb & builder_shared_cyc) & (~builder_shared_ack));
always @(*) begin
	builder_error <= 1'd0;
	builder_shared_dat_r <= 32'd0;
	builder_shared_ack <= 1'd0;
	builder_shared_ack <= (((basesoc_basesoc_ram_bus_ack | basesoc_basesoc_interface0_ram_bus_ack) | basesoc_basesoc_interface1_ram_bus_ack) | builder_basesoc_wishbone_ack);
	builder_shared_dat_r <= (((({32{builder_slave_sel_r[0]}} & basesoc_basesoc_ram_bus_dat_r) | ({32{builder_slave_sel_r[1]}} & basesoc_basesoc_interface0_ram_bus_dat_r)) | ({32{builder_slave_sel_r[2]}} & basesoc_basesoc_interface1_ram_bus_dat_r)) | ({32{builder_slave_sel_r[3]}} & builder_basesoc_wishbone_dat_r));
	if (builder_done) begin
		builder_shared_dat_r <= 32'd4294967295;
		builder_shared_ack <= 1'd1;
		builder_error <= 1'd1;
	end
end
assign builder_done = (builder_count == 1'd0);
assign builder_csrbank0_sel = (builder_interface0_bank_bus_adr[13:9] == 5'd20);
assign builder_csrbank0_enable0_r = builder_interface0_bank_bus_dat_w[0];
assign builder_csrbank0_enable0_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 1'd0));
assign builder_csrbank0_enable0_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 1'd0));
assign builder_csrbank0_CAM_reset0_r = builder_interface0_bank_bus_dat_w[0];
assign builder_csrbank0_CAM_reset0_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 1'd1));
assign builder_csrbank0_CAM_reset0_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 1'd1));
assign builder_csrbank0_END_r = builder_interface0_bank_bus_dat_w[0];
assign builder_csrbank0_END_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 2'd2));
assign builder_csrbank0_END_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 2'd2));
assign builder_csrbank0_AnchoMayor_r = builder_interface0_bank_bus_dat_w[11:0];
assign builder_csrbank0_AnchoMayor_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 2'd3));
assign builder_csrbank0_AnchoMayor_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 2'd3));
assign builder_csrbank0_AnchoMenor_r = builder_interface0_bank_bus_dat_w[11:0];
assign builder_csrbank0_AnchoMenor_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 3'd4));
assign builder_csrbank0_AnchoMenor_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 3'd4));
assign builder_csrbank0_AnchoIgual_r = builder_interface0_bank_bus_dat_w[11:0];
assign builder_csrbank0_AnchoIgual_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 3'd5));
assign builder_csrbank0_AnchoIgual_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 3'd5));
assign builder_csrbank0_redCounter_r = builder_interface0_bank_bus_dat_w[19:0];
assign builder_csrbank0_redCounter_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 3'd6));
assign builder_csrbank0_redCounter_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 3'd6));
assign builder_csrbank0_greenCounter_r = builder_interface0_bank_bus_dat_w[19:0];
assign builder_csrbank0_greenCounter_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 3'd7));
assign builder_csrbank0_greenCounter_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 3'd7));
assign builder_csrbank0_blueCounter_r = builder_interface0_bank_bus_dat_w[19:0];
assign builder_csrbank0_blueCounter_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 4'd8));
assign builder_csrbank0_blueCounter_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 4'd8));
assign builder_csrbank0_nothingCounter_r = builder_interface0_bank_bus_dat_w[19:0];
assign builder_csrbank0_nothingCounter_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 4'd9));
assign builder_csrbank0_nothingCounter_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 4'd9));
assign basesoc_Process_cntrl_eventmanager_status_r = builder_interface0_bank_bus_dat_w[0];
assign basesoc_Process_cntrl_eventmanager_status_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 4'd10));
assign basesoc_Process_cntrl_eventmanager_status_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 4'd10));
assign basesoc_Process_cntrl_eventmanager_pending_r = builder_interface0_bank_bus_dat_w[0];
assign basesoc_Process_cntrl_eventmanager_pending_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 4'd11));
assign basesoc_Process_cntrl_eventmanager_pending_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 4'd11));
assign builder_csrbank0_ev_enable0_r = builder_interface0_bank_bus_dat_w[0];
assign builder_csrbank0_ev_enable0_re = ((builder_csrbank0_sel & builder_interface0_bank_bus_we) & (builder_interface0_bank_bus_adr[3:0] == 4'd12));
assign builder_csrbank0_ev_enable0_we = ((builder_csrbank0_sel & (~builder_interface0_bank_bus_we)) & (builder_interface0_bank_bus_adr[3:0] == 4'd12));
assign builder_csrbank0_enable0_w = basesoc_Process_cntrl_enable_storage;
assign builder_csrbank0_CAM_reset0_w = basesoc_Process_cntrl_CAM_reset_storage;
assign builder_csrbank0_END_w = basesoc_Process_cntrl_END_status;
assign basesoc_Process_cntrl_END_we = builder_csrbank0_END_we;
assign basesoc_Process_cntrl_END_re = builder_csrbank0_END_re;
assign builder_csrbank0_AnchoMayor_w = basesoc_Process_cntrl_AnchoMayor_status[11:0];
assign basesoc_Process_cntrl_AnchoMayor_we = builder_csrbank0_AnchoMayor_we;
assign basesoc_Process_cntrl_AnchoMayor_re = builder_csrbank0_AnchoMayor_re;
assign builder_csrbank0_AnchoMenor_w = basesoc_Process_cntrl_AnchoMenor_status[11:0];
assign basesoc_Process_cntrl_AnchoMenor_we = builder_csrbank0_AnchoMenor_we;
assign basesoc_Process_cntrl_AnchoMenor_re = builder_csrbank0_AnchoMenor_re;
assign builder_csrbank0_AnchoIgual_w = basesoc_Process_cntrl_AnchoIgual_status[11:0];
assign basesoc_Process_cntrl_AnchoIgual_we = builder_csrbank0_AnchoIgual_we;
assign basesoc_Process_cntrl_AnchoIgual_re = builder_csrbank0_AnchoIgual_re;
assign builder_csrbank0_redCounter_w = basesoc_Process_cntrl_redCounter_status[19:0];
assign basesoc_Process_cntrl_redCounter_we = builder_csrbank0_redCounter_we;
assign basesoc_Process_cntrl_redCounter_re = builder_csrbank0_redCounter_re;
assign builder_csrbank0_greenCounter_w = basesoc_Process_cntrl_greenCounter_status[19:0];
assign basesoc_Process_cntrl_greenCounter_we = builder_csrbank0_greenCounter_we;
assign basesoc_Process_cntrl_greenCounter_re = builder_csrbank0_greenCounter_re;
assign builder_csrbank0_blueCounter_w = basesoc_Process_cntrl_blueCounter_status[19:0];
assign basesoc_Process_cntrl_blueCounter_we = builder_csrbank0_blueCounter_we;
assign basesoc_Process_cntrl_blueCounter_re = builder_csrbank0_blueCounter_re;
assign builder_csrbank0_nothingCounter_w = basesoc_Process_cntrl_nothingCounter_status[19:0];
assign basesoc_Process_cntrl_nothingCounter_we = builder_csrbank0_nothingCounter_we;
assign basesoc_Process_cntrl_nothingCounter_re = builder_csrbank0_nothingCounter_re;
assign builder_csrbank0_ev_enable0_w = basesoc_Process_cntrl_eventmanager_storage;
assign builder_csrbank1_sel = (builder_interface1_bank_bus_adr[13:9] == 5'd19);
assign builder_csrbank1_orden0_r = builder_interface1_bank_bus_dat_w[0];
assign builder_csrbank1_orden0_re = ((builder_csrbank1_sel & builder_interface1_bank_bus_we) & (builder_interface1_bank_bus_adr[2:0] == 1'd0));
assign builder_csrbank1_orden0_we = ((builder_csrbank1_sel & (~builder_interface1_bank_bus_we)) & (builder_interface1_bank_bus_adr[2:0] == 1'd0));
assign builder_csrbank1_DONE_r = builder_interface1_bank_bus_dat_w[0];
assign builder_csrbank1_DONE_re = ((builder_csrbank1_sel & builder_interface1_bank_bus_we) & (builder_interface1_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank1_DONE_we = ((builder_csrbank1_sel & (~builder_interface1_bank_bus_we)) & (builder_interface1_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank1_d_r = builder_interface1_bank_bus_dat_w[7:0];
assign builder_csrbank1_d_re = ((builder_csrbank1_sel & builder_interface1_bank_bus_we) & (builder_interface1_bank_bus_adr[2:0] == 2'd2));
assign builder_csrbank1_d_we = ((builder_csrbank1_sel & (~builder_interface1_bank_bus_we)) & (builder_interface1_bank_bus_adr[2:0] == 2'd2));
assign basesoc_US_cntrl_eventmanager_status_r = builder_interface1_bank_bus_dat_w[0];
assign basesoc_US_cntrl_eventmanager_status_re = ((builder_csrbank1_sel & builder_interface1_bank_bus_we) & (builder_interface1_bank_bus_adr[2:0] == 2'd3));
assign basesoc_US_cntrl_eventmanager_status_we = ((builder_csrbank1_sel & (~builder_interface1_bank_bus_we)) & (builder_interface1_bank_bus_adr[2:0] == 2'd3));
assign basesoc_US_cntrl_eventmanager_pending_r = builder_interface1_bank_bus_dat_w[0];
assign basesoc_US_cntrl_eventmanager_pending_re = ((builder_csrbank1_sel & builder_interface1_bank_bus_we) & (builder_interface1_bank_bus_adr[2:0] == 3'd4));
assign basesoc_US_cntrl_eventmanager_pending_we = ((builder_csrbank1_sel & (~builder_interface1_bank_bus_we)) & (builder_interface1_bank_bus_adr[2:0] == 3'd4));
assign builder_csrbank1_ev_enable0_r = builder_interface1_bank_bus_dat_w[0];
assign builder_csrbank1_ev_enable0_re = ((builder_csrbank1_sel & builder_interface1_bank_bus_we) & (builder_interface1_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank1_ev_enable0_we = ((builder_csrbank1_sel & (~builder_interface1_bank_bus_we)) & (builder_interface1_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank1_orden0_w = basesoc_US_cntrl_orden_storage;
assign builder_csrbank1_DONE_w = basesoc_US_cntrl_DONE_status;
assign basesoc_US_cntrl_DONE_we = builder_csrbank1_DONE_we;
assign basesoc_US_cntrl_DONE_re = builder_csrbank1_DONE_re;
assign builder_csrbank1_d_w = basesoc_US_cntrl_d_status[7:0];
assign basesoc_US_cntrl_d_we = builder_csrbank1_d_we;
assign basesoc_US_cntrl_d_re = builder_csrbank1_d_re;
assign builder_csrbank1_ev_enable0_w = basesoc_US_cntrl_eventmanager_storage;
assign builder_csrbank2_sel = (builder_interface2_bank_bus_adr[13:9] == 3'd7);
assign builder_csrbank2_in_r = builder_interface2_bank_bus_dat_w[2:0];
assign builder_csrbank2_in_re = ((builder_csrbank2_sel & builder_interface2_bank_bus_we) & (builder_interface2_bank_bus_adr[0] == 1'd0));
assign builder_csrbank2_in_we = ((builder_csrbank2_sel & (~builder_interface2_bank_bus_we)) & (builder_interface2_bank_bus_adr[0] == 1'd0));
assign builder_csrbank2_in_w = basesoc_buttons_status[2:0];
assign basesoc_buttons_we = builder_csrbank2_in_we;
assign basesoc_buttons_re = builder_csrbank2_in_re;
assign builder_csrbank3_sel = (builder_interface3_bank_bus_adr[13:9] == 1'd0);
assign builder_csrbank3_reset0_r = builder_interface3_bank_bus_dat_w[0];
assign builder_csrbank3_reset0_re = ((builder_csrbank3_sel & builder_interface3_bank_bus_we) & (builder_interface3_bank_bus_adr[1:0] == 1'd0));
assign builder_csrbank3_reset0_we = ((builder_csrbank3_sel & (~builder_interface3_bank_bus_we)) & (builder_interface3_bank_bus_adr[1:0] == 1'd0));
assign builder_csrbank3_scratch0_r = builder_interface3_bank_bus_dat_w[31:0];
assign builder_csrbank3_scratch0_re = ((builder_csrbank3_sel & builder_interface3_bank_bus_we) & (builder_interface3_bank_bus_adr[1:0] == 1'd1));
assign builder_csrbank3_scratch0_we = ((builder_csrbank3_sel & (~builder_interface3_bank_bus_we)) & (builder_interface3_bank_bus_adr[1:0] == 1'd1));
assign builder_csrbank3_bus_errors_r = builder_interface3_bank_bus_dat_w[31:0];
assign builder_csrbank3_bus_errors_re = ((builder_csrbank3_sel & builder_interface3_bank_bus_we) & (builder_interface3_bank_bus_adr[1:0] == 2'd2));
assign builder_csrbank3_bus_errors_we = ((builder_csrbank3_sel & (~builder_interface3_bank_bus_we)) & (builder_interface3_bank_bus_adr[1:0] == 2'd2));
assign builder_csrbank3_reset0_w = basesoc_basesoc_soccontroller_reset_storage;
assign builder_csrbank3_scratch0_w = basesoc_basesoc_soccontroller_scratch_storage[31:0];
assign builder_csrbank3_bus_errors_w = basesoc_basesoc_soccontroller_bus_errors_status[31:0];
assign basesoc_basesoc_soccontroller_bus_errors_we = builder_csrbank3_bus_errors_we;
assign basesoc_basesoc_soccontroller_bus_errors_re = builder_csrbank3_bus_errors_re;
assign builder_csrbank4_sel = (builder_interface4_bank_bus_adr[13:9] == 4'd12);
assign builder_csrbank4_in_r = builder_interface4_bank_bus_dat_w[1:0];
assign builder_csrbank4_in_re = ((builder_csrbank4_sel & builder_interface4_bank_bus_we) & (builder_interface4_bank_bus_adr[0] == 1'd0));
assign builder_csrbank4_in_we = ((builder_csrbank4_sel & (~builder_interface4_bank_bus_we)) & (builder_interface4_bank_bus_adr[0] == 1'd0));
assign builder_csrbank4_in_w = basesoc_ctrlButton_status[1:0];
assign basesoc_ctrlButton_we = builder_csrbank4_in_we;
assign basesoc_ctrlButton_re = builder_csrbank4_in_re;
assign builder_csrbank5_sel = (builder_interface5_bank_bus_adr[13:9] == 4'd8);
assign builder_csrbank5_dig_00_r = builder_interface5_bank_bus_dat_w[7:0];
assign builder_csrbank5_dig_00_re = ((builder_csrbank5_sel & builder_interface5_bank_bus_we) & (builder_interface5_bank_bus_adr[2:0] == 1'd0));
assign builder_csrbank5_dig_00_we = ((builder_csrbank5_sel & (~builder_interface5_bank_bus_we)) & (builder_interface5_bank_bus_adr[2:0] == 1'd0));
assign builder_csrbank5_dig_10_r = builder_interface5_bank_bus_dat_w[7:0];
assign builder_csrbank5_dig_10_re = ((builder_csrbank5_sel & builder_interface5_bank_bus_we) & (builder_interface5_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank5_dig_10_we = ((builder_csrbank5_sel & (~builder_interface5_bank_bus_we)) & (builder_interface5_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank5_dig_20_r = builder_interface5_bank_bus_dat_w[7:0];
assign builder_csrbank5_dig_20_re = ((builder_csrbank5_sel & builder_interface5_bank_bus_we) & (builder_interface5_bank_bus_adr[2:0] == 2'd2));
assign builder_csrbank5_dig_20_we = ((builder_csrbank5_sel & (~builder_interface5_bank_bus_we)) & (builder_interface5_bank_bus_adr[2:0] == 2'd2));
assign builder_csrbank5_dig_30_r = builder_interface5_bank_bus_dat_w[7:0];
assign builder_csrbank5_dig_30_re = ((builder_csrbank5_sel & builder_interface5_bank_bus_we) & (builder_interface5_bank_bus_adr[2:0] == 2'd3));
assign builder_csrbank5_dig_30_we = ((builder_csrbank5_sel & (~builder_interface5_bank_bus_we)) & (builder_interface5_bank_bus_adr[2:0] == 2'd3));
assign builder_csrbank5_dig_40_r = builder_interface5_bank_bus_dat_w[7:0];
assign builder_csrbank5_dig_40_re = ((builder_csrbank5_sel & builder_interface5_bank_bus_we) & (builder_interface5_bank_bus_adr[2:0] == 3'd4));
assign builder_csrbank5_dig_40_we = ((builder_csrbank5_sel & (~builder_interface5_bank_bus_we)) & (builder_interface5_bank_bus_adr[2:0] == 3'd4));
assign builder_csrbank5_dig_50_r = builder_interface5_bank_bus_dat_w[7:0];
assign builder_csrbank5_dig_50_re = ((builder_csrbank5_sel & builder_interface5_bank_bus_we) & (builder_interface5_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank5_dig_50_we = ((builder_csrbank5_sel & (~builder_interface5_bank_bus_we)) & (builder_interface5_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank5_dig_60_r = builder_interface5_bank_bus_dat_w[7:0];
assign builder_csrbank5_dig_60_re = ((builder_csrbank5_sel & builder_interface5_bank_bus_we) & (builder_interface5_bank_bus_adr[2:0] == 3'd6));
assign builder_csrbank5_dig_60_we = ((builder_csrbank5_sel & (~builder_interface5_bank_bus_we)) & (builder_interface5_bank_bus_adr[2:0] == 3'd6));
assign builder_csrbank5_dig_70_r = builder_interface5_bank_bus_dat_w[7:0];
assign builder_csrbank5_dig_70_re = ((builder_csrbank5_sel & builder_interface5_bank_bus_we) & (builder_interface5_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank5_dig_70_we = ((builder_csrbank5_sel & (~builder_interface5_bank_bus_we)) & (builder_interface5_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank5_dig_00_w = basesoc_dig_0_storage[7:0];
assign builder_csrbank5_dig_10_w = basesoc_dig_1_storage[7:0];
assign builder_csrbank5_dig_20_w = basesoc_dig_2_storage[7:0];
assign builder_csrbank5_dig_30_w = basesoc_dig_3_storage[7:0];
assign builder_csrbank5_dig_40_w = basesoc_dig_4_storage[7:0];
assign builder_csrbank5_dig_50_w = basesoc_dig_5_storage[7:0];
assign builder_csrbank5_dig_60_w = basesoc_dig_6_storage[7:0];
assign builder_csrbank5_dig_70_w = basesoc_dig_7_storage[7:0];
assign builder_csrbank6_sel = (builder_interface6_bank_bus_adr[13:9] == 5'd17);
assign builder_csrbank6_in_r = builder_interface6_bank_bus_dat_w[2:0];
assign builder_csrbank6_in_re = ((builder_csrbank6_sel & builder_interface6_bank_bus_we) & (builder_interface6_bank_bus_adr[0] == 1'd0));
assign builder_csrbank6_in_we = ((builder_csrbank6_sel & (~builder_interface6_bank_bus_we)) & (builder_interface6_bank_bus_adr[0] == 1'd0));
assign builder_csrbank6_in_w = basesoc_infrarrojos_status[2:0];
assign basesoc_infrarrojos_we = builder_csrbank6_in_we;
assign basesoc_infrarrojos_re = builder_csrbank6_in_re;
assign builder_csrbank7_sel = (builder_interface7_bank_bus_adr[13:9] == 4'd9);
assign builder_csrbank7_r_enable0_r = builder_interface7_bank_bus_dat_w[0];
assign builder_csrbank7_r_enable0_re = ((builder_csrbank7_sel & builder_interface7_bank_bus_we) & (builder_interface7_bank_bus_adr[3:0] == 1'd0));
assign builder_csrbank7_r_enable0_we = ((builder_csrbank7_sel & (~builder_interface7_bank_bus_we)) & (builder_interface7_bank_bus_adr[3:0] == 1'd0));
assign builder_csrbank7_r_width0_r = builder_interface7_bank_bus_dat_w[31:0];
assign builder_csrbank7_r_width0_re = ((builder_csrbank7_sel & builder_interface7_bank_bus_we) & (builder_interface7_bank_bus_adr[3:0] == 1'd1));
assign builder_csrbank7_r_width0_we = ((builder_csrbank7_sel & (~builder_interface7_bank_bus_we)) & (builder_interface7_bank_bus_adr[3:0] == 1'd1));
assign builder_csrbank7_r_period0_r = builder_interface7_bank_bus_dat_w[31:0];
assign builder_csrbank7_r_period0_re = ((builder_csrbank7_sel & builder_interface7_bank_bus_we) & (builder_interface7_bank_bus_adr[3:0] == 2'd2));
assign builder_csrbank7_r_period0_we = ((builder_csrbank7_sel & (~builder_interface7_bank_bus_we)) & (builder_interface7_bank_bus_adr[3:0] == 2'd2));
assign builder_csrbank7_g_enable0_r = builder_interface7_bank_bus_dat_w[0];
assign builder_csrbank7_g_enable0_re = ((builder_csrbank7_sel & builder_interface7_bank_bus_we) & (builder_interface7_bank_bus_adr[3:0] == 2'd3));
assign builder_csrbank7_g_enable0_we = ((builder_csrbank7_sel & (~builder_interface7_bank_bus_we)) & (builder_interface7_bank_bus_adr[3:0] == 2'd3));
assign builder_csrbank7_g_width0_r = builder_interface7_bank_bus_dat_w[31:0];
assign builder_csrbank7_g_width0_re = ((builder_csrbank7_sel & builder_interface7_bank_bus_we) & (builder_interface7_bank_bus_adr[3:0] == 3'd4));
assign builder_csrbank7_g_width0_we = ((builder_csrbank7_sel & (~builder_interface7_bank_bus_we)) & (builder_interface7_bank_bus_adr[3:0] == 3'd4));
assign builder_csrbank7_g_period0_r = builder_interface7_bank_bus_dat_w[31:0];
assign builder_csrbank7_g_period0_re = ((builder_csrbank7_sel & builder_interface7_bank_bus_we) & (builder_interface7_bank_bus_adr[3:0] == 3'd5));
assign builder_csrbank7_g_period0_we = ((builder_csrbank7_sel & (~builder_interface7_bank_bus_we)) & (builder_interface7_bank_bus_adr[3:0] == 3'd5));
assign builder_csrbank7_b_enable0_r = builder_interface7_bank_bus_dat_w[0];
assign builder_csrbank7_b_enable0_re = ((builder_csrbank7_sel & builder_interface7_bank_bus_we) & (builder_interface7_bank_bus_adr[3:0] == 3'd6));
assign builder_csrbank7_b_enable0_we = ((builder_csrbank7_sel & (~builder_interface7_bank_bus_we)) & (builder_interface7_bank_bus_adr[3:0] == 3'd6));
assign builder_csrbank7_b_width0_r = builder_interface7_bank_bus_dat_w[31:0];
assign builder_csrbank7_b_width0_re = ((builder_csrbank7_sel & builder_interface7_bank_bus_we) & (builder_interface7_bank_bus_adr[3:0] == 3'd7));
assign builder_csrbank7_b_width0_we = ((builder_csrbank7_sel & (~builder_interface7_bank_bus_we)) & (builder_interface7_bank_bus_adr[3:0] == 3'd7));
assign builder_csrbank7_b_period0_r = builder_interface7_bank_bus_dat_w[31:0];
assign builder_csrbank7_b_period0_re = ((builder_csrbank7_sel & builder_interface7_bank_bus_we) & (builder_interface7_bank_bus_adr[3:0] == 4'd8));
assign builder_csrbank7_b_period0_we = ((builder_csrbank7_sel & (~builder_interface7_bank_bus_we)) & (builder_interface7_bank_bus_adr[3:0] == 4'd8));
assign builder_csrbank7_r_enable0_w = basesoc_ledRGB_1_r_enable_storage;
assign builder_csrbank7_r_width0_w = basesoc_ledRGB_1_r_width_storage[31:0];
assign builder_csrbank7_r_period0_w = basesoc_ledRGB_1_r_period_storage[31:0];
assign builder_csrbank7_g_enable0_w = basesoc_ledRGB_1_g_enable_storage;
assign builder_csrbank7_g_width0_w = basesoc_ledRGB_1_g_width_storage[31:0];
assign builder_csrbank7_g_period0_w = basesoc_ledRGB_1_g_period_storage[31:0];
assign builder_csrbank7_b_enable0_w = basesoc_ledRGB_1_b_enable_storage;
assign builder_csrbank7_b_width0_w = basesoc_ledRGB_1_b_width_storage[31:0];
assign builder_csrbank7_b_period0_w = basesoc_ledRGB_1_b_period_storage[31:0];
assign builder_csrbank8_sel = (builder_interface8_bank_bus_adr[13:9] == 4'd10);
assign builder_csrbank8_r_enable0_r = builder_interface8_bank_bus_dat_w[0];
assign builder_csrbank8_r_enable0_re = ((builder_csrbank8_sel & builder_interface8_bank_bus_we) & (builder_interface8_bank_bus_adr[3:0] == 1'd0));
assign builder_csrbank8_r_enable0_we = ((builder_csrbank8_sel & (~builder_interface8_bank_bus_we)) & (builder_interface8_bank_bus_adr[3:0] == 1'd0));
assign builder_csrbank8_r_width0_r = builder_interface8_bank_bus_dat_w[31:0];
assign builder_csrbank8_r_width0_re = ((builder_csrbank8_sel & builder_interface8_bank_bus_we) & (builder_interface8_bank_bus_adr[3:0] == 1'd1));
assign builder_csrbank8_r_width0_we = ((builder_csrbank8_sel & (~builder_interface8_bank_bus_we)) & (builder_interface8_bank_bus_adr[3:0] == 1'd1));
assign builder_csrbank8_r_period0_r = builder_interface8_bank_bus_dat_w[31:0];
assign builder_csrbank8_r_period0_re = ((builder_csrbank8_sel & builder_interface8_bank_bus_we) & (builder_interface8_bank_bus_adr[3:0] == 2'd2));
assign builder_csrbank8_r_period0_we = ((builder_csrbank8_sel & (~builder_interface8_bank_bus_we)) & (builder_interface8_bank_bus_adr[3:0] == 2'd2));
assign builder_csrbank8_g_enable0_r = builder_interface8_bank_bus_dat_w[0];
assign builder_csrbank8_g_enable0_re = ((builder_csrbank8_sel & builder_interface8_bank_bus_we) & (builder_interface8_bank_bus_adr[3:0] == 2'd3));
assign builder_csrbank8_g_enable0_we = ((builder_csrbank8_sel & (~builder_interface8_bank_bus_we)) & (builder_interface8_bank_bus_adr[3:0] == 2'd3));
assign builder_csrbank8_g_width0_r = builder_interface8_bank_bus_dat_w[31:0];
assign builder_csrbank8_g_width0_re = ((builder_csrbank8_sel & builder_interface8_bank_bus_we) & (builder_interface8_bank_bus_adr[3:0] == 3'd4));
assign builder_csrbank8_g_width0_we = ((builder_csrbank8_sel & (~builder_interface8_bank_bus_we)) & (builder_interface8_bank_bus_adr[3:0] == 3'd4));
assign builder_csrbank8_g_period0_r = builder_interface8_bank_bus_dat_w[31:0];
assign builder_csrbank8_g_period0_re = ((builder_csrbank8_sel & builder_interface8_bank_bus_we) & (builder_interface8_bank_bus_adr[3:0] == 3'd5));
assign builder_csrbank8_g_period0_we = ((builder_csrbank8_sel & (~builder_interface8_bank_bus_we)) & (builder_interface8_bank_bus_adr[3:0] == 3'd5));
assign builder_csrbank8_b_enable0_r = builder_interface8_bank_bus_dat_w[0];
assign builder_csrbank8_b_enable0_re = ((builder_csrbank8_sel & builder_interface8_bank_bus_we) & (builder_interface8_bank_bus_adr[3:0] == 3'd6));
assign builder_csrbank8_b_enable0_we = ((builder_csrbank8_sel & (~builder_interface8_bank_bus_we)) & (builder_interface8_bank_bus_adr[3:0] == 3'd6));
assign builder_csrbank8_b_width0_r = builder_interface8_bank_bus_dat_w[31:0];
assign builder_csrbank8_b_width0_re = ((builder_csrbank8_sel & builder_interface8_bank_bus_we) & (builder_interface8_bank_bus_adr[3:0] == 3'd7));
assign builder_csrbank8_b_width0_we = ((builder_csrbank8_sel & (~builder_interface8_bank_bus_we)) & (builder_interface8_bank_bus_adr[3:0] == 3'd7));
assign builder_csrbank8_b_period0_r = builder_interface8_bank_bus_dat_w[31:0];
assign builder_csrbank8_b_period0_re = ((builder_csrbank8_sel & builder_interface8_bank_bus_we) & (builder_interface8_bank_bus_adr[3:0] == 4'd8));
assign builder_csrbank8_b_period0_we = ((builder_csrbank8_sel & (~builder_interface8_bank_bus_we)) & (builder_interface8_bank_bus_adr[3:0] == 4'd8));
assign builder_csrbank8_r_enable0_w = basesoc_ledRGB_2_r_enable_storage;
assign builder_csrbank8_r_width0_w = basesoc_ledRGB_2_r_width_storage[31:0];
assign builder_csrbank8_r_period0_w = basesoc_ledRGB_2_r_period_storage[31:0];
assign builder_csrbank8_g_enable0_w = basesoc_ledRGB_2_g_enable_storage;
assign builder_csrbank8_g_width0_w = basesoc_ledRGB_2_g_width_storage[31:0];
assign builder_csrbank8_g_period0_w = basesoc_ledRGB_2_g_period_storage[31:0];
assign builder_csrbank8_b_enable0_w = basesoc_ledRGB_2_b_enable_storage;
assign builder_csrbank8_b_width0_w = basesoc_ledRGB_2_b_width_storage[31:0];
assign builder_csrbank8_b_period0_w = basesoc_ledRGB_2_b_period_storage[31:0];
assign builder_csrbank9_sel = (builder_interface9_bank_bus_adr[13:9] == 3'd5);
assign builder_csrbank9_out0_r = builder_interface9_bank_bus_dat_w[9:0];
assign builder_csrbank9_out0_re = ((builder_csrbank9_sel & builder_interface9_bank_bus_we) & (builder_interface9_bank_bus_adr[0] == 1'd0));
assign builder_csrbank9_out0_we = ((builder_csrbank9_sel & (~builder_interface9_bank_bus_we)) & (builder_interface9_bank_bus_adr[0] == 1'd0));
assign builder_csrbank9_out0_w = basesoc_leds_storage[9:0];
assign builder_csrbank10_sel = (builder_interface10_bank_bus_adr[13:9] == 5'd18);
assign builder_csrbank10_orden0_r = builder_interface10_bank_bus_dat_w[2:0];
assign builder_csrbank10_orden0_re = ((builder_csrbank10_sel & builder_interface10_bank_bus_we) & (builder_interface10_bank_bus_adr[1:0] == 1'd0));
assign builder_csrbank10_orden0_we = ((builder_csrbank10_sel & (~builder_interface10_bank_bus_we)) & (builder_interface10_bank_bus_adr[1:0] == 1'd0));
assign basesoc_pwm_cntrl_eventmanager_status_r = builder_interface10_bank_bus_dat_w[0];
assign basesoc_pwm_cntrl_eventmanager_status_re = ((builder_csrbank10_sel & builder_interface10_bank_bus_we) & (builder_interface10_bank_bus_adr[1:0] == 1'd1));
assign basesoc_pwm_cntrl_eventmanager_status_we = ((builder_csrbank10_sel & (~builder_interface10_bank_bus_we)) & (builder_interface10_bank_bus_adr[1:0] == 1'd1));
assign basesoc_pwm_cntrl_eventmanager_pending_r = builder_interface10_bank_bus_dat_w[0];
assign basesoc_pwm_cntrl_eventmanager_pending_re = ((builder_csrbank10_sel & builder_interface10_bank_bus_we) & (builder_interface10_bank_bus_adr[1:0] == 2'd2));
assign basesoc_pwm_cntrl_eventmanager_pending_we = ((builder_csrbank10_sel & (~builder_interface10_bank_bus_we)) & (builder_interface10_bank_bus_adr[1:0] == 2'd2));
assign builder_csrbank10_ev_enable0_r = builder_interface10_bank_bus_dat_w[0];
assign builder_csrbank10_ev_enable0_re = ((builder_csrbank10_sel & builder_interface10_bank_bus_we) & (builder_interface10_bank_bus_adr[1:0] == 2'd3));
assign builder_csrbank10_ev_enable0_we = ((builder_csrbank10_sel & (~builder_interface10_bank_bus_we)) & (builder_interface10_bank_bus_adr[1:0] == 2'd3));
assign builder_csrbank10_orden0_w = basesoc_pwm_cntrl_orden_storage[2:0];
assign builder_csrbank10_ev_enable0_w = basesoc_pwm_cntrl_eventmanager_storage;
assign builder_csrbank11_sel = (builder_interface11_bank_bus_adr[13:9] == 3'd6);
assign builder_csrbank11_in_r = builder_interface11_bank_bus_dat_w[7:0];
assign builder_csrbank11_in_re = ((builder_csrbank11_sel & builder_interface11_bank_bus_we) & (builder_interface11_bank_bus_adr[0] == 1'd0));
assign builder_csrbank11_in_we = ((builder_csrbank11_sel & (~builder_interface11_bank_bus_we)) & (builder_interface11_bank_bus_adr[0] == 1'd0));
assign builder_csrbank11_in_w = basesoc_switchs_status[7:0];
assign basesoc_switchs_we = builder_csrbank11_in_we;
assign basesoc_switchs_re = builder_csrbank11_in_re;
assign builder_csrbank12_sel = (builder_interface12_bank_bus_adr[13:9] == 3'd4);
assign builder_csrbank12_load0_r = builder_interface12_bank_bus_dat_w[31:0];
assign builder_csrbank12_load0_re = ((builder_csrbank12_sel & builder_interface12_bank_bus_we) & (builder_interface12_bank_bus_adr[2:0] == 1'd0));
assign builder_csrbank12_load0_we = ((builder_csrbank12_sel & (~builder_interface12_bank_bus_we)) & (builder_interface12_bank_bus_adr[2:0] == 1'd0));
assign builder_csrbank12_reload0_r = builder_interface12_bank_bus_dat_w[31:0];
assign builder_csrbank12_reload0_re = ((builder_csrbank12_sel & builder_interface12_bank_bus_we) & (builder_interface12_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank12_reload0_we = ((builder_csrbank12_sel & (~builder_interface12_bank_bus_we)) & (builder_interface12_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank12_en0_r = builder_interface12_bank_bus_dat_w[0];
assign builder_csrbank12_en0_re = ((builder_csrbank12_sel & builder_interface12_bank_bus_we) & (builder_interface12_bank_bus_adr[2:0] == 2'd2));
assign builder_csrbank12_en0_we = ((builder_csrbank12_sel & (~builder_interface12_bank_bus_we)) & (builder_interface12_bank_bus_adr[2:0] == 2'd2));
assign builder_csrbank12_update_value0_r = builder_interface12_bank_bus_dat_w[0];
assign builder_csrbank12_update_value0_re = ((builder_csrbank12_sel & builder_interface12_bank_bus_we) & (builder_interface12_bank_bus_adr[2:0] == 2'd3));
assign builder_csrbank12_update_value0_we = ((builder_csrbank12_sel & (~builder_interface12_bank_bus_we)) & (builder_interface12_bank_bus_adr[2:0] == 2'd3));
assign builder_csrbank12_value_r = builder_interface12_bank_bus_dat_w[31:0];
assign builder_csrbank12_value_re = ((builder_csrbank12_sel & builder_interface12_bank_bus_we) & (builder_interface12_bank_bus_adr[2:0] == 3'd4));
assign builder_csrbank12_value_we = ((builder_csrbank12_sel & (~builder_interface12_bank_bus_we)) & (builder_interface12_bank_bus_adr[2:0] == 3'd4));
assign basesoc_basesoc_timer_eventmanager_status_r = builder_interface12_bank_bus_dat_w[0];
assign basesoc_basesoc_timer_eventmanager_status_re = ((builder_csrbank12_sel & builder_interface12_bank_bus_we) & (builder_interface12_bank_bus_adr[2:0] == 3'd5));
assign basesoc_basesoc_timer_eventmanager_status_we = ((builder_csrbank12_sel & (~builder_interface12_bank_bus_we)) & (builder_interface12_bank_bus_adr[2:0] == 3'd5));
assign basesoc_basesoc_timer_eventmanager_pending_r = builder_interface12_bank_bus_dat_w[0];
assign basesoc_basesoc_timer_eventmanager_pending_re = ((builder_csrbank12_sel & builder_interface12_bank_bus_we) & (builder_interface12_bank_bus_adr[2:0] == 3'd6));
assign basesoc_basesoc_timer_eventmanager_pending_we = ((builder_csrbank12_sel & (~builder_interface12_bank_bus_we)) & (builder_interface12_bank_bus_adr[2:0] == 3'd6));
assign builder_csrbank12_ev_enable0_r = builder_interface12_bank_bus_dat_w[0];
assign builder_csrbank12_ev_enable0_re = ((builder_csrbank12_sel & builder_interface12_bank_bus_we) & (builder_interface12_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank12_ev_enable0_we = ((builder_csrbank12_sel & (~builder_interface12_bank_bus_we)) & (builder_interface12_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank12_load0_w = basesoc_basesoc_timer_load_storage[31:0];
assign builder_csrbank12_reload0_w = basesoc_basesoc_timer_reload_storage[31:0];
assign builder_csrbank12_en0_w = basesoc_basesoc_timer_en_storage;
assign builder_csrbank12_update_value0_w = basesoc_basesoc_timer_update_value_storage;
assign builder_csrbank12_value_w = basesoc_basesoc_timer_value_status[31:0];
assign basesoc_basesoc_timer_value_we = builder_csrbank12_value_we;
assign basesoc_basesoc_timer_value_re = builder_csrbank12_value_re;
assign builder_csrbank12_ev_enable0_w = basesoc_basesoc_timer_eventmanager_storage;
assign builder_csrbank13_sel = (builder_interface13_bank_bus_adr[13:9] == 2'd3);
assign basesoc_basesoc_uart_rxtx_r = builder_interface13_bank_bus_dat_w[7:0];
assign basesoc_basesoc_uart_rxtx_re = ((builder_csrbank13_sel & builder_interface13_bank_bus_we) & (builder_interface13_bank_bus_adr[2:0] == 1'd0));
assign basesoc_basesoc_uart_rxtx_we = ((builder_csrbank13_sel & (~builder_interface13_bank_bus_we)) & (builder_interface13_bank_bus_adr[2:0] == 1'd0));
assign builder_csrbank13_txfull_r = builder_interface13_bank_bus_dat_w[0];
assign builder_csrbank13_txfull_re = ((builder_csrbank13_sel & builder_interface13_bank_bus_we) & (builder_interface13_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank13_txfull_we = ((builder_csrbank13_sel & (~builder_interface13_bank_bus_we)) & (builder_interface13_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank13_rxempty_r = builder_interface13_bank_bus_dat_w[0];
assign builder_csrbank13_rxempty_re = ((builder_csrbank13_sel & builder_interface13_bank_bus_we) & (builder_interface13_bank_bus_adr[2:0] == 2'd2));
assign builder_csrbank13_rxempty_we = ((builder_csrbank13_sel & (~builder_interface13_bank_bus_we)) & (builder_interface13_bank_bus_adr[2:0] == 2'd2));
assign basesoc_basesoc_uart_eventmanager_status_r = builder_interface13_bank_bus_dat_w[1:0];
assign basesoc_basesoc_uart_eventmanager_status_re = ((builder_csrbank13_sel & builder_interface13_bank_bus_we) & (builder_interface13_bank_bus_adr[2:0] == 2'd3));
assign basesoc_basesoc_uart_eventmanager_status_we = ((builder_csrbank13_sel & (~builder_interface13_bank_bus_we)) & (builder_interface13_bank_bus_adr[2:0] == 2'd3));
assign basesoc_basesoc_uart_eventmanager_pending_r = builder_interface13_bank_bus_dat_w[1:0];
assign basesoc_basesoc_uart_eventmanager_pending_re = ((builder_csrbank13_sel & builder_interface13_bank_bus_we) & (builder_interface13_bank_bus_adr[2:0] == 3'd4));
assign basesoc_basesoc_uart_eventmanager_pending_we = ((builder_csrbank13_sel & (~builder_interface13_bank_bus_we)) & (builder_interface13_bank_bus_adr[2:0] == 3'd4));
assign builder_csrbank13_ev_enable0_r = builder_interface13_bank_bus_dat_w[1:0];
assign builder_csrbank13_ev_enable0_re = ((builder_csrbank13_sel & builder_interface13_bank_bus_we) & (builder_interface13_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank13_ev_enable0_we = ((builder_csrbank13_sel & (~builder_interface13_bank_bus_we)) & (builder_interface13_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank13_txempty_r = builder_interface13_bank_bus_dat_w[0];
assign builder_csrbank13_txempty_re = ((builder_csrbank13_sel & builder_interface13_bank_bus_we) & (builder_interface13_bank_bus_adr[2:0] == 3'd6));
assign builder_csrbank13_txempty_we = ((builder_csrbank13_sel & (~builder_interface13_bank_bus_we)) & (builder_interface13_bank_bus_adr[2:0] == 3'd6));
assign builder_csrbank13_rxfull_r = builder_interface13_bank_bus_dat_w[0];
assign builder_csrbank13_rxfull_re = ((builder_csrbank13_sel & builder_interface13_bank_bus_we) & (builder_interface13_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank13_rxfull_we = ((builder_csrbank13_sel & (~builder_interface13_bank_bus_we)) & (builder_interface13_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank13_txfull_w = basesoc_basesoc_uart_txfull_status;
assign basesoc_basesoc_uart_txfull_we = builder_csrbank13_txfull_we;
assign basesoc_basesoc_uart_txfull_re = builder_csrbank13_txfull_re;
assign builder_csrbank13_rxempty_w = basesoc_basesoc_uart_rxempty_status;
assign basesoc_basesoc_uart_rxempty_we = builder_csrbank13_rxempty_we;
assign basesoc_basesoc_uart_rxempty_re = builder_csrbank13_rxempty_re;
assign builder_csrbank13_ev_enable0_w = basesoc_basesoc_uart_eventmanager_storage[1:0];
assign builder_csrbank13_txempty_w = basesoc_basesoc_uart_txempty_status;
assign basesoc_basesoc_uart_txempty_we = builder_csrbank13_txempty_we;
assign basesoc_basesoc_uart_txempty_re = builder_csrbank13_txempty_re;
assign builder_csrbank13_rxfull_w = basesoc_basesoc_uart_rxfull_status;
assign basesoc_basesoc_uart_rxfull_we = builder_csrbank13_rxfull_we;
assign basesoc_basesoc_uart_rxfull_re = builder_csrbank13_rxfull_re;
assign builder_csrbank14_sel = (builder_interface14_bank_bus_adr[13:9] == 4'd14);
assign basesoc_uart0_rxtx_r = builder_interface14_bank_bus_dat_w[7:0];
assign basesoc_uart0_rxtx_re = ((builder_csrbank14_sel & builder_interface14_bank_bus_we) & (builder_interface14_bank_bus_adr[2:0] == 1'd0));
assign basesoc_uart0_rxtx_we = ((builder_csrbank14_sel & (~builder_interface14_bank_bus_we)) & (builder_interface14_bank_bus_adr[2:0] == 1'd0));
assign builder_csrbank14_txfull_r = builder_interface14_bank_bus_dat_w[0];
assign builder_csrbank14_txfull_re = ((builder_csrbank14_sel & builder_interface14_bank_bus_we) & (builder_interface14_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank14_txfull_we = ((builder_csrbank14_sel & (~builder_interface14_bank_bus_we)) & (builder_interface14_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank14_rxempty_r = builder_interface14_bank_bus_dat_w[0];
assign builder_csrbank14_rxempty_re = ((builder_csrbank14_sel & builder_interface14_bank_bus_we) & (builder_interface14_bank_bus_adr[2:0] == 2'd2));
assign builder_csrbank14_rxempty_we = ((builder_csrbank14_sel & (~builder_interface14_bank_bus_we)) & (builder_interface14_bank_bus_adr[2:0] == 2'd2));
assign basesoc_uart0_eventmanager0_status_r = builder_interface14_bank_bus_dat_w[1:0];
assign basesoc_uart0_eventmanager0_status_re = ((builder_csrbank14_sel & builder_interface14_bank_bus_we) & (builder_interface14_bank_bus_adr[2:0] == 2'd3));
assign basesoc_uart0_eventmanager0_status_we = ((builder_csrbank14_sel & (~builder_interface14_bank_bus_we)) & (builder_interface14_bank_bus_adr[2:0] == 2'd3));
assign basesoc_uart0_eventmanager0_pending_r = builder_interface14_bank_bus_dat_w[1:0];
assign basesoc_uart0_eventmanager0_pending_re = ((builder_csrbank14_sel & builder_interface14_bank_bus_we) & (builder_interface14_bank_bus_adr[2:0] == 3'd4));
assign basesoc_uart0_eventmanager0_pending_we = ((builder_csrbank14_sel & (~builder_interface14_bank_bus_we)) & (builder_interface14_bank_bus_adr[2:0] == 3'd4));
assign builder_csrbank14_ev_enable0_r = builder_interface14_bank_bus_dat_w[1:0];
assign builder_csrbank14_ev_enable0_re = ((builder_csrbank14_sel & builder_interface14_bank_bus_we) & (builder_interface14_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank14_ev_enable0_we = ((builder_csrbank14_sel & (~builder_interface14_bank_bus_we)) & (builder_interface14_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank14_txempty_r = builder_interface14_bank_bus_dat_w[0];
assign builder_csrbank14_txempty_re = ((builder_csrbank14_sel & builder_interface14_bank_bus_we) & (builder_interface14_bank_bus_adr[2:0] == 3'd6));
assign builder_csrbank14_txempty_we = ((builder_csrbank14_sel & (~builder_interface14_bank_bus_we)) & (builder_interface14_bank_bus_adr[2:0] == 3'd6));
assign builder_csrbank14_rxfull_r = builder_interface14_bank_bus_dat_w[0];
assign builder_csrbank14_rxfull_re = ((builder_csrbank14_sel & builder_interface14_bank_bus_we) & (builder_interface14_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank14_rxfull_we = ((builder_csrbank14_sel & (~builder_interface14_bank_bus_we)) & (builder_interface14_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank14_txfull_w = basesoc_uart0_txfull_status;
assign basesoc_uart0_txfull_we = builder_csrbank14_txfull_we;
assign basesoc_uart0_txfull_re = builder_csrbank14_txfull_re;
assign builder_csrbank14_rxempty_w = basesoc_uart0_rxempty_status;
assign basesoc_uart0_rxempty_we = builder_csrbank14_rxempty_we;
assign basesoc_uart0_rxempty_re = builder_csrbank14_rxempty_re;
assign builder_csrbank14_ev_enable0_w = basesoc_uart0_eventmanager0_storage[1:0];
assign builder_csrbank14_txempty_w = basesoc_uart0_txempty_status;
assign basesoc_uart0_txempty_we = builder_csrbank14_txempty_we;
assign basesoc_uart0_txempty_re = builder_csrbank14_txempty_re;
assign builder_csrbank14_rxfull_w = basesoc_uart0_rxfull_status;
assign basesoc_uart0_rxfull_we = builder_csrbank14_rxfull_we;
assign basesoc_uart0_rxfull_re = builder_csrbank14_rxfull_re;
assign builder_csrbank15_sel = (builder_interface15_bank_bus_adr[13:9] == 4'd13);
assign builder_csrbank15_tuning_word0_r = builder_interface15_bank_bus_dat_w[31:0];
assign builder_csrbank15_tuning_word0_re = ((builder_csrbank15_sel & builder_interface15_bank_bus_we) & (builder_interface15_bank_bus_adr[0] == 1'd0));
assign builder_csrbank15_tuning_word0_we = ((builder_csrbank15_sel & (~builder_interface15_bank_bus_we)) & (builder_interface15_bank_bus_adr[0] == 1'd0));
assign builder_csrbank15_tuning_word0_w = basesoc_uart1_phy_storage[31:0];
assign builder_csrbank16_sel = (builder_interface16_bank_bus_adr[13:9] == 5'd16);
assign basesoc_uart1_rxtx_r = builder_interface16_bank_bus_dat_w[7:0];
assign basesoc_uart1_rxtx_re = ((builder_csrbank16_sel & builder_interface16_bank_bus_we) & (builder_interface16_bank_bus_adr[2:0] == 1'd0));
assign basesoc_uart1_rxtx_we = ((builder_csrbank16_sel & (~builder_interface16_bank_bus_we)) & (builder_interface16_bank_bus_adr[2:0] == 1'd0));
assign builder_csrbank16_txfull_r = builder_interface16_bank_bus_dat_w[0];
assign builder_csrbank16_txfull_re = ((builder_csrbank16_sel & builder_interface16_bank_bus_we) & (builder_interface16_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank16_txfull_we = ((builder_csrbank16_sel & (~builder_interface16_bank_bus_we)) & (builder_interface16_bank_bus_adr[2:0] == 1'd1));
assign builder_csrbank16_rxempty_r = builder_interface16_bank_bus_dat_w[0];
assign builder_csrbank16_rxempty_re = ((builder_csrbank16_sel & builder_interface16_bank_bus_we) & (builder_interface16_bank_bus_adr[2:0] == 2'd2));
assign builder_csrbank16_rxempty_we = ((builder_csrbank16_sel & (~builder_interface16_bank_bus_we)) & (builder_interface16_bank_bus_adr[2:0] == 2'd2));
assign basesoc_uart1_eventmanager1_status_r = builder_interface16_bank_bus_dat_w[1:0];
assign basesoc_uart1_eventmanager1_status_re = ((builder_csrbank16_sel & builder_interface16_bank_bus_we) & (builder_interface16_bank_bus_adr[2:0] == 2'd3));
assign basesoc_uart1_eventmanager1_status_we = ((builder_csrbank16_sel & (~builder_interface16_bank_bus_we)) & (builder_interface16_bank_bus_adr[2:0] == 2'd3));
assign basesoc_uart1_eventmanager1_pending_r = builder_interface16_bank_bus_dat_w[1:0];
assign basesoc_uart1_eventmanager1_pending_re = ((builder_csrbank16_sel & builder_interface16_bank_bus_we) & (builder_interface16_bank_bus_adr[2:0] == 3'd4));
assign basesoc_uart1_eventmanager1_pending_we = ((builder_csrbank16_sel & (~builder_interface16_bank_bus_we)) & (builder_interface16_bank_bus_adr[2:0] == 3'd4));
assign builder_csrbank16_ev_enable0_r = builder_interface16_bank_bus_dat_w[1:0];
assign builder_csrbank16_ev_enable0_re = ((builder_csrbank16_sel & builder_interface16_bank_bus_we) & (builder_interface16_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank16_ev_enable0_we = ((builder_csrbank16_sel & (~builder_interface16_bank_bus_we)) & (builder_interface16_bank_bus_adr[2:0] == 3'd5));
assign builder_csrbank16_txempty_r = builder_interface16_bank_bus_dat_w[0];
assign builder_csrbank16_txempty_re = ((builder_csrbank16_sel & builder_interface16_bank_bus_we) & (builder_interface16_bank_bus_adr[2:0] == 3'd6));
assign builder_csrbank16_txempty_we = ((builder_csrbank16_sel & (~builder_interface16_bank_bus_we)) & (builder_interface16_bank_bus_adr[2:0] == 3'd6));
assign builder_csrbank16_rxfull_r = builder_interface16_bank_bus_dat_w[0];
assign builder_csrbank16_rxfull_re = ((builder_csrbank16_sel & builder_interface16_bank_bus_we) & (builder_interface16_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank16_rxfull_we = ((builder_csrbank16_sel & (~builder_interface16_bank_bus_we)) & (builder_interface16_bank_bus_adr[2:0] == 3'd7));
assign builder_csrbank16_txfull_w = basesoc_uart1_txfull_status;
assign basesoc_uart1_txfull_we = builder_csrbank16_txfull_we;
assign basesoc_uart1_txfull_re = builder_csrbank16_txfull_re;
assign builder_csrbank16_rxempty_w = basesoc_uart1_rxempty_status;
assign basesoc_uart1_rxempty_we = builder_csrbank16_rxempty_we;
assign basesoc_uart1_rxempty_re = builder_csrbank16_rxempty_re;
assign builder_csrbank16_ev_enable0_w = basesoc_uart1_eventmanager1_storage[1:0];
assign builder_csrbank16_txempty_w = basesoc_uart1_txempty_status;
assign basesoc_uart1_txempty_we = builder_csrbank16_txempty_we;
assign basesoc_uart1_txempty_re = builder_csrbank16_txempty_re;
assign builder_csrbank16_rxfull_w = basesoc_uart1_rxfull_status;
assign basesoc_uart1_rxfull_we = builder_csrbank16_rxfull_we;
assign basesoc_uart1_rxfull_re = builder_csrbank16_rxfull_re;
assign builder_csrbank17_sel = (builder_interface17_bank_bus_adr[13:9] == 4'd15);
assign builder_csrbank17_tuning_word0_r = builder_interface17_bank_bus_dat_w[31:0];
assign builder_csrbank17_tuning_word0_re = ((builder_csrbank17_sel & builder_interface17_bank_bus_we) & (builder_interface17_bank_bus_adr[0] == 1'd0));
assign builder_csrbank17_tuning_word0_we = ((builder_csrbank17_sel & (~builder_interface17_bank_bus_we)) & (builder_interface17_bank_bus_adr[0] == 1'd0));
assign builder_csrbank17_tuning_word0_w = basesoc_uart2_phy_storage[31:0];
assign builder_csrbank18_sel = (builder_interface18_bank_bus_adr[13:9] == 2'd2);
assign builder_csrbank18_tuning_word0_r = builder_interface18_bank_bus_dat_w[31:0];
assign builder_csrbank18_tuning_word0_re = ((builder_csrbank18_sel & builder_interface18_bank_bus_we) & (builder_interface18_bank_bus_adr[0] == 1'd0));
assign builder_csrbank18_tuning_word0_we = ((builder_csrbank18_sel & (~builder_interface18_bank_bus_we)) & (builder_interface18_bank_bus_adr[0] == 1'd0));
assign builder_csrbank18_tuning_word0_w = basesoc_basesoc_storage[31:0];
assign builder_csrbank19_sel = (builder_interface19_bank_bus_adr[13:9] == 4'd11);
assign builder_csrbank19_mem_adr0_r = builder_interface19_bank_bus_dat_w[18:0];
assign builder_csrbank19_mem_adr0_re = ((builder_csrbank19_sel & builder_interface19_bank_bus_we) & (builder_interface19_bank_bus_adr[1:0] == 1'd0));
assign builder_csrbank19_mem_adr0_we = ((builder_csrbank19_sel & (~builder_interface19_bank_bus_we)) & (builder_interface19_bank_bus_adr[1:0] == 1'd0));
assign builder_csrbank19_mem_we0_r = builder_interface19_bank_bus_dat_w[0];
assign builder_csrbank19_mem_we0_re = ((builder_csrbank19_sel & builder_interface19_bank_bus_we) & (builder_interface19_bank_bus_adr[1:0] == 1'd1));
assign builder_csrbank19_mem_we0_we = ((builder_csrbank19_sel & (~builder_interface19_bank_bus_we)) & (builder_interface19_bank_bus_adr[1:0] == 1'd1));
assign builder_csrbank19_mem_data_w0_r = builder_interface19_bank_bus_dat_w[11:0];
assign builder_csrbank19_mem_data_w0_re = ((builder_csrbank19_sel & builder_interface19_bank_bus_we) & (builder_interface19_bank_bus_adr[1:0] == 2'd2));
assign builder_csrbank19_mem_data_w0_we = ((builder_csrbank19_sel & (~builder_interface19_bank_bus_we)) & (builder_interface19_bank_bus_adr[1:0] == 2'd2));
assign builder_csrbank19_mem_data_r_r = builder_interface19_bank_bus_dat_w[11:0];
assign builder_csrbank19_mem_data_r_re = ((builder_csrbank19_sel & builder_interface19_bank_bus_we) & (builder_interface19_bank_bus_adr[1:0] == 2'd3));
assign builder_csrbank19_mem_data_r_we = ((builder_csrbank19_sel & (~builder_interface19_bank_bus_we)) & (builder_interface19_bank_bus_adr[1:0] == 2'd3));
assign builder_csrbank19_mem_adr0_w = basesoc_mem_adr_storage[18:0];
assign builder_csrbank19_mem_we0_w = basesoc_mem_we_storage;
assign builder_csrbank19_mem_data_w0_w = basesoc_mem_data_w_storage[11:0];
assign builder_csrbank19_mem_data_r_w = basesoc_mem_data_r_status[11:0];
assign basesoc_mem_data_r_we = builder_csrbank19_mem_data_r_we;
assign basesoc_mem_data_r_re = builder_csrbank19_mem_data_r_re;
assign builder_csr_interconnect_adr = builder_basesoc_adr;
assign builder_csr_interconnect_we = builder_basesoc_we;
assign builder_csr_interconnect_dat_w = builder_basesoc_dat_w;
assign builder_basesoc_dat_r = builder_csr_interconnect_dat_r;
assign builder_interface0_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface1_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface2_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface3_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface4_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface5_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface6_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface7_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface8_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface9_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface10_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface11_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface12_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface13_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface14_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface15_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface16_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface17_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface18_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface19_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_interface0_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface1_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface2_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface3_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface4_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface5_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface6_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface7_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface8_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface9_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface10_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface11_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface12_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface13_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface14_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface15_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface16_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface17_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface18_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface19_bank_bus_we = builder_csr_interconnect_we;
assign builder_interface0_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface1_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface2_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface3_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface4_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface5_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface6_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface7_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface8_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface9_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface10_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface11_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface12_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface13_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface14_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface15_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface16_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface17_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface18_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_interface19_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_interconnect_dat_r = (((((((((((((((((((builder_interface0_bank_bus_dat_r | builder_interface1_bank_bus_dat_r) | builder_interface2_bank_bus_dat_r) | builder_interface3_bank_bus_dat_r) | builder_interface4_bank_bus_dat_r) | builder_interface5_bank_bus_dat_r) | builder_interface6_bank_bus_dat_r) | builder_interface7_bank_bus_dat_r) | builder_interface8_bank_bus_dat_r) | builder_interface9_bank_bus_dat_r) | builder_interface10_bank_bus_dat_r) | builder_interface11_bank_bus_dat_r) | builder_interface12_bank_bus_dat_r) | builder_interface13_bank_bus_dat_r) | builder_interface14_bank_bus_dat_r) | builder_interface15_bank_bus_dat_r) | builder_interface16_bank_bus_dat_r) | builder_interface17_bank_bus_dat_r) | builder_interface18_bank_bus_dat_r) | builder_interface19_bank_bus_dat_r);
always @(*) begin
	builder_array_muxed0 <= 8'd0;
	case (basesoc_dgt_count)
		1'd0: begin
			builder_array_muxed0 <= basesoc_displays0;
		end
		1'd1: begin
			builder_array_muxed0 <= basesoc_displays1;
		end
		2'd2: begin
			builder_array_muxed0 <= basesoc_displays2;
		end
		2'd3: begin
			builder_array_muxed0 <= basesoc_displays3;
		end
		3'd4: begin
			builder_array_muxed0 <= basesoc_displays4;
		end
		3'd5: begin
			builder_array_muxed0 <= basesoc_displays5;
		end
		3'd6: begin
			builder_array_muxed0 <= basesoc_displays6;
		end
		default: begin
			builder_array_muxed0 <= basesoc_displays7;
		end
	endcase
end
always @(*) begin
	builder_array_muxed1 <= 30'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed1 <= basesoc_basesoc_picorv32_idbus_adr;
		end
	endcase
end
always @(*) begin
	builder_array_muxed2 <= 32'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed2 <= basesoc_basesoc_picorv32_idbus_dat_w;
		end
	endcase
end
always @(*) begin
	builder_array_muxed3 <= 4'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed3 <= basesoc_basesoc_picorv32_idbus_sel;
		end
	endcase
end
always @(*) begin
	builder_array_muxed4 <= 1'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed4 <= basesoc_basesoc_picorv32_idbus_cyc;
		end
	endcase
end
always @(*) begin
	builder_array_muxed5 <= 1'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed5 <= basesoc_basesoc_picorv32_idbus_stb;
		end
	endcase
end
always @(*) begin
	builder_array_muxed6 <= 1'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed6 <= basesoc_basesoc_picorv32_idbus_we;
		end
	endcase
end
always @(*) begin
	builder_array_muxed7 <= 3'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed7 <= basesoc_basesoc_picorv32_idbus_cti;
		end
	endcase
end
always @(*) begin
	builder_array_muxed8 <= 2'd0;
	case (builder_grant)
		default: begin
			builder_array_muxed8 <= basesoc_basesoc_picorv32_idbus_bte;
		end
	endcase
end
assign basesoc_basesoc_rx = builder_xilinxmultiregimpl0_regs1;
assign basesoc_switchs_status = builder_xilinxmultiregimpl1_regs1;
assign builder_xilinxmultiregimpl1 = {sw7, sw6, sw5, sw4, sw3, sw2, sw1, sw0};
assign basesoc_buttons_status = builder_xilinxmultiregimpl2_regs1;
assign builder_xilinxmultiregimpl2 = {btnl, btnr, btnc};
assign basesoc_ledRGB_1_r_enable = basesoc_ledRGB_1_r_enable_storage;
assign basesoc_ledRGB_1_r_width = basesoc_ledRGB_1_r_width_storage;
assign basesoc_ledRGB_1_r_period = basesoc_ledRGB_1_r_period_storage;
assign basesoc_ledRGB_1_g_enable = basesoc_ledRGB_1_g_enable_storage;
assign basesoc_ledRGB_1_g_width = basesoc_ledRGB_1_g_width_storage;
assign basesoc_ledRGB_1_g_period = basesoc_ledRGB_1_g_period_storage;
assign basesoc_ledRGB_1_b_enable = basesoc_ledRGB_1_b_enable_storage;
assign basesoc_ledRGB_1_b_width = basesoc_ledRGB_1_b_width_storage;
assign basesoc_ledRGB_1_b_period = basesoc_ledRGB_1_b_period_storage;
assign basesoc_ledRGB_2_r_enable = basesoc_ledRGB_2_r_enable_storage;
assign basesoc_ledRGB_2_r_width = basesoc_ledRGB_2_r_width_storage;
assign basesoc_ledRGB_2_r_period = basesoc_ledRGB_2_r_period_storage;
assign basesoc_ledRGB_2_g_enable = basesoc_ledRGB_2_g_enable_storage;
assign basesoc_ledRGB_2_g_width = basesoc_ledRGB_2_g_width_storage;
assign basesoc_ledRGB_2_g_period = basesoc_ledRGB_2_g_period_storage;
assign basesoc_ledRGB_2_b_enable = basesoc_ledRGB_2_b_enable_storage;
assign basesoc_ledRGB_2_b_width = basesoc_ledRGB_2_b_width_storage;
assign basesoc_ledRGB_2_b_period = basesoc_ledRGB_2_b_period_storage;
assign basesoc_ctrlButton_status = builder_xilinxmultiregimpl3_regs1;
assign builder_xilinxmultiregimpl3 = {btnH, btnI};
assign basesoc_uart1_phy_rx = builder_xilinxmultiregimpl4_regs1;
assign basesoc_uart2_phy_rx = builder_xilinxmultiregimpl5_regs1;
assign basesoc_infrarrojos_status = builder_xilinxmultiregimpl6_regs1;
assign builder_xilinxmultiregimpl6 = {infrarrojos2, infrarrojos1, infrarrojos0};

always @(posedge por_clk) begin
	basesoc_int_rst <= (~cpu_reset);
end

always @(posedge sys_clk) begin
	if ((basesoc_basesoc_soccontroller_bus_errors != 32'd4294967295)) begin
		if (basesoc_basesoc_soccontroller_bus_error) begin
			basesoc_basesoc_soccontroller_bus_errors <= (basesoc_basesoc_soccontroller_bus_errors + 1'd1);
		end
	end
	basesoc_basesoc_ram_bus_ack <= 1'd0;
	if (((basesoc_basesoc_ram_bus_cyc & basesoc_basesoc_ram_bus_stb) & (~basesoc_basesoc_ram_bus_ack))) begin
		basesoc_basesoc_ram_bus_ack <= 1'd1;
	end
	basesoc_basesoc_interface0_ram_bus_ack <= 1'd0;
	if (((basesoc_basesoc_interface0_ram_bus_cyc & basesoc_basesoc_interface0_ram_bus_stb) & (~basesoc_basesoc_interface0_ram_bus_ack))) begin
		basesoc_basesoc_interface0_ram_bus_ack <= 1'd1;
	end
	basesoc_basesoc_interface1_ram_bus_ack <= 1'd0;
	if (((basesoc_basesoc_interface1_ram_bus_cyc & basesoc_basesoc_interface1_ram_bus_stb) & (~basesoc_basesoc_interface1_ram_bus_ack))) begin
		basesoc_basesoc_interface1_ram_bus_ack <= 1'd1;
	end
	basesoc_basesoc_sink_ready <= 1'd0;
	if (((basesoc_basesoc_sink_valid & (~basesoc_basesoc_tx_busy)) & (~basesoc_basesoc_sink_ready))) begin
		basesoc_basesoc_tx_reg <= basesoc_basesoc_sink_payload_data;
		basesoc_basesoc_tx_bitcount <= 1'd0;
		basesoc_basesoc_tx_busy <= 1'd1;
		serial_tx <= 1'd0;
	end else begin
		if ((basesoc_basesoc_tx_clken & basesoc_basesoc_tx_busy)) begin
			basesoc_basesoc_tx_bitcount <= (basesoc_basesoc_tx_bitcount + 1'd1);
			if ((basesoc_basesoc_tx_bitcount == 4'd8)) begin
				serial_tx <= 1'd1;
			end else begin
				if ((basesoc_basesoc_tx_bitcount == 4'd9)) begin
					serial_tx <= 1'd1;
					basesoc_basesoc_tx_busy <= 1'd0;
					basesoc_basesoc_sink_ready <= 1'd1;
				end else begin
					serial_tx <= basesoc_basesoc_tx_reg[0];
					basesoc_basesoc_tx_reg <= {1'd0, basesoc_basesoc_tx_reg[7:1]};
				end
			end
		end
	end
	if (basesoc_basesoc_tx_busy) begin
		{basesoc_basesoc_tx_clken, basesoc_basesoc_tx_clkphase} <= (basesoc_basesoc_tx_clkphase + basesoc_basesoc_storage);
	end else begin
		{basesoc_basesoc_tx_clken, basesoc_basesoc_tx_clkphase} <= basesoc_basesoc_storage;
	end
	basesoc_basesoc_source_valid <= 1'd0;
	basesoc_basesoc_rx_r <= basesoc_basesoc_rx;
	if ((~basesoc_basesoc_rx_busy)) begin
		if (((~basesoc_basesoc_rx) & basesoc_basesoc_rx_r)) begin
			basesoc_basesoc_rx_busy <= 1'd1;
			basesoc_basesoc_rx_bitcount <= 1'd0;
		end
	end else begin
		if (basesoc_basesoc_rx_clken) begin
			basesoc_basesoc_rx_bitcount <= (basesoc_basesoc_rx_bitcount + 1'd1);
			if ((basesoc_basesoc_rx_bitcount == 1'd0)) begin
				if (basesoc_basesoc_rx) begin
					basesoc_basesoc_rx_busy <= 1'd0;
				end
			end else begin
				if ((basesoc_basesoc_rx_bitcount == 4'd9)) begin
					basesoc_basesoc_rx_busy <= 1'd0;
					if (basesoc_basesoc_rx) begin
						basesoc_basesoc_source_payload_data <= basesoc_basesoc_rx_reg;
						basesoc_basesoc_source_valid <= 1'd1;
					end
				end else begin
					basesoc_basesoc_rx_reg <= {basesoc_basesoc_rx, basesoc_basesoc_rx_reg[7:1]};
				end
			end
		end
	end
	if (basesoc_basesoc_rx_busy) begin
		{basesoc_basesoc_rx_clken, basesoc_basesoc_rx_clkphase} <= (basesoc_basesoc_rx_clkphase + basesoc_basesoc_storage);
	end else begin
		{basesoc_basesoc_rx_clken, basesoc_basesoc_rx_clkphase} <= 32'd2147483648;
	end
	if (basesoc_basesoc_uart_tx_clear) begin
		basesoc_basesoc_uart_tx_pending <= 1'd0;
	end
	basesoc_basesoc_uart_tx_old_trigger <= basesoc_basesoc_uart_tx_trigger;
	if (((~basesoc_basesoc_uart_tx_trigger) & basesoc_basesoc_uart_tx_old_trigger)) begin
		basesoc_basesoc_uart_tx_pending <= 1'd1;
	end
	if (basesoc_basesoc_uart_rx_clear) begin
		basesoc_basesoc_uart_rx_pending <= 1'd0;
	end
	basesoc_basesoc_uart_rx_old_trigger <= basesoc_basesoc_uart_rx_trigger;
	if (((~basesoc_basesoc_uart_rx_trigger) & basesoc_basesoc_uart_rx_old_trigger)) begin
		basesoc_basesoc_uart_rx_pending <= 1'd1;
	end
	if (basesoc_basesoc_uart_tx_fifo_syncfifo_re) begin
		basesoc_basesoc_uart_tx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_basesoc_uart_tx_fifo_re) begin
			basesoc_basesoc_uart_tx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_basesoc_uart_tx_fifo_syncfifo_we & basesoc_basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_basesoc_uart_tx_fifo_replace))) begin
		basesoc_basesoc_uart_tx_fifo_produce <= (basesoc_basesoc_uart_tx_fifo_produce + 1'd1);
	end
	if (basesoc_basesoc_uart_tx_fifo_do_read) begin
		basesoc_basesoc_uart_tx_fifo_consume <= (basesoc_basesoc_uart_tx_fifo_consume + 1'd1);
	end
	if (((basesoc_basesoc_uart_tx_fifo_syncfifo_we & basesoc_basesoc_uart_tx_fifo_syncfifo_writable) & (~basesoc_basesoc_uart_tx_fifo_replace))) begin
		if ((~basesoc_basesoc_uart_tx_fifo_do_read)) begin
			basesoc_basesoc_uart_tx_fifo_level0 <= (basesoc_basesoc_uart_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_basesoc_uart_tx_fifo_do_read) begin
			basesoc_basesoc_uart_tx_fifo_level0 <= (basesoc_basesoc_uart_tx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_basesoc_uart_rx_fifo_syncfifo_re) begin
		basesoc_basesoc_uart_rx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_basesoc_uart_rx_fifo_re) begin
			basesoc_basesoc_uart_rx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_basesoc_uart_rx_fifo_syncfifo_we & basesoc_basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_basesoc_uart_rx_fifo_replace))) begin
		basesoc_basesoc_uart_rx_fifo_produce <= (basesoc_basesoc_uart_rx_fifo_produce + 1'd1);
	end
	if (basesoc_basesoc_uart_rx_fifo_do_read) begin
		basesoc_basesoc_uart_rx_fifo_consume <= (basesoc_basesoc_uart_rx_fifo_consume + 1'd1);
	end
	if (((basesoc_basesoc_uart_rx_fifo_syncfifo_we & basesoc_basesoc_uart_rx_fifo_syncfifo_writable) & (~basesoc_basesoc_uart_rx_fifo_replace))) begin
		if ((~basesoc_basesoc_uart_rx_fifo_do_read)) begin
			basesoc_basesoc_uart_rx_fifo_level0 <= (basesoc_basesoc_uart_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_basesoc_uart_rx_fifo_do_read) begin
			basesoc_basesoc_uart_rx_fifo_level0 <= (basesoc_basesoc_uart_rx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_basesoc_uart_reset) begin
		basesoc_basesoc_uart_tx_pending <= 1'd0;
		basesoc_basesoc_uart_tx_old_trigger <= 1'd0;
		basesoc_basesoc_uart_rx_pending <= 1'd0;
		basesoc_basesoc_uart_rx_old_trigger <= 1'd0;
		basesoc_basesoc_uart_tx_fifo_readable <= 1'd0;
		basesoc_basesoc_uart_tx_fifo_level0 <= 5'd0;
		basesoc_basesoc_uart_tx_fifo_produce <= 4'd0;
		basesoc_basesoc_uart_tx_fifo_consume <= 4'd0;
		basesoc_basesoc_uart_rx_fifo_readable <= 1'd0;
		basesoc_basesoc_uart_rx_fifo_level0 <= 5'd0;
		basesoc_basesoc_uart_rx_fifo_produce <= 4'd0;
		basesoc_basesoc_uart_rx_fifo_consume <= 4'd0;
	end
	if (basesoc_basesoc_timer_en_storage) begin
		if ((basesoc_basesoc_timer_value == 1'd0)) begin
			basesoc_basesoc_timer_value <= basesoc_basesoc_timer_reload_storage;
		end else begin
			basesoc_basesoc_timer_value <= (basesoc_basesoc_timer_value - 1'd1);
		end
	end else begin
		basesoc_basesoc_timer_value <= basesoc_basesoc_timer_load_storage;
	end
	if (basesoc_basesoc_timer_update_value_re) begin
		basesoc_basesoc_timer_value_status <= basesoc_basesoc_timer_value;
	end
	if (basesoc_basesoc_timer_zero_clear) begin
		basesoc_basesoc_timer_zero_pending <= 1'd0;
	end
	basesoc_basesoc_timer_zero_old_trigger <= basesoc_basesoc_timer_zero_trigger;
	if (((~basesoc_basesoc_timer_zero_trigger) & basesoc_basesoc_timer_zero_old_trigger)) begin
		basesoc_basesoc_timer_zero_pending <= 1'd1;
	end
	if ((basesoc_dgt_tick_count >= 18'd199999)) begin
		basesoc_dgt_tick_count <= 1'd0;
		basesoc_dgt_tick <= 1'd1;
	end else begin
		basesoc_dgt_tick_count <= (basesoc_dgt_tick_count + 1'd1);
		basesoc_dgt_tick <= 1'd0;
	end
	if (basesoc_dgt_tick) begin
		if ((basesoc_dgt_count >= 3'd7)) begin
			basesoc_dgt_count <= 1'd0;
		end else begin
			basesoc_dgt_count <= (basesoc_dgt_count + 1'd1);
		end
	end
	if (basesoc_ledRGB_1_r_enable) begin
		basesoc_ledRGB_1_r_counter <= (basesoc_ledRGB_1_r_counter + 1'd1);
		if ((basesoc_ledRGB_1_r_counter < basesoc_ledRGB_1_r_width)) begin
			ledRGB1_r <= 1'd1;
		end else begin
			ledRGB1_r <= 1'd0;
		end
		if ((basesoc_ledRGB_1_r_counter >= (basesoc_ledRGB_1_r_period - 1'd1))) begin
			basesoc_ledRGB_1_r_counter <= 1'd0;
		end
	end else begin
		basesoc_ledRGB_1_r_counter <= 1'd0;
		ledRGB1_r <= 1'd0;
	end
	if (basesoc_ledRGB_1_g_enable) begin
		basesoc_ledRGB_1_g_counter <= (basesoc_ledRGB_1_g_counter + 1'd1);
		if ((basesoc_ledRGB_1_g_counter < basesoc_ledRGB_1_g_width)) begin
			ledRGB1_g <= 1'd1;
		end else begin
			ledRGB1_g <= 1'd0;
		end
		if ((basesoc_ledRGB_1_g_counter >= (basesoc_ledRGB_1_g_period - 1'd1))) begin
			basesoc_ledRGB_1_g_counter <= 1'd0;
		end
	end else begin
		basesoc_ledRGB_1_g_counter <= 1'd0;
		ledRGB1_g <= 1'd0;
	end
	if (basesoc_ledRGB_1_b_enable) begin
		basesoc_ledRGB_1_b_counter <= (basesoc_ledRGB_1_b_counter + 1'd1);
		if ((basesoc_ledRGB_1_b_counter < basesoc_ledRGB_1_b_width)) begin
			ledRGB1_b <= 1'd1;
		end else begin
			ledRGB1_b <= 1'd0;
		end
		if ((basesoc_ledRGB_1_b_counter >= (basesoc_ledRGB_1_b_period - 1'd1))) begin
			basesoc_ledRGB_1_b_counter <= 1'd0;
		end
	end else begin
		basesoc_ledRGB_1_b_counter <= 1'd0;
		ledRGB1_b <= 1'd0;
	end
	if (basesoc_ledRGB_2_r_enable) begin
		basesoc_ledRGB_2_r_counter <= (basesoc_ledRGB_2_r_counter + 1'd1);
		if ((basesoc_ledRGB_2_r_counter < basesoc_ledRGB_2_r_width)) begin
			ledRGB2_r <= 1'd1;
		end else begin
			ledRGB2_r <= 1'd0;
		end
		if ((basesoc_ledRGB_2_r_counter >= (basesoc_ledRGB_2_r_period - 1'd1))) begin
			basesoc_ledRGB_2_r_counter <= 1'd0;
		end
	end else begin
		basesoc_ledRGB_2_r_counter <= 1'd0;
		ledRGB2_r <= 1'd0;
	end
	if (basesoc_ledRGB_2_g_enable) begin
		basesoc_ledRGB_2_g_counter <= (basesoc_ledRGB_2_g_counter + 1'd1);
		if ((basesoc_ledRGB_2_g_counter < basesoc_ledRGB_2_g_width)) begin
			ledRGB2_g <= 1'd1;
		end else begin
			ledRGB2_g <= 1'd0;
		end
		if ((basesoc_ledRGB_2_g_counter >= (basesoc_ledRGB_2_g_period - 1'd1))) begin
			basesoc_ledRGB_2_g_counter <= 1'd0;
		end
	end else begin
		basesoc_ledRGB_2_g_counter <= 1'd0;
		ledRGB2_g <= 1'd0;
	end
	if (basesoc_ledRGB_2_b_enable) begin
		basesoc_ledRGB_2_b_counter <= (basesoc_ledRGB_2_b_counter + 1'd1);
		if ((basesoc_ledRGB_2_b_counter < basesoc_ledRGB_2_b_width)) begin
			ledRGB2_b <= 1'd1;
		end else begin
			ledRGB2_b <= 1'd0;
		end
		if ((basesoc_ledRGB_2_b_counter >= (basesoc_ledRGB_2_b_period - 1'd1))) begin
			basesoc_ledRGB_2_b_counter <= 1'd0;
		end
	end else begin
		basesoc_ledRGB_2_b_counter <= 1'd0;
		ledRGB2_b <= 1'd0;
	end
	if ((basesoc_pxl_tick_count >= 2'd3)) begin
		basesoc_pxl_tick_count <= 1'd0;
		basesoc_pxl_tick <= 1'd1;
	end else begin
		basesoc_pxl_tick_count <= (basesoc_pxl_tick_count + 1'd1);
		basesoc_pxl_tick <= 1'd0;
	end
	if (basesoc_pxl_tick) begin
		if ((basesoc_h_count >= 10'd799)) begin
			basesoc_h_count <= 1'd0;
			if ((basesoc_v_count >= 10'd524)) begin
				basesoc_v_count <= 1'd0;
			end else begin
				basesoc_v_count <= (basesoc_v_count + 1'd1);
			end
		end else begin
			basesoc_h_count <= (basesoc_h_count + 1'd1);
		end
	end
	basesoc_p_r_adr <= ((basesoc_v_count * 10'd640) + basesoc_h_count);
	basesoc_uart1_phy_sink_ready <= 1'd0;
	if (((basesoc_uart1_phy_sink_valid & (~basesoc_uart1_phy_tx_busy)) & (~basesoc_uart1_phy_sink_ready))) begin
		basesoc_uart1_phy_tx_reg <= basesoc_uart1_phy_sink_payload_data;
		basesoc_uart1_phy_tx_bitcount <= 1'd0;
		basesoc_uart1_phy_tx_busy <= 1'd1;
		uart1_tx <= 1'd0;
	end else begin
		if ((basesoc_uart1_phy_tx_clken & basesoc_uart1_phy_tx_busy)) begin
			basesoc_uart1_phy_tx_bitcount <= (basesoc_uart1_phy_tx_bitcount + 1'd1);
			if ((basesoc_uart1_phy_tx_bitcount == 4'd8)) begin
				uart1_tx <= 1'd1;
			end else begin
				if ((basesoc_uart1_phy_tx_bitcount == 4'd9)) begin
					uart1_tx <= 1'd1;
					basesoc_uart1_phy_tx_busy <= 1'd0;
					basesoc_uart1_phy_sink_ready <= 1'd1;
				end else begin
					uart1_tx <= basesoc_uart1_phy_tx_reg[0];
					basesoc_uart1_phy_tx_reg <= {1'd0, basesoc_uart1_phy_tx_reg[7:1]};
				end
			end
		end
	end
	if (basesoc_uart1_phy_tx_busy) begin
		{basesoc_uart1_phy_tx_clken, basesoc_uart1_phy_tx_clkphase} <= (basesoc_uart1_phy_tx_clkphase + basesoc_uart1_phy_storage);
	end else begin
		{basesoc_uart1_phy_tx_clken, basesoc_uart1_phy_tx_clkphase} <= basesoc_uart1_phy_storage;
	end
	basesoc_uart1_phy_source_valid <= 1'd0;
	basesoc_uart1_phy_rx_r <= basesoc_uart1_phy_rx;
	if ((~basesoc_uart1_phy_rx_busy)) begin
		if (((~basesoc_uart1_phy_rx) & basesoc_uart1_phy_rx_r)) begin
			basesoc_uart1_phy_rx_busy <= 1'd1;
			basesoc_uart1_phy_rx_bitcount <= 1'd0;
		end
	end else begin
		if (basesoc_uart1_phy_rx_clken) begin
			basesoc_uart1_phy_rx_bitcount <= (basesoc_uart1_phy_rx_bitcount + 1'd1);
			if ((basesoc_uart1_phy_rx_bitcount == 1'd0)) begin
				if (basesoc_uart1_phy_rx) begin
					basesoc_uart1_phy_rx_busy <= 1'd0;
				end
			end else begin
				if ((basesoc_uart1_phy_rx_bitcount == 4'd9)) begin
					basesoc_uart1_phy_rx_busy <= 1'd0;
					if (basesoc_uart1_phy_rx) begin
						basesoc_uart1_phy_source_payload_data <= basesoc_uart1_phy_rx_reg;
						basesoc_uart1_phy_source_valid <= 1'd1;
					end
				end else begin
					basesoc_uart1_phy_rx_reg <= {basesoc_uart1_phy_rx, basesoc_uart1_phy_rx_reg[7:1]};
				end
			end
		end
	end
	if (basesoc_uart1_phy_rx_busy) begin
		{basesoc_uart1_phy_rx_clken, basesoc_uart1_phy_rx_clkphase} <= (basesoc_uart1_phy_rx_clkphase + basesoc_uart1_phy_storage);
	end else begin
		{basesoc_uart1_phy_rx_clken, basesoc_uart1_phy_rx_clkphase} <= 32'd2147483648;
	end
	if (basesoc_uart0_tx_clear) begin
		basesoc_uart0_tx_pending <= 1'd0;
	end
	basesoc_uart0_tx_old_trigger <= basesoc_uart0_tx_trigger;
	if (((~basesoc_uart0_tx_trigger) & basesoc_uart0_tx_old_trigger)) begin
		basesoc_uart0_tx_pending <= 1'd1;
	end
	if (basesoc_uart0_rx_clear) begin
		basesoc_uart0_rx_pending <= 1'd0;
	end
	basesoc_uart0_rx_old_trigger <= basesoc_uart0_rx_trigger;
	if (((~basesoc_uart0_rx_trigger) & basesoc_uart0_rx_old_trigger)) begin
		basesoc_uart0_rx_pending <= 1'd1;
	end
	if (basesoc_uart0_tx_fifo_syncfifo0_re) begin
		basesoc_uart0_tx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_uart0_tx_fifo_re) begin
			basesoc_uart0_tx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_uart0_tx_fifo_syncfifo0_we & basesoc_uart0_tx_fifo_syncfifo0_writable) & (~basesoc_uart0_tx_fifo_replace))) begin
		basesoc_uart0_tx_fifo_produce <= (basesoc_uart0_tx_fifo_produce + 1'd1);
	end
	if (basesoc_uart0_tx_fifo_do_read) begin
		basesoc_uart0_tx_fifo_consume <= (basesoc_uart0_tx_fifo_consume + 1'd1);
	end
	if (((basesoc_uart0_tx_fifo_syncfifo0_we & basesoc_uart0_tx_fifo_syncfifo0_writable) & (~basesoc_uart0_tx_fifo_replace))) begin
		if ((~basesoc_uart0_tx_fifo_do_read)) begin
			basesoc_uart0_tx_fifo_level0 <= (basesoc_uart0_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_uart0_tx_fifo_do_read) begin
			basesoc_uart0_tx_fifo_level0 <= (basesoc_uart0_tx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_uart0_rx_fifo_syncfifo0_re) begin
		basesoc_uart0_rx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_uart0_rx_fifo_re) begin
			basesoc_uart0_rx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_uart0_rx_fifo_syncfifo0_we & basesoc_uart0_rx_fifo_syncfifo0_writable) & (~basesoc_uart0_rx_fifo_replace))) begin
		basesoc_uart0_rx_fifo_produce <= (basesoc_uart0_rx_fifo_produce + 1'd1);
	end
	if (basesoc_uart0_rx_fifo_do_read) begin
		basesoc_uart0_rx_fifo_consume <= (basesoc_uart0_rx_fifo_consume + 1'd1);
	end
	if (((basesoc_uart0_rx_fifo_syncfifo0_we & basesoc_uart0_rx_fifo_syncfifo0_writable) & (~basesoc_uart0_rx_fifo_replace))) begin
		if ((~basesoc_uart0_rx_fifo_do_read)) begin
			basesoc_uart0_rx_fifo_level0 <= (basesoc_uart0_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_uart0_rx_fifo_do_read) begin
			basesoc_uart0_rx_fifo_level0 <= (basesoc_uart0_rx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_uart1_reset) begin
		basesoc_uart0_tx_pending <= 1'd0;
		basesoc_uart0_tx_old_trigger <= 1'd0;
		basesoc_uart0_rx_pending <= 1'd0;
		basesoc_uart0_rx_old_trigger <= 1'd0;
		basesoc_uart0_tx_fifo_readable <= 1'd0;
		basesoc_uart0_tx_fifo_level0 <= 5'd0;
		basesoc_uart0_tx_fifo_produce <= 4'd0;
		basesoc_uart0_tx_fifo_consume <= 4'd0;
		basesoc_uart0_rx_fifo_readable <= 1'd0;
		basesoc_uart0_rx_fifo_level0 <= 5'd0;
		basesoc_uart0_rx_fifo_produce <= 4'd0;
		basesoc_uart0_rx_fifo_consume <= 4'd0;
	end
	basesoc_uart2_phy_sink_ready <= 1'd0;
	if (((basesoc_uart2_phy_sink_valid & (~basesoc_uart2_phy_tx_busy)) & (~basesoc_uart2_phy_sink_ready))) begin
		basesoc_uart2_phy_tx_reg <= basesoc_uart2_phy_sink_payload_data;
		basesoc_uart2_phy_tx_bitcount <= 1'd0;
		basesoc_uart2_phy_tx_busy <= 1'd1;
		uart2_tx <= 1'd0;
	end else begin
		if ((basesoc_uart2_phy_tx_clken & basesoc_uart2_phy_tx_busy)) begin
			basesoc_uart2_phy_tx_bitcount <= (basesoc_uart2_phy_tx_bitcount + 1'd1);
			if ((basesoc_uart2_phy_tx_bitcount == 4'd8)) begin
				uart2_tx <= 1'd1;
			end else begin
				if ((basesoc_uart2_phy_tx_bitcount == 4'd9)) begin
					uart2_tx <= 1'd1;
					basesoc_uart2_phy_tx_busy <= 1'd0;
					basesoc_uart2_phy_sink_ready <= 1'd1;
				end else begin
					uart2_tx <= basesoc_uart2_phy_tx_reg[0];
					basesoc_uart2_phy_tx_reg <= {1'd0, basesoc_uart2_phy_tx_reg[7:1]};
				end
			end
		end
	end
	if (basesoc_uart2_phy_tx_busy) begin
		{basesoc_uart2_phy_tx_clken, basesoc_uart2_phy_tx_clkphase} <= (basesoc_uart2_phy_tx_clkphase + basesoc_uart2_phy_storage);
	end else begin
		{basesoc_uart2_phy_tx_clken, basesoc_uart2_phy_tx_clkphase} <= basesoc_uart2_phy_storage;
	end
	basesoc_uart2_phy_source_valid <= 1'd0;
	basesoc_uart2_phy_rx_r <= basesoc_uart2_phy_rx;
	if ((~basesoc_uart2_phy_rx_busy)) begin
		if (((~basesoc_uart2_phy_rx) & basesoc_uart2_phy_rx_r)) begin
			basesoc_uart2_phy_rx_busy <= 1'd1;
			basesoc_uart2_phy_rx_bitcount <= 1'd0;
		end
	end else begin
		if (basesoc_uart2_phy_rx_clken) begin
			basesoc_uart2_phy_rx_bitcount <= (basesoc_uart2_phy_rx_bitcount + 1'd1);
			if ((basesoc_uart2_phy_rx_bitcount == 1'd0)) begin
				if (basesoc_uart2_phy_rx) begin
					basesoc_uart2_phy_rx_busy <= 1'd0;
				end
			end else begin
				if ((basesoc_uart2_phy_rx_bitcount == 4'd9)) begin
					basesoc_uart2_phy_rx_busy <= 1'd0;
					if (basesoc_uart2_phy_rx) begin
						basesoc_uart2_phy_source_payload_data <= basesoc_uart2_phy_rx_reg;
						basesoc_uart2_phy_source_valid <= 1'd1;
					end
				end else begin
					basesoc_uart2_phy_rx_reg <= {basesoc_uart2_phy_rx, basesoc_uart2_phy_rx_reg[7:1]};
				end
			end
		end
	end
	if (basesoc_uart2_phy_rx_busy) begin
		{basesoc_uart2_phy_rx_clken, basesoc_uart2_phy_rx_clkphase} <= (basesoc_uart2_phy_rx_clkphase + basesoc_uart2_phy_storage);
	end else begin
		{basesoc_uart2_phy_rx_clken, basesoc_uart2_phy_rx_clkphase} <= 32'd2147483648;
	end
	if (basesoc_uart1_tx_clear) begin
		basesoc_uart1_tx_pending <= 1'd0;
	end
	basesoc_uart1_tx_old_trigger <= basesoc_uart1_tx_trigger;
	if (((~basesoc_uart1_tx_trigger) & basesoc_uart1_tx_old_trigger)) begin
		basesoc_uart1_tx_pending <= 1'd1;
	end
	if (basesoc_uart1_rx_clear) begin
		basesoc_uart1_rx_pending <= 1'd0;
	end
	basesoc_uart1_rx_old_trigger <= basesoc_uart1_rx_trigger;
	if (((~basesoc_uart1_rx_trigger) & basesoc_uart1_rx_old_trigger)) begin
		basesoc_uart1_rx_pending <= 1'd1;
	end
	if (basesoc_uart1_tx_fifo_syncfifo1_re) begin
		basesoc_uart1_tx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_uart1_tx_fifo_re) begin
			basesoc_uart1_tx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_uart1_tx_fifo_syncfifo1_we & basesoc_uart1_tx_fifo_syncfifo1_writable) & (~basesoc_uart1_tx_fifo_replace))) begin
		basesoc_uart1_tx_fifo_produce <= (basesoc_uart1_tx_fifo_produce + 1'd1);
	end
	if (basesoc_uart1_tx_fifo_do_read) begin
		basesoc_uart1_tx_fifo_consume <= (basesoc_uart1_tx_fifo_consume + 1'd1);
	end
	if (((basesoc_uart1_tx_fifo_syncfifo1_we & basesoc_uart1_tx_fifo_syncfifo1_writable) & (~basesoc_uart1_tx_fifo_replace))) begin
		if ((~basesoc_uart1_tx_fifo_do_read)) begin
			basesoc_uart1_tx_fifo_level0 <= (basesoc_uart1_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_uart1_tx_fifo_do_read) begin
			basesoc_uart1_tx_fifo_level0 <= (basesoc_uart1_tx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_uart1_rx_fifo_syncfifo1_re) begin
		basesoc_uart1_rx_fifo_readable <= 1'd1;
	end else begin
		if (basesoc_uart1_rx_fifo_re) begin
			basesoc_uart1_rx_fifo_readable <= 1'd0;
		end
	end
	if (((basesoc_uart1_rx_fifo_syncfifo1_we & basesoc_uart1_rx_fifo_syncfifo1_writable) & (~basesoc_uart1_rx_fifo_replace))) begin
		basesoc_uart1_rx_fifo_produce <= (basesoc_uart1_rx_fifo_produce + 1'd1);
	end
	if (basesoc_uart1_rx_fifo_do_read) begin
		basesoc_uart1_rx_fifo_consume <= (basesoc_uart1_rx_fifo_consume + 1'd1);
	end
	if (((basesoc_uart1_rx_fifo_syncfifo1_we & basesoc_uart1_rx_fifo_syncfifo1_writable) & (~basesoc_uart1_rx_fifo_replace))) begin
		if ((~basesoc_uart1_rx_fifo_do_read)) begin
			basesoc_uart1_rx_fifo_level0 <= (basesoc_uart1_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (basesoc_uart1_rx_fifo_do_read) begin
			basesoc_uart1_rx_fifo_level0 <= (basesoc_uart1_rx_fifo_level0 - 1'd1);
		end
	end
	if (basesoc_uart2_reset) begin
		basesoc_uart1_tx_pending <= 1'd0;
		basesoc_uart1_tx_old_trigger <= 1'd0;
		basesoc_uart1_rx_pending <= 1'd0;
		basesoc_uart1_rx_old_trigger <= 1'd0;
		basesoc_uart1_tx_fifo_readable <= 1'd0;
		basesoc_uart1_tx_fifo_level0 <= 5'd0;
		basesoc_uart1_tx_fifo_produce <= 4'd0;
		basesoc_uart1_tx_fifo_consume <= 4'd0;
		basesoc_uart1_rx_fifo_readable <= 1'd0;
		basesoc_uart1_rx_fifo_level0 <= 5'd0;
		basesoc_uart1_rx_fifo_produce <= 4'd0;
		basesoc_uart1_rx_fifo_consume <= 4'd0;
	end
	if (basesoc_pwm_cntrl_clear) begin
		basesoc_pwm_cntrl_pending <= 1'd0;
	end
	basesoc_pwm_cntrl_old_trigger <= basesoc_pwm_cntrl_trigger;
	if (((~basesoc_pwm_cntrl_trigger) & basesoc_pwm_cntrl_old_trigger)) begin
		basesoc_pwm_cntrl_pending <= 1'd1;
	end
	if (basesoc_US_cntrl_ok_clear) begin
		basesoc_US_cntrl_ok_pending <= 1'd0;
	end
	basesoc_US_cntrl_ok_old_trigger <= basesoc_US_cntrl_ok_trigger;
	if (((~basesoc_US_cntrl_ok_trigger) & basesoc_US_cntrl_ok_old_trigger)) begin
		basesoc_US_cntrl_ok_pending <= 1'd1;
	end
	if (basesoc_Process_cntrl_ok_clear) begin
		basesoc_Process_cntrl_ok_pending <= 1'd0;
	end
	basesoc_Process_cntrl_ok_old_trigger <= basesoc_Process_cntrl_ok_trigger;
	if (((~basesoc_Process_cntrl_ok_trigger) & basesoc_Process_cntrl_ok_old_trigger)) begin
		basesoc_Process_cntrl_ok_pending <= 1'd1;
	end
	builder_state <= builder_next_state;
	builder_slave_sel_r <= builder_slave_sel;
	if (builder_wait) begin
		if ((~builder_done)) begin
			builder_count <= (builder_count - 1'd1);
		end
	end else begin
		builder_count <= 20'd1000000;
	end
	builder_interface0_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank0_sel) begin
		case (builder_interface0_bank_bus_adr[3:0])
			1'd0: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_enable0_w;
			end
			1'd1: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_CAM_reset0_w;
			end
			2'd2: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_END_w;
			end
			2'd3: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_AnchoMayor_w;
			end
			3'd4: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_AnchoMenor_w;
			end
			3'd5: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_AnchoIgual_w;
			end
			3'd6: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_redCounter_w;
			end
			3'd7: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_greenCounter_w;
			end
			4'd8: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_blueCounter_w;
			end
			4'd9: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_nothingCounter_w;
			end
			4'd10: begin
				builder_interface0_bank_bus_dat_r <= basesoc_Process_cntrl_eventmanager_status_w;
			end
			4'd11: begin
				builder_interface0_bank_bus_dat_r <= basesoc_Process_cntrl_eventmanager_pending_w;
			end
			4'd12: begin
				builder_interface0_bank_bus_dat_r <= builder_csrbank0_ev_enable0_w;
			end
		endcase
	end
	if (builder_csrbank0_enable0_re) begin
		basesoc_Process_cntrl_enable_storage <= builder_csrbank0_enable0_r;
	end
	basesoc_Process_cntrl_enable_re <= builder_csrbank0_enable0_re;
	if (builder_csrbank0_CAM_reset0_re) begin
		basesoc_Process_cntrl_CAM_reset_storage <= builder_csrbank0_CAM_reset0_r;
	end
	basesoc_Process_cntrl_CAM_reset_re <= builder_csrbank0_CAM_reset0_re;
	if (builder_csrbank0_ev_enable0_re) begin
		basesoc_Process_cntrl_eventmanager_storage <= builder_csrbank0_ev_enable0_r;
	end
	basesoc_Process_cntrl_eventmanager_re <= builder_csrbank0_ev_enable0_re;
	builder_interface1_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank1_sel) begin
		case (builder_interface1_bank_bus_adr[2:0])
			1'd0: begin
				builder_interface1_bank_bus_dat_r <= builder_csrbank1_orden0_w;
			end
			1'd1: begin
				builder_interface1_bank_bus_dat_r <= builder_csrbank1_DONE_w;
			end
			2'd2: begin
				builder_interface1_bank_bus_dat_r <= builder_csrbank1_d_w;
			end
			2'd3: begin
				builder_interface1_bank_bus_dat_r <= basesoc_US_cntrl_eventmanager_status_w;
			end
			3'd4: begin
				builder_interface1_bank_bus_dat_r <= basesoc_US_cntrl_eventmanager_pending_w;
			end
			3'd5: begin
				builder_interface1_bank_bus_dat_r <= builder_csrbank1_ev_enable0_w;
			end
		endcase
	end
	if (builder_csrbank1_orden0_re) begin
		basesoc_US_cntrl_orden_storage <= builder_csrbank1_orden0_r;
	end
	basesoc_US_cntrl_orden_re <= builder_csrbank1_orden0_re;
	if (builder_csrbank1_ev_enable0_re) begin
		basesoc_US_cntrl_eventmanager_storage <= builder_csrbank1_ev_enable0_r;
	end
	basesoc_US_cntrl_eventmanager_re <= builder_csrbank1_ev_enable0_re;
	builder_interface2_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank2_sel) begin
		case (builder_interface2_bank_bus_adr[0])
			1'd0: begin
				builder_interface2_bank_bus_dat_r <= builder_csrbank2_in_w;
			end
		endcase
	end
	builder_interface3_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank3_sel) begin
		case (builder_interface3_bank_bus_adr[1:0])
			1'd0: begin
				builder_interface3_bank_bus_dat_r <= builder_csrbank3_reset0_w;
			end
			1'd1: begin
				builder_interface3_bank_bus_dat_r <= builder_csrbank3_scratch0_w;
			end
			2'd2: begin
				builder_interface3_bank_bus_dat_r <= builder_csrbank3_bus_errors_w;
			end
		endcase
	end
	if (builder_csrbank3_reset0_re) begin
		basesoc_basesoc_soccontroller_reset_storage <= builder_csrbank3_reset0_r;
	end
	basesoc_basesoc_soccontroller_reset_re <= builder_csrbank3_reset0_re;
	if (builder_csrbank3_scratch0_re) begin
		basesoc_basesoc_soccontroller_scratch_storage[31:0] <= builder_csrbank3_scratch0_r;
	end
	basesoc_basesoc_soccontroller_scratch_re <= builder_csrbank3_scratch0_re;
	builder_interface4_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank4_sel) begin
		case (builder_interface4_bank_bus_adr[0])
			1'd0: begin
				builder_interface4_bank_bus_dat_r <= builder_csrbank4_in_w;
			end
		endcase
	end
	builder_interface5_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank5_sel) begin
		case (builder_interface5_bank_bus_adr[2:0])
			1'd0: begin
				builder_interface5_bank_bus_dat_r <= builder_csrbank5_dig_00_w;
			end
			1'd1: begin
				builder_interface5_bank_bus_dat_r <= builder_csrbank5_dig_10_w;
			end
			2'd2: begin
				builder_interface5_bank_bus_dat_r <= builder_csrbank5_dig_20_w;
			end
			2'd3: begin
				builder_interface5_bank_bus_dat_r <= builder_csrbank5_dig_30_w;
			end
			3'd4: begin
				builder_interface5_bank_bus_dat_r <= builder_csrbank5_dig_40_w;
			end
			3'd5: begin
				builder_interface5_bank_bus_dat_r <= builder_csrbank5_dig_50_w;
			end
			3'd6: begin
				builder_interface5_bank_bus_dat_r <= builder_csrbank5_dig_60_w;
			end
			3'd7: begin
				builder_interface5_bank_bus_dat_r <= builder_csrbank5_dig_70_w;
			end
		endcase
	end
	if (builder_csrbank5_dig_00_re) begin
		basesoc_dig_0_storage[7:0] <= builder_csrbank5_dig_00_r;
	end
	basesoc_dig_0_re <= builder_csrbank5_dig_00_re;
	if (builder_csrbank5_dig_10_re) begin
		basesoc_dig_1_storage[7:0] <= builder_csrbank5_dig_10_r;
	end
	basesoc_dig_1_re <= builder_csrbank5_dig_10_re;
	if (builder_csrbank5_dig_20_re) begin
		basesoc_dig_2_storage[7:0] <= builder_csrbank5_dig_20_r;
	end
	basesoc_dig_2_re <= builder_csrbank5_dig_20_re;
	if (builder_csrbank5_dig_30_re) begin
		basesoc_dig_3_storage[7:0] <= builder_csrbank5_dig_30_r;
	end
	basesoc_dig_3_re <= builder_csrbank5_dig_30_re;
	if (builder_csrbank5_dig_40_re) begin
		basesoc_dig_4_storage[7:0] <= builder_csrbank5_dig_40_r;
	end
	basesoc_dig_4_re <= builder_csrbank5_dig_40_re;
	if (builder_csrbank5_dig_50_re) begin
		basesoc_dig_5_storage[7:0] <= builder_csrbank5_dig_50_r;
	end
	basesoc_dig_5_re <= builder_csrbank5_dig_50_re;
	if (builder_csrbank5_dig_60_re) begin
		basesoc_dig_6_storage[7:0] <= builder_csrbank5_dig_60_r;
	end
	basesoc_dig_6_re <= builder_csrbank5_dig_60_re;
	if (builder_csrbank5_dig_70_re) begin
		basesoc_dig_7_storage[7:0] <= builder_csrbank5_dig_70_r;
	end
	basesoc_dig_7_re <= builder_csrbank5_dig_70_re;
	builder_interface6_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank6_sel) begin
		case (builder_interface6_bank_bus_adr[0])
			1'd0: begin
				builder_interface6_bank_bus_dat_r <= builder_csrbank6_in_w;
			end
		endcase
	end
	builder_interface7_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank7_sel) begin
		case (builder_interface7_bank_bus_adr[3:0])
			1'd0: begin
				builder_interface7_bank_bus_dat_r <= builder_csrbank7_r_enable0_w;
			end
			1'd1: begin
				builder_interface7_bank_bus_dat_r <= builder_csrbank7_r_width0_w;
			end
			2'd2: begin
				builder_interface7_bank_bus_dat_r <= builder_csrbank7_r_period0_w;
			end
			2'd3: begin
				builder_interface7_bank_bus_dat_r <= builder_csrbank7_g_enable0_w;
			end
			3'd4: begin
				builder_interface7_bank_bus_dat_r <= builder_csrbank7_g_width0_w;
			end
			3'd5: begin
				builder_interface7_bank_bus_dat_r <= builder_csrbank7_g_period0_w;
			end
			3'd6: begin
				builder_interface7_bank_bus_dat_r <= builder_csrbank7_b_enable0_w;
			end
			3'd7: begin
				builder_interface7_bank_bus_dat_r <= builder_csrbank7_b_width0_w;
			end
			4'd8: begin
				builder_interface7_bank_bus_dat_r <= builder_csrbank7_b_period0_w;
			end
		endcase
	end
	if (builder_csrbank7_r_enable0_re) begin
		basesoc_ledRGB_1_r_enable_storage <= builder_csrbank7_r_enable0_r;
	end
	basesoc_ledRGB_1_r_enable_re <= builder_csrbank7_r_enable0_re;
	if (builder_csrbank7_r_width0_re) begin
		basesoc_ledRGB_1_r_width_storage[31:0] <= builder_csrbank7_r_width0_r;
	end
	basesoc_ledRGB_1_r_width_re <= builder_csrbank7_r_width0_re;
	if (builder_csrbank7_r_period0_re) begin
		basesoc_ledRGB_1_r_period_storage[31:0] <= builder_csrbank7_r_period0_r;
	end
	basesoc_ledRGB_1_r_period_re <= builder_csrbank7_r_period0_re;
	if (builder_csrbank7_g_enable0_re) begin
		basesoc_ledRGB_1_g_enable_storage <= builder_csrbank7_g_enable0_r;
	end
	basesoc_ledRGB_1_g_enable_re <= builder_csrbank7_g_enable0_re;
	if (builder_csrbank7_g_width0_re) begin
		basesoc_ledRGB_1_g_width_storage[31:0] <= builder_csrbank7_g_width0_r;
	end
	basesoc_ledRGB_1_g_width_re <= builder_csrbank7_g_width0_re;
	if (builder_csrbank7_g_period0_re) begin
		basesoc_ledRGB_1_g_period_storage[31:0] <= builder_csrbank7_g_period0_r;
	end
	basesoc_ledRGB_1_g_period_re <= builder_csrbank7_g_period0_re;
	if (builder_csrbank7_b_enable0_re) begin
		basesoc_ledRGB_1_b_enable_storage <= builder_csrbank7_b_enable0_r;
	end
	basesoc_ledRGB_1_b_enable_re <= builder_csrbank7_b_enable0_re;
	if (builder_csrbank7_b_width0_re) begin
		basesoc_ledRGB_1_b_width_storage[31:0] <= builder_csrbank7_b_width0_r;
	end
	basesoc_ledRGB_1_b_width_re <= builder_csrbank7_b_width0_re;
	if (builder_csrbank7_b_period0_re) begin
		basesoc_ledRGB_1_b_period_storage[31:0] <= builder_csrbank7_b_period0_r;
	end
	basesoc_ledRGB_1_b_period_re <= builder_csrbank7_b_period0_re;
	builder_interface8_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank8_sel) begin
		case (builder_interface8_bank_bus_adr[3:0])
			1'd0: begin
				builder_interface8_bank_bus_dat_r <= builder_csrbank8_r_enable0_w;
			end
			1'd1: begin
				builder_interface8_bank_bus_dat_r <= builder_csrbank8_r_width0_w;
			end
			2'd2: begin
				builder_interface8_bank_bus_dat_r <= builder_csrbank8_r_period0_w;
			end
			2'd3: begin
				builder_interface8_bank_bus_dat_r <= builder_csrbank8_g_enable0_w;
			end
			3'd4: begin
				builder_interface8_bank_bus_dat_r <= builder_csrbank8_g_width0_w;
			end
			3'd5: begin
				builder_interface8_bank_bus_dat_r <= builder_csrbank8_g_period0_w;
			end
			3'd6: begin
				builder_interface8_bank_bus_dat_r <= builder_csrbank8_b_enable0_w;
			end
			3'd7: begin
				builder_interface8_bank_bus_dat_r <= builder_csrbank8_b_width0_w;
			end
			4'd8: begin
				builder_interface8_bank_bus_dat_r <= builder_csrbank8_b_period0_w;
			end
		endcase
	end
	if (builder_csrbank8_r_enable0_re) begin
		basesoc_ledRGB_2_r_enable_storage <= builder_csrbank8_r_enable0_r;
	end
	basesoc_ledRGB_2_r_enable_re <= builder_csrbank8_r_enable0_re;
	if (builder_csrbank8_r_width0_re) begin
		basesoc_ledRGB_2_r_width_storage[31:0] <= builder_csrbank8_r_width0_r;
	end
	basesoc_ledRGB_2_r_width_re <= builder_csrbank8_r_width0_re;
	if (builder_csrbank8_r_period0_re) begin
		basesoc_ledRGB_2_r_period_storage[31:0] <= builder_csrbank8_r_period0_r;
	end
	basesoc_ledRGB_2_r_period_re <= builder_csrbank8_r_period0_re;
	if (builder_csrbank8_g_enable0_re) begin
		basesoc_ledRGB_2_g_enable_storage <= builder_csrbank8_g_enable0_r;
	end
	basesoc_ledRGB_2_g_enable_re <= builder_csrbank8_g_enable0_re;
	if (builder_csrbank8_g_width0_re) begin
		basesoc_ledRGB_2_g_width_storage[31:0] <= builder_csrbank8_g_width0_r;
	end
	basesoc_ledRGB_2_g_width_re <= builder_csrbank8_g_width0_re;
	if (builder_csrbank8_g_period0_re) begin
		basesoc_ledRGB_2_g_period_storage[31:0] <= builder_csrbank8_g_period0_r;
	end
	basesoc_ledRGB_2_g_period_re <= builder_csrbank8_g_period0_re;
	if (builder_csrbank8_b_enable0_re) begin
		basesoc_ledRGB_2_b_enable_storage <= builder_csrbank8_b_enable0_r;
	end
	basesoc_ledRGB_2_b_enable_re <= builder_csrbank8_b_enable0_re;
	if (builder_csrbank8_b_width0_re) begin
		basesoc_ledRGB_2_b_width_storage[31:0] <= builder_csrbank8_b_width0_r;
	end
	basesoc_ledRGB_2_b_width_re <= builder_csrbank8_b_width0_re;
	if (builder_csrbank8_b_period0_re) begin
		basesoc_ledRGB_2_b_period_storage[31:0] <= builder_csrbank8_b_period0_r;
	end
	basesoc_ledRGB_2_b_period_re <= builder_csrbank8_b_period0_re;
	builder_interface9_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank9_sel) begin
		case (builder_interface9_bank_bus_adr[0])
			1'd0: begin
				builder_interface9_bank_bus_dat_r <= builder_csrbank9_out0_w;
			end
		endcase
	end
	if (builder_csrbank9_out0_re) begin
		basesoc_leds_storage[9:0] <= builder_csrbank9_out0_r;
	end
	basesoc_leds_re <= builder_csrbank9_out0_re;
	builder_interface10_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank10_sel) begin
		case (builder_interface10_bank_bus_adr[1:0])
			1'd0: begin
				builder_interface10_bank_bus_dat_r <= builder_csrbank10_orden0_w;
			end
			1'd1: begin
				builder_interface10_bank_bus_dat_r <= basesoc_pwm_cntrl_eventmanager_status_w;
			end
			2'd2: begin
				builder_interface10_bank_bus_dat_r <= basesoc_pwm_cntrl_eventmanager_pending_w;
			end
			2'd3: begin
				builder_interface10_bank_bus_dat_r <= builder_csrbank10_ev_enable0_w;
			end
		endcase
	end
	if (builder_csrbank10_orden0_re) begin
		basesoc_pwm_cntrl_orden_storage[2:0] <= builder_csrbank10_orden0_r;
	end
	basesoc_pwm_cntrl_orden_re <= builder_csrbank10_orden0_re;
	if (builder_csrbank10_ev_enable0_re) begin
		basesoc_pwm_cntrl_eventmanager_storage <= builder_csrbank10_ev_enable0_r;
	end
	basesoc_pwm_cntrl_eventmanager_re <= builder_csrbank10_ev_enable0_re;
	builder_interface11_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank11_sel) begin
		case (builder_interface11_bank_bus_adr[0])
			1'd0: begin
				builder_interface11_bank_bus_dat_r <= builder_csrbank11_in_w;
			end
		endcase
	end
	builder_interface12_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank12_sel) begin
		case (builder_interface12_bank_bus_adr[2:0])
			1'd0: begin
				builder_interface12_bank_bus_dat_r <= builder_csrbank12_load0_w;
			end
			1'd1: begin
				builder_interface12_bank_bus_dat_r <= builder_csrbank12_reload0_w;
			end
			2'd2: begin
				builder_interface12_bank_bus_dat_r <= builder_csrbank12_en0_w;
			end
			2'd3: begin
				builder_interface12_bank_bus_dat_r <= builder_csrbank12_update_value0_w;
			end
			3'd4: begin
				builder_interface12_bank_bus_dat_r <= builder_csrbank12_value_w;
			end
			3'd5: begin
				builder_interface12_bank_bus_dat_r <= basesoc_basesoc_timer_eventmanager_status_w;
			end
			3'd6: begin
				builder_interface12_bank_bus_dat_r <= basesoc_basesoc_timer_eventmanager_pending_w;
			end
			3'd7: begin
				builder_interface12_bank_bus_dat_r <= builder_csrbank12_ev_enable0_w;
			end
		endcase
	end
	if (builder_csrbank12_load0_re) begin
		basesoc_basesoc_timer_load_storage[31:0] <= builder_csrbank12_load0_r;
	end
	basesoc_basesoc_timer_load_re <= builder_csrbank12_load0_re;
	if (builder_csrbank12_reload0_re) begin
		basesoc_basesoc_timer_reload_storage[31:0] <= builder_csrbank12_reload0_r;
	end
	basesoc_basesoc_timer_reload_re <= builder_csrbank12_reload0_re;
	if (builder_csrbank12_en0_re) begin
		basesoc_basesoc_timer_en_storage <= builder_csrbank12_en0_r;
	end
	basesoc_basesoc_timer_en_re <= builder_csrbank12_en0_re;
	if (builder_csrbank12_update_value0_re) begin
		basesoc_basesoc_timer_update_value_storage <= builder_csrbank12_update_value0_r;
	end
	basesoc_basesoc_timer_update_value_re <= builder_csrbank12_update_value0_re;
	if (builder_csrbank12_ev_enable0_re) begin
		basesoc_basesoc_timer_eventmanager_storage <= builder_csrbank12_ev_enable0_r;
	end
	basesoc_basesoc_timer_eventmanager_re <= builder_csrbank12_ev_enable0_re;
	builder_interface13_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank13_sel) begin
		case (builder_interface13_bank_bus_adr[2:0])
			1'd0: begin
				builder_interface13_bank_bus_dat_r <= basesoc_basesoc_uart_rxtx_w;
			end
			1'd1: begin
				builder_interface13_bank_bus_dat_r <= builder_csrbank13_txfull_w;
			end
			2'd2: begin
				builder_interface13_bank_bus_dat_r <= builder_csrbank13_rxempty_w;
			end
			2'd3: begin
				builder_interface13_bank_bus_dat_r <= basesoc_basesoc_uart_eventmanager_status_w;
			end
			3'd4: begin
				builder_interface13_bank_bus_dat_r <= basesoc_basesoc_uart_eventmanager_pending_w;
			end
			3'd5: begin
				builder_interface13_bank_bus_dat_r <= builder_csrbank13_ev_enable0_w;
			end
			3'd6: begin
				builder_interface13_bank_bus_dat_r <= builder_csrbank13_txempty_w;
			end
			3'd7: begin
				builder_interface13_bank_bus_dat_r <= builder_csrbank13_rxfull_w;
			end
		endcase
	end
	if (builder_csrbank13_ev_enable0_re) begin
		basesoc_basesoc_uart_eventmanager_storage[1:0] <= builder_csrbank13_ev_enable0_r;
	end
	basesoc_basesoc_uart_eventmanager_re <= builder_csrbank13_ev_enable0_re;
	builder_interface14_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank14_sel) begin
		case (builder_interface14_bank_bus_adr[2:0])
			1'd0: begin
				builder_interface14_bank_bus_dat_r <= basesoc_uart0_rxtx_w;
			end
			1'd1: begin
				builder_interface14_bank_bus_dat_r <= builder_csrbank14_txfull_w;
			end
			2'd2: begin
				builder_interface14_bank_bus_dat_r <= builder_csrbank14_rxempty_w;
			end
			2'd3: begin
				builder_interface14_bank_bus_dat_r <= basesoc_uart0_eventmanager0_status_w;
			end
			3'd4: begin
				builder_interface14_bank_bus_dat_r <= basesoc_uart0_eventmanager0_pending_w;
			end
			3'd5: begin
				builder_interface14_bank_bus_dat_r <= builder_csrbank14_ev_enable0_w;
			end
			3'd6: begin
				builder_interface14_bank_bus_dat_r <= builder_csrbank14_txempty_w;
			end
			3'd7: begin
				builder_interface14_bank_bus_dat_r <= builder_csrbank14_rxfull_w;
			end
		endcase
	end
	if (builder_csrbank14_ev_enable0_re) begin
		basesoc_uart0_eventmanager0_storage[1:0] <= builder_csrbank14_ev_enable0_r;
	end
	basesoc_uart0_eventmanager0_re <= builder_csrbank14_ev_enable0_re;
	builder_interface15_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank15_sel) begin
		case (builder_interface15_bank_bus_adr[0])
			1'd0: begin
				builder_interface15_bank_bus_dat_r <= builder_csrbank15_tuning_word0_w;
			end
		endcase
	end
	if (builder_csrbank15_tuning_word0_re) begin
		basesoc_uart1_phy_storage[31:0] <= builder_csrbank15_tuning_word0_r;
	end
	basesoc_uart1_phy_re <= builder_csrbank15_tuning_word0_re;
	builder_interface16_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank16_sel) begin
		case (builder_interface16_bank_bus_adr[2:0])
			1'd0: begin
				builder_interface16_bank_bus_dat_r <= basesoc_uart1_rxtx_w;
			end
			1'd1: begin
				builder_interface16_bank_bus_dat_r <= builder_csrbank16_txfull_w;
			end
			2'd2: begin
				builder_interface16_bank_bus_dat_r <= builder_csrbank16_rxempty_w;
			end
			2'd3: begin
				builder_interface16_bank_bus_dat_r <= basesoc_uart1_eventmanager1_status_w;
			end
			3'd4: begin
				builder_interface16_bank_bus_dat_r <= basesoc_uart1_eventmanager1_pending_w;
			end
			3'd5: begin
				builder_interface16_bank_bus_dat_r <= builder_csrbank16_ev_enable0_w;
			end
			3'd6: begin
				builder_interface16_bank_bus_dat_r <= builder_csrbank16_txempty_w;
			end
			3'd7: begin
				builder_interface16_bank_bus_dat_r <= builder_csrbank16_rxfull_w;
			end
		endcase
	end
	if (builder_csrbank16_ev_enable0_re) begin
		basesoc_uart1_eventmanager1_storage[1:0] <= builder_csrbank16_ev_enable0_r;
	end
	basesoc_uart1_eventmanager1_re <= builder_csrbank16_ev_enable0_re;
	builder_interface17_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank17_sel) begin
		case (builder_interface17_bank_bus_adr[0])
			1'd0: begin
				builder_interface17_bank_bus_dat_r <= builder_csrbank17_tuning_word0_w;
			end
		endcase
	end
	if (builder_csrbank17_tuning_word0_re) begin
		basesoc_uart2_phy_storage[31:0] <= builder_csrbank17_tuning_word0_r;
	end
	basesoc_uart2_phy_re <= builder_csrbank17_tuning_word0_re;
	builder_interface18_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank18_sel) begin
		case (builder_interface18_bank_bus_adr[0])
			1'd0: begin
				builder_interface18_bank_bus_dat_r <= builder_csrbank18_tuning_word0_w;
			end
		endcase
	end
	if (builder_csrbank18_tuning_word0_re) begin
		basesoc_basesoc_storage[31:0] <= builder_csrbank18_tuning_word0_r;
	end
	basesoc_basesoc_re <= builder_csrbank18_tuning_word0_re;
	builder_interface19_bank_bus_dat_r <= 1'd0;
	if (builder_csrbank19_sel) begin
		case (builder_interface19_bank_bus_adr[1:0])
			1'd0: begin
				builder_interface19_bank_bus_dat_r <= builder_csrbank19_mem_adr0_w;
			end
			1'd1: begin
				builder_interface19_bank_bus_dat_r <= builder_csrbank19_mem_we0_w;
			end
			2'd2: begin
				builder_interface19_bank_bus_dat_r <= builder_csrbank19_mem_data_w0_w;
			end
			2'd3: begin
				builder_interface19_bank_bus_dat_r <= builder_csrbank19_mem_data_r_w;
			end
		endcase
	end
	if (builder_csrbank19_mem_adr0_re) begin
		basesoc_mem_adr_storage[18:0] <= builder_csrbank19_mem_adr0_r;
	end
	basesoc_mem_adr_re <= builder_csrbank19_mem_adr0_re;
	if (builder_csrbank19_mem_we0_re) begin
		basesoc_mem_we_storage <= builder_csrbank19_mem_we0_r;
	end
	basesoc_mem_we_re <= builder_csrbank19_mem_we0_re;
	if (builder_csrbank19_mem_data_w0_re) begin
		basesoc_mem_data_w_storage[11:0] <= builder_csrbank19_mem_data_w0_r;
	end
	basesoc_mem_data_w_re <= builder_csrbank19_mem_data_w0_re;
	if (sys_rst) begin
		basesoc_basesoc_soccontroller_reset_storage <= 1'd0;
		basesoc_basesoc_soccontroller_reset_re <= 1'd0;
		basesoc_basesoc_soccontroller_scratch_storage <= 32'd305419896;
		basesoc_basesoc_soccontroller_scratch_re <= 1'd0;
		basesoc_basesoc_soccontroller_bus_errors <= 32'd0;
		basesoc_basesoc_ram_bus_ack <= 1'd0;
		basesoc_basesoc_interface0_ram_bus_ack <= 1'd0;
		basesoc_basesoc_interface1_ram_bus_ack <= 1'd0;
		serial_tx <= 1'd1;
		basesoc_basesoc_storage <= 32'd4947802;
		basesoc_basesoc_re <= 1'd0;
		basesoc_basesoc_sink_ready <= 1'd0;
		basesoc_basesoc_tx_clken <= 1'd0;
		basesoc_basesoc_tx_busy <= 1'd0;
		basesoc_basesoc_source_valid <= 1'd0;
		basesoc_basesoc_source_payload_data <= 8'd0;
		basesoc_basesoc_rx_clken <= 1'd0;
		basesoc_basesoc_rx_r <= 1'd0;
		basesoc_basesoc_rx_busy <= 1'd0;
		basesoc_basesoc_uart_tx_pending <= 1'd0;
		basesoc_basesoc_uart_tx_old_trigger <= 1'd0;
		basesoc_basesoc_uart_rx_pending <= 1'd0;
		basesoc_basesoc_uart_rx_old_trigger <= 1'd0;
		basesoc_basesoc_uart_eventmanager_storage <= 2'd0;
		basesoc_basesoc_uart_eventmanager_re <= 1'd0;
		basesoc_basesoc_uart_tx_fifo_readable <= 1'd0;
		basesoc_basesoc_uart_tx_fifo_level0 <= 5'd0;
		basesoc_basesoc_uart_tx_fifo_produce <= 4'd0;
		basesoc_basesoc_uart_tx_fifo_consume <= 4'd0;
		basesoc_basesoc_uart_rx_fifo_readable <= 1'd0;
		basesoc_basesoc_uart_rx_fifo_level0 <= 5'd0;
		basesoc_basesoc_uart_rx_fifo_produce <= 4'd0;
		basesoc_basesoc_uart_rx_fifo_consume <= 4'd0;
		basesoc_basesoc_timer_load_storage <= 32'd0;
		basesoc_basesoc_timer_load_re <= 1'd0;
		basesoc_basesoc_timer_reload_storage <= 32'd0;
		basesoc_basesoc_timer_reload_re <= 1'd0;
		basesoc_basesoc_timer_en_storage <= 1'd0;
		basesoc_basesoc_timer_en_re <= 1'd0;
		basesoc_basesoc_timer_update_value_storage <= 1'd0;
		basesoc_basesoc_timer_update_value_re <= 1'd0;
		basesoc_basesoc_timer_value_status <= 32'd0;
		basesoc_basesoc_timer_zero_pending <= 1'd0;
		basesoc_basesoc_timer_zero_old_trigger <= 1'd0;
		basesoc_basesoc_timer_eventmanager_storage <= 1'd0;
		basesoc_basesoc_timer_eventmanager_re <= 1'd0;
		basesoc_basesoc_timer_value <= 32'd0;
		basesoc_leds_storage <= 10'd0;
		basesoc_leds_re <= 1'd0;
		basesoc_dgt_count <= 3'd0;
		basesoc_dgt_tick <= 1'd0;
		basesoc_dgt_tick_count <= 18'd0;
		basesoc_dig_0_storage <= 8'd0;
		basesoc_dig_0_re <= 1'd0;
		basesoc_dig_1_storage <= 8'd0;
		basesoc_dig_1_re <= 1'd0;
		basesoc_dig_2_storage <= 8'd0;
		basesoc_dig_2_re <= 1'd0;
		basesoc_dig_3_storage <= 8'd0;
		basesoc_dig_3_re <= 1'd0;
		basesoc_dig_4_storage <= 8'd0;
		basesoc_dig_4_re <= 1'd0;
		basesoc_dig_5_storage <= 8'd0;
		basesoc_dig_5_re <= 1'd0;
		basesoc_dig_6_storage <= 8'd0;
		basesoc_dig_6_re <= 1'd0;
		basesoc_dig_7_storage <= 8'd0;
		basesoc_dig_7_re <= 1'd0;
		ledRGB1_r <= 1'd0;
		ledRGB1_g <= 1'd0;
		ledRGB1_b <= 1'd0;
		basesoc_ledRGB_1_r_enable_storage <= 1'd0;
		basesoc_ledRGB_1_r_enable_re <= 1'd0;
		basesoc_ledRGB_1_r_width_re <= 1'd0;
		basesoc_ledRGB_1_r_period_re <= 1'd0;
		basesoc_ledRGB_1_g_enable_storage <= 1'd0;
		basesoc_ledRGB_1_g_enable_re <= 1'd0;
		basesoc_ledRGB_1_g_width_re <= 1'd0;
		basesoc_ledRGB_1_g_period_re <= 1'd0;
		basesoc_ledRGB_1_b_enable_storage <= 1'd0;
		basesoc_ledRGB_1_b_enable_re <= 1'd0;
		basesoc_ledRGB_1_b_width_re <= 1'd0;
		basesoc_ledRGB_1_b_period_re <= 1'd0;
		ledRGB2_r <= 1'd0;
		ledRGB2_g <= 1'd0;
		ledRGB2_b <= 1'd0;
		basesoc_ledRGB_2_r_enable_storage <= 1'd0;
		basesoc_ledRGB_2_r_enable_re <= 1'd0;
		basesoc_ledRGB_2_r_width_re <= 1'd0;
		basesoc_ledRGB_2_r_period_re <= 1'd0;
		basesoc_ledRGB_2_g_enable_storage <= 1'd0;
		basesoc_ledRGB_2_g_enable_re <= 1'd0;
		basesoc_ledRGB_2_g_width_re <= 1'd0;
		basesoc_ledRGB_2_g_period_re <= 1'd0;
		basesoc_ledRGB_2_b_enable_storage <= 1'd0;
		basesoc_ledRGB_2_b_enable_re <= 1'd0;
		basesoc_ledRGB_2_b_width_re <= 1'd0;
		basesoc_ledRGB_2_b_period_re <= 1'd0;
		basesoc_h_count <= 10'd0;
		basesoc_v_count <= 10'd0;
		basesoc_pxl_tick_count <= 2'd0;
		basesoc_pxl_tick <= 1'd0;
		basesoc_p_r_adr <= 19'd0;
		basesoc_mem_adr_storage <= 19'd0;
		basesoc_mem_adr_re <= 1'd0;
		basesoc_mem_we_storage <= 1'd0;
		basesoc_mem_we_re <= 1'd0;
		basesoc_mem_data_w_storage <= 12'd0;
		basesoc_mem_data_w_re <= 1'd0;
		uart1_tx <= 1'd1;
		basesoc_uart1_phy_storage <= 32'd4947802;
		basesoc_uart1_phy_re <= 1'd0;
		basesoc_uart1_phy_sink_ready <= 1'd0;
		basesoc_uart1_phy_tx_clken <= 1'd0;
		basesoc_uart1_phy_tx_busy <= 1'd0;
		basesoc_uart1_phy_source_valid <= 1'd0;
		basesoc_uart1_phy_source_payload_data <= 8'd0;
		basesoc_uart1_phy_rx_clken <= 1'd0;
		basesoc_uart1_phy_rx_r <= 1'd0;
		basesoc_uart1_phy_rx_busy <= 1'd0;
		basesoc_uart0_tx_pending <= 1'd0;
		basesoc_uart0_tx_old_trigger <= 1'd0;
		basesoc_uart0_rx_pending <= 1'd0;
		basesoc_uart0_rx_old_trigger <= 1'd0;
		basesoc_uart0_eventmanager0_storage <= 2'd0;
		basesoc_uart0_eventmanager0_re <= 1'd0;
		basesoc_uart0_tx_fifo_readable <= 1'd0;
		basesoc_uart0_tx_fifo_level0 <= 5'd0;
		basesoc_uart0_tx_fifo_produce <= 4'd0;
		basesoc_uart0_tx_fifo_consume <= 4'd0;
		basesoc_uart0_rx_fifo_readable <= 1'd0;
		basesoc_uart0_rx_fifo_level0 <= 5'd0;
		basesoc_uart0_rx_fifo_produce <= 4'd0;
		basesoc_uart0_rx_fifo_consume <= 4'd0;
		uart2_tx <= 1'd1;
		basesoc_uart2_phy_storage <= 32'd412316;
		basesoc_uart2_phy_re <= 1'd0;
		basesoc_uart2_phy_sink_ready <= 1'd0;
		basesoc_uart2_phy_tx_clken <= 1'd0;
		basesoc_uart2_phy_tx_busy <= 1'd0;
		basesoc_uart2_phy_source_valid <= 1'd0;
		basesoc_uart2_phy_source_payload_data <= 8'd0;
		basesoc_uart2_phy_rx_clken <= 1'd0;
		basesoc_uart2_phy_rx_r <= 1'd0;
		basesoc_uart2_phy_rx_busy <= 1'd0;
		basesoc_uart1_tx_pending <= 1'd0;
		basesoc_uart1_tx_old_trigger <= 1'd0;
		basesoc_uart1_rx_pending <= 1'd0;
		basesoc_uart1_rx_old_trigger <= 1'd0;
		basesoc_uart1_eventmanager1_storage <= 2'd0;
		basesoc_uart1_eventmanager1_re <= 1'd0;
		basesoc_uart1_tx_fifo_readable <= 1'd0;
		basesoc_uart1_tx_fifo_level0 <= 5'd0;
		basesoc_uart1_tx_fifo_produce <= 4'd0;
		basesoc_uart1_tx_fifo_consume <= 4'd0;
		basesoc_uart1_rx_fifo_readable <= 1'd0;
		basesoc_uart1_rx_fifo_level0 <= 5'd0;
		basesoc_uart1_rx_fifo_produce <= 4'd0;
		basesoc_uart1_rx_fifo_consume <= 4'd0;
		basesoc_pwm_cntrl_orden_storage <= 3'd0;
		basesoc_pwm_cntrl_orden_re <= 1'd0;
		basesoc_pwm_cntrl_pending <= 1'd0;
		basesoc_pwm_cntrl_old_trigger <= 1'd0;
		basesoc_pwm_cntrl_eventmanager_storage <= 1'd0;
		basesoc_pwm_cntrl_eventmanager_re <= 1'd0;
		basesoc_US_cntrl_orden_storage <= 1'd0;
		basesoc_US_cntrl_orden_re <= 1'd0;
		basesoc_US_cntrl_ok_pending <= 1'd0;
		basesoc_US_cntrl_ok_old_trigger <= 1'd0;
		basesoc_US_cntrl_eventmanager_storage <= 1'd0;
		basesoc_US_cntrl_eventmanager_re <= 1'd0;
		basesoc_Process_cntrl_enable_storage <= 1'd0;
		basesoc_Process_cntrl_enable_re <= 1'd0;
		basesoc_Process_cntrl_CAM_reset_storage <= 1'd0;
		basesoc_Process_cntrl_CAM_reset_re <= 1'd0;
		basesoc_Process_cntrl_ok_pending <= 1'd0;
		basesoc_Process_cntrl_ok_old_trigger <= 1'd0;
		basesoc_Process_cntrl_eventmanager_storage <= 1'd0;
		basesoc_Process_cntrl_eventmanager_re <= 1'd0;
		builder_slave_sel_r <= 4'd0;
		builder_count <= 20'd1000000;
		builder_state <= 1'd0;
	end
	builder_xilinxmultiregimpl0_regs0 <= serial_rx;
	builder_xilinxmultiregimpl0_regs1 <= builder_xilinxmultiregimpl0_regs0;
	builder_xilinxmultiregimpl1_regs0 <= {sw7, sw6, sw5, sw4, sw3, sw2, sw1, sw0};
	builder_xilinxmultiregimpl1_regs1 <= builder_xilinxmultiregimpl1_regs0;
	builder_xilinxmultiregimpl2_regs0 <= {btnl, btnr, btnc};
	builder_xilinxmultiregimpl2_regs1 <= builder_xilinxmultiregimpl2_regs0;
	builder_xilinxmultiregimpl3_regs0 <= {btnH, btnI};
	builder_xilinxmultiregimpl3_regs1 <= builder_xilinxmultiregimpl3_regs0;
	builder_xilinxmultiregimpl4_regs0 <= uart1_rx;
	builder_xilinxmultiregimpl4_regs1 <= builder_xilinxmultiregimpl4_regs0;
	builder_xilinxmultiregimpl5_regs0 <= uart2_rx;
	builder_xilinxmultiregimpl5_regs1 <= builder_xilinxmultiregimpl5_regs0;
	builder_xilinxmultiregimpl6_regs0 <= {infrarrojos2, infrarrojos1, infrarrojos0};
	builder_xilinxmultiregimpl6_regs1 <= builder_xilinxmultiregimpl6_regs0;
end

reg [31:0] mem[0:8191];
reg [31:0] memdat;
always @(posedge sys_clk) begin
	memdat <= mem[basesoc_basesoc_adr];
end

assign basesoc_basesoc_dat_r = memdat;

initial begin
	$readmemh("mem.init", mem);
end

reg [31:0] mem_1[0:2047];
reg [10:0] memadr;
always @(posedge sys_clk) begin
	if (basesoc_basesoc_sram0_we[0])
		mem_1[basesoc_basesoc_sram0_adr][7:0] <= basesoc_basesoc_sram0_dat_w[7:0];
	if (basesoc_basesoc_sram0_we[1])
		mem_1[basesoc_basesoc_sram0_adr][15:8] <= basesoc_basesoc_sram0_dat_w[15:8];
	if (basesoc_basesoc_sram0_we[2])
		mem_1[basesoc_basesoc_sram0_adr][23:16] <= basesoc_basesoc_sram0_dat_w[23:16];
	if (basesoc_basesoc_sram0_we[3])
		mem_1[basesoc_basesoc_sram0_adr][31:24] <= basesoc_basesoc_sram0_dat_w[31:24];
	memadr <= basesoc_basesoc_sram0_adr;
end

assign basesoc_basesoc_sram0_dat_r = mem_1[memadr];

initial begin
	$readmemh("mem_1.init", mem_1);
end

reg [31:0] mem_2[0:4095];
reg [11:0] memadr_1;
always @(posedge sys_clk) begin
	if (basesoc_basesoc_sram1_we[0])
		mem_2[basesoc_basesoc_sram1_adr][7:0] <= basesoc_basesoc_sram1_dat_w[7:0];
	if (basesoc_basesoc_sram1_we[1])
		mem_2[basesoc_basesoc_sram1_adr][15:8] <= basesoc_basesoc_sram1_dat_w[15:8];
	if (basesoc_basesoc_sram1_we[2])
		mem_2[basesoc_basesoc_sram1_adr][23:16] <= basesoc_basesoc_sram1_dat_w[23:16];
	if (basesoc_basesoc_sram1_we[3])
		mem_2[basesoc_basesoc_sram1_adr][31:24] <= basesoc_basesoc_sram1_dat_w[31:24];
	memadr_1 <= basesoc_basesoc_sram1_adr;
end

assign basesoc_basesoc_sram1_dat_r = mem_2[memadr_1];

initial begin
	$readmemh("mem_2.init", mem_2);
end

reg [9:0] storage[0:15];
reg [9:0] memdat_1;
reg [9:0] memdat_2;
always @(posedge sys_clk) begin
	if (basesoc_basesoc_uart_tx_fifo_wrport_we)
		storage[basesoc_basesoc_uart_tx_fifo_wrport_adr] <= basesoc_basesoc_uart_tx_fifo_wrport_dat_w;
	memdat_1 <= storage[basesoc_basesoc_uart_tx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (basesoc_basesoc_uart_tx_fifo_rdport_re)
		memdat_2 <= storage[basesoc_basesoc_uart_tx_fifo_rdport_adr];
end

assign basesoc_basesoc_uart_tx_fifo_wrport_dat_r = memdat_1;
assign basesoc_basesoc_uart_tx_fifo_rdport_dat_r = memdat_2;

reg [9:0] storage_1[0:15];
reg [9:0] memdat_3;
reg [9:0] memdat_4;
always @(posedge sys_clk) begin
	if (basesoc_basesoc_uart_rx_fifo_wrport_we)
		storage_1[basesoc_basesoc_uart_rx_fifo_wrport_adr] <= basesoc_basesoc_uart_rx_fifo_wrport_dat_w;
	memdat_3 <= storage_1[basesoc_basesoc_uart_rx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (basesoc_basesoc_uart_rx_fifo_rdport_re)
		memdat_4 <= storage_1[basesoc_basesoc_uart_rx_fifo_rdport_adr];
end

assign basesoc_basesoc_uart_rx_fifo_wrport_dat_r = memdat_3;
assign basesoc_basesoc_uart_rx_fifo_rdport_dat_r = memdat_4;

reg [11:0] mem_3[0:307199];
reg [18:0] memadr_2;
reg [18:0] memadr_3;
always @(posedge sys_clk) begin
	memadr_2 <= basesoc_p_r_adr;
end

always @(posedge sys_clk) begin
	if (basesoc_p_w_we)
		mem_3[basesoc_p_w_adr] <= basesoc_p_w_dat_w;
	memadr_3 <= basesoc_p_w_adr;
end

assign basesoc_p_r_dat_r = mem_3[memadr_2];
assign basesoc_p_w_dat_r = mem_3[memadr_3];

reg [9:0] storage_2[0:15];
reg [9:0] memdat_5;
reg [9:0] memdat_6;
always @(posedge sys_clk) begin
	if (basesoc_uart0_tx_fifo_wrport_we)
		storage_2[basesoc_uart0_tx_fifo_wrport_adr] <= basesoc_uart0_tx_fifo_wrport_dat_w;
	memdat_5 <= storage_2[basesoc_uart0_tx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (basesoc_uart0_tx_fifo_rdport_re)
		memdat_6 <= storage_2[basesoc_uart0_tx_fifo_rdport_adr];
end

assign basesoc_uart0_tx_fifo_wrport_dat_r = memdat_5;
assign basesoc_uart0_tx_fifo_rdport_dat_r = memdat_6;

reg [9:0] storage_3[0:15];
reg [9:0] memdat_7;
reg [9:0] memdat_8;
always @(posedge sys_clk) begin
	if (basesoc_uart0_rx_fifo_wrport_we)
		storage_3[basesoc_uart0_rx_fifo_wrport_adr] <= basesoc_uart0_rx_fifo_wrport_dat_w;
	memdat_7 <= storage_3[basesoc_uart0_rx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (basesoc_uart0_rx_fifo_rdport_re)
		memdat_8 <= storage_3[basesoc_uart0_rx_fifo_rdport_adr];
end

assign basesoc_uart0_rx_fifo_wrport_dat_r = memdat_7;
assign basesoc_uart0_rx_fifo_rdport_dat_r = memdat_8;

reg [9:0] storage_4[0:15];
reg [9:0] memdat_9;
reg [9:0] memdat_10;
always @(posedge sys_clk) begin
	if (basesoc_uart1_tx_fifo_wrport_we)
		storage_4[basesoc_uart1_tx_fifo_wrport_adr] <= basesoc_uart1_tx_fifo_wrport_dat_w;
	memdat_9 <= storage_4[basesoc_uart1_tx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (basesoc_uart1_tx_fifo_rdport_re)
		memdat_10 <= storage_4[basesoc_uart1_tx_fifo_rdport_adr];
end

assign basesoc_uart1_tx_fifo_wrport_dat_r = memdat_9;
assign basesoc_uart1_tx_fifo_rdport_dat_r = memdat_10;

reg [9:0] storage_5[0:15];
reg [9:0] memdat_11;
reg [9:0] memdat_12;
always @(posedge sys_clk) begin
	if (basesoc_uart1_rx_fifo_wrport_we)
		storage_5[basesoc_uart1_rx_fifo_wrport_adr] <= basesoc_uart1_rx_fifo_wrport_dat_w;
	memdat_11 <= storage_5[basesoc_uart1_rx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (basesoc_uart1_rx_fifo_rdport_re)
		memdat_12 <= storage_5[basesoc_uart1_rx_fifo_rdport_adr];
end

assign basesoc_uart1_rx_fifo_wrport_dat_r = memdat_11;
assign basesoc_uart1_rx_fifo_rdport_dat_r = memdat_12;

bloquePWM bloquePWM(
	.clk(sys_clk),
	.orden(basesoc_pwm_cntrl_orden_storage),
	.pwm(pwm)
);

bloqueultrasonido bloqueultrasonido(
	.ECHO(ECHO),
	.clk(sys_clk),
	.orden(basesoc_US_cntrl_orden_storage),
	.DONE(basesoc_US_cntrl_DONE_status),
	.d(basesoc_US_cntrl_d_status),
	.trigg(trigg)
);

imageProcess imageProcess(
	.CAM_href(CAM_href),
	.CAM_pclk(CAM_pclk),
	.CAM_px_data({CAM_px_data7, CAM_px_data6, CAM_px_data5, CAM_px_data4, CAM_px_data3, CAM_px_data2, CAM_px_data1, CAM_px_data0}),
	.CAM_reset(basesoc_Process_cntrl_CAM_reset_storage),
	.CAM_vsync(CAM_vsync),
	.clk(sys_clk),
	.enable(basesoc_Process_cntrl_enable_storage),
	.AnchoIgual(basesoc_Process_cntrl_AnchoIgual_status),
	.AnchoMayor(basesoc_Process_cntrl_AnchoMayor_status),
	.AnchoMenor(basesoc_Process_cntrl_AnchoMenor_status),
	.CAM_pwdn(CAM_pwdn),
	.CAM_xclk(CAM_xclk),
	.END(basesoc_Process_cntrl_END_status),
	.blueCounter(basesoc_Process_cntrl_blueCounter_status),
	.greenCounter(basesoc_Process_cntrl_greenCounter_status),
	.nothingCounter(basesoc_Process_cntrl_nothingCounter_status),
	.redCounter(basesoc_Process_cntrl_redCounter_status)
);

picorv32 #(
	.CATCH_ILLINSN(1'd1),
	.CATCH_MISALIGN(1'd1),
	.ENABLE_COUNTERS(1'd1),
	.ENABLE_COUNTERS64(1'd1),
	.ENABLE_DIV(1'd1),
	.ENABLE_FAST_MUL(1'd0),
	.ENABLE_IRQ(1'd1),
	.ENABLE_IRQ_QREGS(1'd1),
	.ENABLE_IRQ_TIMER(1'd1),
	.ENABLE_MUL(1'd1),
	.ENABLE_PCPI(1'd0),
	.ENABLE_REGS_16_31(1'd1),
	.ENABLE_REGS_DUALPORT(1'd1),
	.ENABLE_TRACE(1'd0),
	.LATCHED_IRQ(32'd4294967295),
	.LATCHED_MEM_RDATA(1'd0),
	.MASKED_IRQ(1'd0),
	.PROGADDR_IRQ(5'd16),
	.PROGADDR_RESET(1'd0),
	.STACKADDR(32'd4294967295),
	.TWO_CYCLE_ALU(1'd0),
	.TWO_CYCLE_COMPARE(1'd0),
	.TWO_STAGE_SHIFT(1'd1)
) picorv32 (
	.clk(sys_clk),
	.irq(basesoc_basesoc_picorv32_interrupt),
	.mem_rdata(basesoc_basesoc_picorv32_mem_rdata),
	.mem_ready(basesoc_basesoc_picorv32_mem_ready),
	.pcpi_rd(1'd0),
	.pcpi_ready(1'd0),
	.pcpi_wait(1'd0),
	.pcpi_wr(1'd0),
	.resetn((~(sys_rst | basesoc_basesoc_picorv32_reset))),
	.eoi(basesoc_basesoc_picorv329),
	.mem_addr(basesoc_basesoc_picorv32_mem_addr),
	.mem_instr(basesoc_basesoc_picorv32_mem_instr),
	.mem_la_addr(basesoc_basesoc_picorv322),
	.mem_la_read(basesoc_basesoc_picorv320),
	.mem_la_wdata(basesoc_basesoc_picorv323),
	.mem_la_write(basesoc_basesoc_picorv321),
	.mem_la_wstrb(basesoc_basesoc_picorv324),
	.mem_valid(basesoc_basesoc_picorv32_mem_valid),
	.mem_wdata(basesoc_basesoc_picorv32_mem_wdata),
	.mem_wstrb(basesoc_basesoc_picorv32_mem_wstrb),
	.pcpi_insn(basesoc_basesoc_picorv326),
	.pcpi_rs1(basesoc_basesoc_picorv327),
	.pcpi_rs2(basesoc_basesoc_picorv328),
	.pcpi_valid(basesoc_basesoc_picorv325),
	.trap(basesoc_basesoc_picorv32_trap)
);

endmodule
